using Test, PolynomialOptimization.SimplePolynomials, PolynomialOptimization.Solver
using JuliaInterpreter # we choose to interpret the callback functions, so that the whole testsuite can run in <2 minutes. The compilation cost is quite enormous, so not doing this would lead to >10 minutes run time (which would not be better if we were to dispatch on the test instances to different methods).
using PolynomialOptimization.Solver: AbstractPSDIndextype
using PolynomialOptimization: sort_along!

function checkequality(indvals, supposed_indices, supposed_values, exact::Bool=false)
    # we don't have any guarantee that the indices are ordered
    indices, values = indvals.indices, indvals.values
    sort_along!(indices, values)
    # sometimes, cancellations may happen that will give rise to explicit zeros, but the test code generation will have them dropped
    keeppos = findall(!iszero, values)
    @views return indices[keeppos] == supposed_indices && (exact ? values[keeppos] == supposed_values : isapprox(values[keeppos], supposed_values, atol=1e-13))
end

function checkequality(rows, supposed_rows, cols, supposed_cols, values, supposed_values)
    sort_along!(rows, cols, values, relevant=2)
    sort_along!(supposed_rows, supposed_cols, supposed_values, relevant=2)
    keeppos = findall(!iszero, values)
    @views return rows[keeppos] == supposed_rows && cols[keeppos] == supposed_cols && values[keeppos] == supposed_values
end

macro checkequals(lowerind, lowerval, upperind, upperval, fullind, fullval)
    esc(quote
        if tri === :L
            @test checkequality(iter[1], $lowerind, $lowerval)
        elseif tri === :U
            @test checkequality(iter[1], $upperind, $upperval)
        else
            @test checkequality(iter[1], $fullind, $fullval, true)
        end
        iter = iterate(data, iter[2])
    end)
end

macro checkequals(ind, lowerrows, lowercols, lowervals)
    esc(quote
        # it may rarely happen that we end up with a all-zeros entry, which would not be present in the test
        while iter[1].first < $ind && all(iszero, iter[1].second[3])
            iter = iterate(data, iter[2])
        end
        @test iter[1].first == $ind
        if tri === :L
            @test checkequality(iter[1].second[1], $lowerrows, iter[1].second[2], $lowercols, iter[1].second[3], $lowervals)
        else
            @test checkequality(iter[1].second[1], $lowercols, iter[1].second[2], $lowerrows, iter[1].second[3], conj.($lowervals))
        end
        iter = iterate(data, iter[2])
    end)
end

macro checkequals(fullind, fullval)
    esc(quote
        @test checkequality(iter[1], $fullind, $fullval, true)
        iter = iterate(data, iter[2])
    end)
end

mutable struct SolverSetup{Linear,Quadratic,PSD,SupportsComplexPSD,Fixed}
    const instance::Int
    lastcall::Symbol
    const fixed_available::Set{UInt}

    function SolverSetup(instance::Int; linear::Bool=false, quadratic::Bool=false,
        psd::Union{Bool,<:AbstractPSDIndextype}=false, complex_psd::Bool=false, fixed::Bool=false)
        @assert psd !== true
        new{linear,quadratic,psd,complex_psd,fixed}(instance, :none, Set{UInt}())
    end
end

Solver.mindex(::SolverSetup, monomials::SimpleMonomialOrConj...) = BigInt(monomial_index(monomials...) + 48)
Solver.supports_quadratic(::SolverSetup{<:Any,true}) = SOLVER_QUADRATIC_RSOC
Solver.psd_indextype(::SolverSetup{<:Any,<:Any,psd}) where {psd} = psd
Solver.psd_indextype(::SolverSetup{<:Any,<:Any,false}) = PSDIndextypeMatrixCartesian(:U, typemin(Int)) # should only be triggered for linear/quadratic case, and then the offset is ignored
Solver.supports_complex_psd(::SolverSetup{<:Any,<:Any,<:Any,true}) = true

function momenttest(instance, grouping, constraint, type)
    if type === :linear
        states = (SolverSetup(instance, linear=true),)
    elseif type === :quadratic
        states = (SolverSetup(instance, quadratic=true),)
    elseif type === :psdr
        states = (SolverSetup(instance, psd=PSDIndextypeVector(:L)),
                  SolverSetup(instance, psd=PSDIndextypeVector(:U)),
                  SolverSetup(instance, psd=PSDIndextypeVector(:F)),
                  SolverSetup(instance, psd=PSDIndextypeMatrixCartesian(:L, 17)),
                  SolverSetup(instance, psd=PSDIndextypeMatrixCartesian(:U, 17)))
    elseif type === :psdc
        states = (SolverSetup(instance, psd=PSDIndextypeVector(:L), complex_psd=true),
                  SolverSetup(instance, psd=PSDIndextypeVector(:U), complex_psd=true),
                  SolverSetup(instance, psd=PSDIndextypeVector(:F), complex_psd=true),
                  SolverSetup(instance, psd=PSDIndextypeMatrixCartesian(:L, 17), complex_psd=true),
                  SolverSetup(instance, psd=PSDIndextypeMatrixCartesian(:U, 17), complex_psd=true))
    elseif type === :equality
        state = SolverSetup(instance, fixed=true)
        moment_add_equality!(state, grouping, constraint)
        @test state.lastcall === :add_constr_fix_finalize
        return
    else
        @assert(false)
    end
    for state in states
        moment_add_matrix!(state, grouping, constraint)
        @test state.lastcall === type
    end
    return
end

Solver.add_constr_nonnegative!(state::SolverSetup{true,false,false,false,false}, indvals::AbstractIndvals{BigInt,BigFloat}) =
    @interpret add_constr_nonnegative_worker!(state, indvals)

function add_constr_nonnegative_worker!(state::SolverSetup{true,false,false,false,false}, indvals::AbstractIndvals{BigInt,BigFloat})
    @test state.lastcall === :none
    state.lastcall = :linear
    if state.instance == 1
        @test checkequality(indvals, BigInt[20842], BigFloat[17], true)
    elseif state.instance == 2
        @test checkequality(indvals, BigInt[17827], BigFloat[24], true)
    elseif state.instance == 3
        @test checkequality(indvals, BigInt[5684,17833], BigFloat[2,8], true)
    elseif state.instance == 4
        @test checkequality(indvals, BigInt[4736], BigFloat[6], true)
    elseif state.instance == 5
        @test checkequality(indvals, BigInt[17668], BigFloat[14], true)
    elseif state.instance == 6
        @test checkequality(indvals, BigInt[4736,4737,5684,9383,17666,17833], BigFloat[8,16,3,4,14,5], true)
    elseif state.instance == 7
        @test checkequality(indvals, BigInt[20830], BigFloat[17], true)
    elseif state.instance == 8
        @test checkequality(indvals, BigInt[17744], BigFloat[24], true)
    elseif state.instance == 9
        @test checkequality(indvals, BigInt[5672,17777], BigFloat[2,8], true)
    elseif state.instance == 10
        @test checkequality(indvals, BigInt[4699], BigFloat[6], true)
    elseif state.instance == 11
        @test checkequality(indvals, BigInt[17502], BigFloat[14], true)
    elseif state.instance == 12
        @test checkequality(indvals, BigInt[4699,4702,5672,9297,17496,17777], BigFloat[8,16,3,4,14,5], true)
    else
        @test false
    end
end

Solver.add_constr_quadratic!(state::SolverSetup{false,true,false,false,false}, indvals::AbstractIndvals{BigInt,BigFloat}...) =
    @interpret add_constr_quadratic_worker!(state, indvals...)

function Solver.add_constr_quadratic_worker!(state::SolverSetup{false,true,false,false,false}, indvals::AbstractIndvals{BigInt,BigFloat}...)
    @test state.lastcall === :none
    state.lastcall = :quadratic
    if state.instance == 13
        @test length(indvals) == 3
        @test checkequality(indvals[1], BigInt[23048], BigFloat[17], true)
        @test checkequality(indvals[2], BigInt[169998], BigFloat[17], true)
        @test checkequality(indvals[3], BigInt[68265], BigFloat[24.041630560342618])
    elseif state.instance == 15
        @test length(indvals) == 3
        @test checkequality(indvals[1], BigInt[21922], BigFloat[24], true)
        @test checkequality(indvals[2], BigInt[151422], BigFloat[24], true)
        @test checkequality(indvals[3], BigInt[63204], BigFloat[33.941125496954285])
    elseif state.instance == 17
        @test length(indvals) == 3
        @test checkequality(indvals[1], BigInt[6223,21928], BigFloat[2,8], true)
        @test checkequality(indvals[2], BigInt[63728,151428], BigFloat[2,8], true)
        @test checkequality(indvals[3], BigInt[22426,63210], BigFloat[2.8284271247461903,11.313708498984761])
    elseif state.instance == 19
        @test length(indvals) == 3
        @test checkequality(indvals[1], BigInt[5815], BigFloat[6], true)
        @test checkequality(indvals[2], BigInt[55255], BigFloat[6], true)
        @test checkequality(indvals[3], BigInt[20441], BigFloat[8.485281374238571])
    elseif state.instance == 21
        @test length(indvals) == 3
        @test checkequality(indvals[1], BigInt[21232], BigFloat[14], true)
        @test checkequality(indvals[2], BigInt[150102], BigFloat[14], true)
        @test checkequality(indvals[3], BigInt[62324], BigFloat[19.79898987322333])
    elseif state.instance == 23
        @test length(indvals) == 3
        @test checkequality(indvals[1], BigInt[5815,5816,6223,11399,21230,21928], BigFloat[8,16,3,4,14,5], true)
        @test checkequality(indvals[2], BigInt[55255,55256,63728,92459,150100,151428], BigFloat[8,16,3,4,14,5], true)
        @test checkequality(indvals[3], BigInt[20441,20442,22426,36378,62322,63210], BigFloat[11.313708498984761,22.627416997969522,4.242640687119286,5.656854249492381,19.79898987322333,7.0710678118654755])
    elseif state.instance == 25
        @test length(indvals) == 4
        @test checkequality(indvals[1], BigInt[20830], BigFloat[17], true)
        @test checkequality(indvals[2], BigInt[23048], BigFloat[17], true)
        @test checkequality(indvals[3], BigInt[22409], BigFloat[24.041630560342618])
        @test checkequality(indvals[4], BigInt[22410], BigFloat[-24.041630560342618])
    elseif state.instance == 28
        @test length(indvals) == 4
        @test checkequality(indvals[1], BigInt[17744], BigFloat[24], true)
        @test checkequality(indvals[2], BigInt[21922], BigFloat[24], true)
        @test checkequality(indvals[3], BigInt[20571], BigFloat[33.941125496954285])
        @test checkequality(indvals[4], BigInt[20574], BigFloat[-33.941125496954285])
    elseif state.instance == 31
        @test length(indvals) == 4
        @test checkequality(indvals[1], BigInt[5672,17777], BigFloat[2,8], true)
        @test checkequality(indvals[2], BigInt[6223,21928], BigFloat[2,8], true)
        @test checkequality(indvals[3], BigInt[6102,20588], BigFloat[2.8284271247461903,11.313708498984761])
        @test checkequality(indvals[4], BigInt[6103,20589], BigFloat[-2.8284271247461903,-11.313708498984761])
    elseif state.instance == 34
        @test length(indvals) == 4
        @test checkequality(indvals[1], BigInt[4699], BigFloat[6], true)
        @test checkequality(indvals[2], BigInt[5815], BigFloat[6], true)
        @test checkequality(indvals[3], BigInt[5542,5545], BigFloat[4.242640687119286,4.242640687119286])
        @test checkequality(indvals[4], BigInt[5546], BigFloat[-4.242640687119286])
    elseif state.instance == 37
        @test length(indvals) == 4
        @test checkequality(indvals[1], BigInt[17502], BigFloat[14], true)
        @test checkequality(indvals[2], BigInt[21232], BigFloat[14], true)
        @test checkequality(indvals[3], BigInt[20164,20168], BigFloat[-9.899494936611665,9.899494936611665])
        @test checkequality(indvals[4], BigInt[20154,20162], BigFloat[9.899494936611665,-9.899494936611665])
    elseif state.instance == 40
        @test length(indvals) == 4
        @test checkequality(indvals[1], BigInt[4699,4702,5672,9297,17496,17777], BigFloat[8,16,3,4,14,5], true)
        @test checkequality(indvals[2], BigInt[5815,5816,6223,11399,21230,21928], BigFloat[8,16,3,4,14,5], true)
        @test checkequality(indvals[3], BigInt[5542,5545,5546,6102,10837,20156,20166,20588], BigFloat[5.656854249492381,5.656854249492381,11.313708498984761,4.242640687119286,5.656854249492381,9.899494936611665,9.899494936611665,7.0710678118654755])
        @test checkequality(indvals[4], BigInt[5542,5545,5546,6103,10843,20171,20174,20589], BigFloat[11.313708498984761,-11.313708498984761,-5.656854249492381,-4.242640687119286,-5.656854249492381,9.899494936611665,-9.899494936611665,-7.0710678118654755])
    elseif state.instance == 43
        @test length(indvals) == 3
        @test checkequality(indvals[1], BigInt[31799], BigFloat[17], true)
        @test checkequality(indvals[2], BigInt[17770], BigFloat[6], true)
        @test checkequality(indvals[3], BigInt[9460], BigFloat[11.313708498984761])
    elseif state.instance == 45
        @test length(indvals) == 3
        @test checkequality(indvals[1], BigInt[31799], BigFloat[17], true)
        @test checkequality(indvals[2], BigInt[17770], BigFloat[6], true)
        @test checkequality(indvals[3], BigInt[9460], BigFloat[11.313708498984761])
    elseif state.instance == 48
        @test length(indvals) == 4
        @test checkequality(indvals[1], BigInt[31799], BigFloat[17], true)
        @test checkequality(indvals[2], BigInt[17770], BigFloat[6], true)
        @test checkequality(indvals[3], BigInt[9278], BigFloat[11.313708498984761])
        @test checkequality(indvals[4], BigInt[9280], BigFloat[-11.313708498984761])
    elseif state.instance == 51
        @test length(indvals) == 4
        @test checkequality(indvals[1], BigInt[31799], BigFloat[17], true)
        @test checkequality(indvals[2], BigInt[17770], BigFloat[6], true)
        @test checkequality(indvals[3], BigInt[9280], BigFloat[11.313708498984761])
        @test checkequality(indvals[4], BigInt[9278], BigFloat[11.313708498984761])
    elseif state.instance == 54
        @test length(indvals) == 4
        @test checkequality(indvals[1], BigInt[31799], BigFloat[17], true)
        @test checkequality(indvals[2], BigInt[17770], BigFloat[6], true)
        @test checkequality(indvals[3], BigInt[9278,9280], BigFloat[11.313708498984761,2.8284271247461903])
        @test checkequality(indvals[4], BigInt[9278,9280], BigFloat[2.8284271247461903,-11.313708498984761])
    elseif state.instance == 57
        @test length(indvals) == 4
        @test checkequality(indvals[1], BigInt[9460,31799], BigFloat[5,17], true)
        @test checkequality(indvals[2], BigInt[17770], BigFloat[6], true)
        @test checkequality(indvals[3], BigInt[9280,9297], BigFloat[2.8284271247461903,1.4142135623730951])
        @test checkequality(indvals[4], BigInt[5665,9278,9280], BigFloat[-4.242640687119286,-2.8284271247461903,22.627416997969522])
    elseif state.instance == 60
        @test length(indvals) == 3
        @test checkequality(indvals[1], BigInt[17669,17845], BigFloat[-34,10], true)
        @test checkequality(indvals[2], BigInt[17770], BigFloat[6], true)
        @test checkequality(indvals[3], BigInt[9278,9280], BigFloat[22.627416997969522,5.656854249492381])
    else
        @test false
    end
end

Solver.add_constr_psd!(state::SolverSetup{false,false,<:Any,false,false}, dim::Int, data) =
    @interpret add_constr_psd_worker!(state, dim, psd_indextype(state), data)

function add_constr_psd_worker!(state::SolverSetup{false,false,<:Any,false,false}, dim::Int, ::PSDIndextypeVector{tri}, data::PSDVector{BigInt,BigFloat}) where {tri}
    @test state.lastcall === :none
    state.lastcall = :psdr
    if state.instance == 14
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[23048], BigFloat[17], BigInt[23048], BigFloat[17], BigInt[23048], BigFloat[17])
        @checkequals(BigInt[68265], BigFloat[24.041630560342618], BigInt[68265], BigFloat[24.041630560342618], BigInt[68265], BigFloat[17])
        @checkequals(BigInt[169998], BigFloat[17], BigInt[169998], BigFloat[17], BigInt[68265], BigFloat[17])
        if tri === :F
            @checkequals(BigInt[169998], BigFloat[17])
        end
        @test isnothing(iter)
    elseif state.instance == 16
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[21922], BigFloat[24], BigInt[21922], BigFloat[24], BigInt[21922], BigFloat[24])
        @checkequals(BigInt[63204], BigFloat[33.941125496954285], BigInt[63204], BigFloat[33.941125496954285], BigInt[63204], BigFloat[24])
        @checkequals(BigInt[151422], BigFloat[24], BigInt[151422], BigFloat[24], BigInt[63204], BigFloat[24])
        if tri === :F
            @checkequals(BigInt[151422], BigFloat[24])
        end
        @test isnothing(iter)
    elseif state.instance == 18
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[6223,21928], BigFloat[2,8], BigInt[6223,21928], BigFloat[2,8], BigInt[6223,21928], BigFloat[2,8])
        @checkequals(BigInt[22426,63210], BigFloat[2.8284271247461903,11.313708498984761], BigInt[22426,63210], BigFloat[2.8284271247461903,11.313708498984761], BigInt[22426,63210], BigFloat[2,8])
        @checkequals(BigInt[63728,151428], BigFloat[2,8], BigInt[63728,151428], BigFloat[2,8], BigInt[22426,63210], BigFloat[2,8])
        if tri === :F
            @checkequals(BigInt[63728,151428], BigFloat[2,8])
        end
        @test isnothing(iter)
    elseif state.instance == 20
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[5815], BigFloat[6], BigInt[5815], BigFloat[6], BigInt[5815], BigFloat[6])
        @checkequals(BigInt[20441], BigFloat[8.485281374238571], BigInt[20441], BigFloat[8.485281374238571], BigInt[20441], BigFloat[6])
        @checkequals(BigInt[55255], BigFloat[6], BigInt[55255], BigFloat[6], BigInt[20441], BigFloat[6])
        if tri === :F
            @checkequals(BigInt[55255], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 22
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[21232], BigFloat[14], BigInt[21232], BigFloat[14], BigInt[21232], BigFloat[14])
        @checkequals(BigInt[62324], BigFloat[19.79898987322333], BigInt[62324], BigFloat[19.79898987322333], BigInt[62324], BigFloat[14])
        @checkequals(BigInt[150102], BigFloat[14], BigInt[150102], BigFloat[14], BigInt[62324], BigFloat[14])
        if tri === :F
            @checkequals(BigInt[150102], BigFloat[14])
        end
        @test isnothing(iter)
    elseif state.instance == 24
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[5815,5816,6223,11399,21230,21928], BigFloat[8,16,3,4,14,5], BigInt[5815,5816,6223,11399,21230,21928], BigFloat[8,16,3,4,14,5], BigInt[5815,5816,6223,11399,21230,21928], BigFloat[8,16,3,4,14,5])
        @checkequals(BigInt[20441,20442,22426,36378,62322,63210], BigFloat[11.313708498984761,22.627416997969522,4.242640687119286,5.656854249492381,19.79898987322333,7.0710678118654755], BigInt[20441,20442,22426,36378,62322,63210], BigFloat[11.313708498984761,22.627416997969522,4.242640687119286,5.656854249492381,19.79898987322333,7.0710678118654755], BigInt[20441,20442,22426,36378,62322,63210], BigFloat[8,16,3,4,14,5])
        @checkequals(BigInt[55255,55256,63728,92459,150100,151428], BigFloat[8,16,3,4,14,5], BigInt[55255,55256,63728,92459,150100,151428], BigFloat[8,16,3,4,14,5], BigInt[20441,20442,22426,36378,62322,63210], BigFloat[8,16,3,4,14,5])
        if tri === :F
            @checkequals(BigInt[55255,55256,63728,92459,150100,151428], BigFloat[8,16,3,4,14,5])
        end
        @test isnothing(iter)
    elseif state.instance == 26
        @test dim == 4
        iter = iterate(data)
        @checkequals(BigInt[20830], BigFloat[17], BigInt[20830], BigFloat[17], BigInt[20830], BigFloat[17])
        @checkequals(BigInt[22409], BigFloat[24.041630560342618], BigInt[22409], BigFloat[24.041630560342618], BigInt[22409], BigFloat[17])
        @checkequals(BigInt[], BigFloat[], BigInt[23048], BigFloat[17], BigInt[], BigFloat[])
        @checkequals(BigInt[22410], BigFloat[24.041630560342618], BigInt[], BigFloat[], BigInt[22410], BigFloat[17])
        @checkequals(BigInt[23048], BigFloat[17], BigInt[22410], BigFloat[-24.041630560342618], BigInt[22409], BigFloat[17])
        @checkequals(BigInt[22410], BigFloat[-24.041630560342618], BigInt[20830], BigFloat[17], BigInt[23048], BigFloat[17])
        @checkequals(BigInt[], BigFloat[], BigInt[22410], BigFloat[24.041630560342618], BigInt[22410], BigFloat[-17])
        @checkequals(BigInt[20830], BigFloat[17], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[22409], BigFloat[24.041630560342618], BigInt[22409], BigFloat[24.041630560342618], BigInt[], BigFloat[])
        @checkequals(BigInt[23048], BigFloat[17], BigInt[23048], BigFloat[17], BigInt[22410], BigFloat[-17])
        if tri === :F
            @checkequals(BigInt[20830], BigFloat[17])
            @checkequals(BigInt[22409], BigFloat[17])
            @checkequals(BigInt[22410], BigFloat[17])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[22409], BigFloat[17])
            @checkequals(BigInt[23048], BigFloat[17])
        end
        @test isnothing(iter)
    elseif state.instance == 29
        @test dim == 4
        iter = iterate(data)
        @checkequals(BigInt[17744], BigFloat[24], BigInt[17744], BigFloat[24], BigInt[17744], BigFloat[24])
        @checkequals(BigInt[20571], BigFloat[33.941125496954285], BigInt[20571], BigFloat[33.941125496954285], BigInt[20571], BigFloat[24])
        @checkequals(BigInt[], BigFloat[], BigInt[21922], BigFloat[24], BigInt[], BigFloat[])
        @checkequals(BigInt[20574], BigFloat[33.941125496954285], BigInt[], BigFloat[], BigInt[20574], BigFloat[24])
        @checkequals(BigInt[21922], BigFloat[24], BigInt[20574], BigFloat[-33.941125496954285], BigInt[20571], BigFloat[24])
        @checkequals(BigInt[20574], BigFloat[-33.941125496954285], BigInt[17744], BigFloat[24], BigInt[21922], BigFloat[24])
        @checkequals(BigInt[], BigFloat[], BigInt[20574], BigFloat[33.941125496954285], BigInt[20574], BigFloat[-24])
        @checkequals(BigInt[17744], BigFloat[24], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[20571], BigFloat[33.941125496954285], BigInt[20571], BigFloat[33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[21922], BigFloat[24], BigInt[21922], BigFloat[24], BigInt[20574], BigFloat[-24])
        if tri === :F
            @checkequals(BigInt[17744], BigFloat[24])
            @checkequals(BigInt[20571], BigFloat[24])
            @checkequals(BigInt[20574], BigFloat[24])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[20571], BigFloat[24])
            @checkequals(BigInt[21922], BigFloat[24])
        end
        @test isnothing(iter)
    elseif state.instance == 32
        @test dim == 4
        iter = iterate(data)
        @checkequals(BigInt[5672,17777], BigFloat[2,8], BigInt[5672,17777], BigFloat[2,8], BigInt[5672,17777], BigFloat[2,8])
        @checkequals(BigInt[6102,20588], BigFloat[2.8284271247461903,11.313708498984761], BigInt[6102,20588], BigFloat[2.8284271247461903,11.313708498984761], BigInt[6102,20588], BigFloat[2,8])
        @checkequals(BigInt[], BigFloat[], BigInt[6223,21928], BigFloat[2,8], BigInt[], BigFloat[])
        @checkequals(BigInt[6103,20589], BigFloat[2.8284271247461903,11.313708498984761], BigInt[], BigFloat[], BigInt[6103,20589], BigFloat[2,8])
        @checkequals(BigInt[6223,21928], BigFloat[2,8], BigInt[6103,20589], BigFloat[-2.8284271247461903,-11.313708498984761], BigInt[6102,20588], BigFloat[2,8])
        @checkequals(BigInt[6103,20589], BigFloat[-2.8284271247461903,-11.313708498984761], BigInt[5672,17777], BigFloat[2,8], BigInt[6223,21928], BigFloat[2,8])
        @checkequals(BigInt[], BigFloat[], BigInt[6103,20589], BigFloat[2.8284271247461903,11.313708498984761], BigInt[6103,20589], BigFloat[-2,-8])
        @checkequals(BigInt[5672,17777], BigFloat[2,8], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[6102,20588], BigFloat[2.8284271247461903,11.313708498984761], BigInt[6102,20588], BigFloat[2.8284271247461903,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[6223,21928], BigFloat[2,8], BigInt[6223,21928], BigFloat[2,8], BigInt[6103,20589], BigFloat[-2,-8])
        if tri === :F
            @checkequals(BigInt[5672,17777], BigFloat[2,8])
            @checkequals(BigInt[6102,20588], BigFloat[2,8])
            @checkequals(BigInt[6103,20589], BigFloat[2,8])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[6102,20588], BigFloat[2,8])
            @checkequals(BigInt[6223,21928], BigFloat[2,8])
        end
        @test isnothing(iter)
    elseif state.instance == 35
        @test dim == 4
        iter = iterate(data)
        @checkequals(BigInt[4699], BigFloat[6], BigInt[4699], BigFloat[6], BigInt[4699], BigFloat[6])
        @checkequals(BigInt[5542,5545], BigFloat[4.242640687119286,4.242640687119286], BigInt[5542,5545], BigFloat[4.242640687119286,4.242640687119286], BigInt[5542,5545], BigFloat[3,3])
        @checkequals(BigInt[], BigFloat[], BigInt[5815], BigFloat[6], BigInt[], BigFloat[])
        @checkequals(BigInt[5546], BigFloat[4.242640687119286], BigInt[], BigFloat[], BigInt[5546], BigFloat[3])
        @checkequals(BigInt[5815], BigFloat[6], BigInt[5546], BigFloat[-4.242640687119286], BigInt[5542,5545], BigFloat[3,3])
        @checkequals(BigInt[5546], BigFloat[-4.242640687119286], BigInt[4699], BigFloat[6], BigInt[5815], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[5546], BigFloat[4.242640687119286], BigInt[5546], BigFloat[-3])
        @checkequals(BigInt[4699], BigFloat[6], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[5542,5545], BigFloat[4.242640687119286,4.242640687119286], BigInt[5542,5545], BigFloat[4.242640687119286,4.242640687119286], BigInt[], BigFloat[])
        @checkequals(BigInt[5815], BigFloat[6], BigInt[5815], BigFloat[6], BigInt[5546], BigFloat[-3])
        if tri === :F
            @checkequals(BigInt[4699], BigFloat[6])
            @checkequals(BigInt[5542,5545], BigFloat[3,3])
            @checkequals(BigInt[5546], BigFloat[3])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[5542,5545], BigFloat[3,3])
            @checkequals(BigInt[5815], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 38
        @test dim == 4
        iter = iterate(data)
        @checkequals(BigInt[17502], BigFloat[14], BigInt[17502], BigFloat[14], BigInt[17502], BigFloat[14])
        @checkequals(BigInt[20164,20168], BigFloat[-9.899494936611665,9.899494936611665], BigInt[20164,20168], BigFloat[-9.899494936611665,9.899494936611665], BigInt[20164,20168], BigFloat[-7,7])
        @checkequals(BigInt[], BigFloat[], BigInt[21232], BigFloat[14], BigInt[], BigFloat[])
        @checkequals(BigInt[20154,20162], BigFloat[-9.899494936611665,9.899494936611665], BigInt[], BigFloat[], BigInt[20154,20162], BigFloat[-7,7])
        @checkequals(BigInt[21232], BigFloat[14], BigInt[20154,20162], BigFloat[9.899494936611665,-9.899494936611665], BigInt[20164,20168], BigFloat[-7,7])
        @checkequals(BigInt[20154,20162], BigFloat[9.899494936611665,-9.899494936611665], BigInt[17502], BigFloat[14], BigInt[21232], BigFloat[14])
        @checkequals(BigInt[], BigFloat[], BigInt[20154,20162], BigFloat[-9.899494936611665,9.899494936611665], BigInt[20154,20162], BigFloat[7,-7])
        @checkequals(BigInt[17502], BigFloat[14], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[20164,20168], BigFloat[-9.899494936611665,9.899494936611665], BigInt[20164,20168], BigFloat[-9.899494936611665,9.899494936611665], BigInt[], BigFloat[])
        @checkequals(BigInt[21232], BigFloat[14], BigInt[21232], BigFloat[14], BigInt[20154,20162], BigFloat[7,-7])
        if tri === :F
            @checkequals(BigInt[17502], BigFloat[14])
            @checkequals(BigInt[20164,20168], BigFloat[-7,7])
            @checkequals(BigInt[20154,20162], BigFloat[-7,7])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[20164,20168], BigFloat[-7,7])
            @checkequals(BigInt[21232], BigFloat[14])
        end
        @test isnothing(iter)
    elseif state.instance == 41
        @test dim == 4
        iter = iterate(data)
        @checkequals(BigInt[4699,4702,5672,9297,17496,17777], BigFloat[8,16,3,4,14,5], BigInt[4699,4702,5672,9297,17496,17777], BigFloat[8,16,3,4,14,5], BigInt[4699,4702,5672,9297,17496,17777], BigFloat[8,16,3,4,14,5])
        @checkequals(BigInt[5542,5545,5546,6102,10837,20156,20166,20588], BigFloat[5.656854249492381,5.656854249492381,11.313708498984761,4.242640687119286,5.656854249492381,9.899494936611665,9.899494936611665,7.0710678118654755], BigInt[5542,5545,5546,6102,10837,20156,20166,20588], BigFloat[5.656854249492381,5.656854249492381,11.313708498984761,4.242640687119286,5.656854249492381,9.899494936611665,9.899494936611665,7.0710678118654755], BigInt[5542,5545,5546,6102,10837,20156,20166,20588], BigFloat[4,4,8,3,4,7,7,5])
        @checkequals(BigInt[], BigFloat[], BigInt[5815,5816,6223,11399,21230,21928], BigFloat[8,16,3,4,14,5], BigInt[], BigFloat[])
        @checkequals(BigInt[5542,5545,5546,6103,10843,20171,20174,20589], BigFloat[-11.313708498984761,11.313708498984761,5.656854249492381,4.242640687119286,5.656854249492381,-9.899494936611665,9.899494936611665,7.0710678118654755], BigInt[], BigFloat[], BigInt[5542,5545,5546,6103,10843,20171,20174,20589], BigFloat[-8,8,4,3,4,-7,7,5])
        @checkequals(BigInt[5815,5816,6223,11399,21230,21928], BigFloat[8,16,3,4,14,5], BigInt[5542,5545,5546,6103,10843,20171,20174,20589], BigFloat[11.313708498984761,-11.313708498984761,-5.656854249492381,-4.242640687119286,-5.656854249492381,9.899494936611665,-9.899494936611665,-7.0710678118654755], BigInt[5542,5545,5546,6102,10837,20156,20166,20588], BigFloat[4,4,8,3,4,7,7,5])
        @checkequals(BigInt[5542,5545,5546,6103,10843,20171,20174,20589], BigFloat[11.313708498984761,-11.313708498984761,-5.656854249492381,-4.242640687119286,-5.656854249492381,9.899494936611665,-9.899494936611665,-7.0710678118654755], BigInt[4699,4702,5672,9297,17496,17777], BigFloat[8,16,3,4,14,5], BigInt[5815,5816,6223,11399,21230,21928], BigFloat[8,16,3,4,14,5])
        @checkequals(BigInt[], BigFloat[], BigInt[5542,5545,5546,6103,10843,20171,20174,20589], BigFloat[-11.313708498984761,11.313708498984761,5.656854249492381,4.242640687119286,5.656854249492381,-9.899494936611665,9.899494936611665,7.0710678118654755], BigInt[5542,5545,5546,6103,10843,20171,20174,20589], BigFloat[8,-8,-4,-3,-4,7,-7,-5])
        @checkequals(BigInt[4699,4702,5672,9297,17496,17777], BigFloat[8,16,3,4,14,5], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[5542,5545,5546,6102,10837,20156,20166,20588], BigFloat[5.656854249492381,5.656854249492381,11.313708498984761,4.242640687119286,5.656854249492381,9.899494936611665,9.899494936611665,7.0710678118654755], BigInt[5542,5545,5546,6102,10837,20156,20166,20588], BigFloat[5.656854249492381,5.656854249492381,11.313708498984761,4.242640687119286,5.656854249492381,9.899494936611665,9.899494936611665,7.0710678118654755], BigInt[], BigFloat[])
        @checkequals(BigInt[5815,5816,6223,11399,21230,21928], BigFloat[8,16,3,4,14,5], BigInt[5815,5816,6223,11399,21230,21928], BigFloat[8,16,3,4,14,5], BigInt[5542,5545,5546,6103,10843,20171,20174,20589], BigFloat[8,-8,-4,-3,-4,7,-7,-5])
        if tri === :F
            @checkequals(BigInt[4699,4702,5672,9297,17496,17777], BigFloat[8,16,3,4,14,5])
            @checkequals(BigInt[5542,5545,5546,6102,10837,20156,20166,20588], BigFloat[4,4,8,3,4,7,7,5])
            @checkequals(BigInt[5542,5545,5546,6103,10843,20171,20174,20589], BigFloat[-8,8,4,3,4,-7,7,5])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[5542,5545,5546,6102,10837,20156,20166,20588], BigFloat[4,4,8,3,4,7,7,5])
            @checkequals(BigInt[5815,5816,6223,11399,21230,21928], BigFloat[8,16,3,4,14,5])
        end
        @test isnothing(iter)
    elseif state.instance == 44
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[31799], BigFloat[17], BigInt[31799], BigFloat[17], BigInt[31799], BigFloat[17])
        @checkequals(BigInt[9460], BigFloat[11.313708498984761], BigInt[9460], BigFloat[11.313708498984761], BigInt[9460], BigFloat[8])
        @checkequals(BigInt[17770], BigFloat[6], BigInt[17770], BigFloat[6], BigInt[9460], BigFloat[8])
        if tri === :F
            @checkequals(BigInt[17770], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 46
        @test dim == 4
        iter = iterate(data)
        @checkequals(BigInt[31799], BigFloat[17], BigInt[31799], BigFloat[17], BigInt[31799], BigFloat[17])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[17770], BigFloat[6], BigInt[], BigFloat[])
        @checkequals(BigInt[9460], BigFloat[-11.313708498984761], BigInt[], BigFloat[], BigInt[9460], BigFloat[-8])
        @checkequals(BigInt[17770], BigFloat[6], BigInt[9460], BigFloat[11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[9460], BigFloat[11.313708498984761], BigInt[31799], BigFloat[17], BigInt[17770], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[9460], BigFloat[-11.313708498984761], BigInt[9460], BigFloat[8])
        @checkequals(BigInt[31799], BigFloat[17], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[17770], BigFloat[6], BigInt[17770], BigFloat[6], BigInt[9460], BigFloat[8])
        if tri === :F
            @checkequals(BigInt[31799], BigFloat[17])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[9460], BigFloat[-8])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[17770], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 49
        @test dim == 4
        iter = iterate(data)
        @checkequals(BigInt[31799], BigFloat[17], BigInt[31799], BigFloat[17], BigInt[31799], BigFloat[17])
        @checkequals(BigInt[9278], BigFloat[11.313708498984761], BigInt[9278], BigFloat[11.313708498984761], BigInt[9278], BigFloat[8])
        @checkequals(BigInt[], BigFloat[], BigInt[17770], BigFloat[6], BigInt[], BigFloat[])
        @checkequals(BigInt[9280], BigFloat[11.313708498984761], BigInt[], BigFloat[], BigInt[9280], BigFloat[8])
        @checkequals(BigInt[17770], BigFloat[6], BigInt[9280], BigFloat[-11.313708498984761], BigInt[9278], BigFloat[8])
        @checkequals(BigInt[9280], BigFloat[-11.313708498984761], BigInt[31799], BigFloat[17], BigInt[17770], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[9280], BigFloat[11.313708498984761], BigInt[9280], BigFloat[-8])
        @checkequals(BigInt[31799], BigFloat[17], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[9278], BigFloat[11.313708498984761], BigInt[9278], BigFloat[11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[17770], BigFloat[6], BigInt[17770], BigFloat[6], BigInt[9280], BigFloat[-8])
        if tri === :F
            @checkequals(BigInt[31799], BigFloat[17])
            @checkequals(BigInt[9278], BigFloat[8])
            @checkequals(BigInt[9280], BigFloat[8])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[9278], BigFloat[8])
            @checkequals(BigInt[17770], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 52
        @test dim == 4
        iter = iterate(data)
        @checkequals(BigInt[31799], BigFloat[17], BigInt[31799], BigFloat[17], BigInt[31799], BigFloat[17])
        @checkequals(BigInt[9280], BigFloat[11.313708498984761], BigInt[9280], BigFloat[11.313708498984761], BigInt[9280], BigFloat[8])
        @checkequals(BigInt[], BigFloat[], BigInt[17770], BigFloat[6], BigInt[], BigFloat[])
        @checkequals(BigInt[9278], BigFloat[-11.313708498984761], BigInt[], BigFloat[], BigInt[9278], BigFloat[-8])
        @checkequals(BigInt[17770], BigFloat[6], BigInt[9278], BigFloat[11.313708498984761], BigInt[9280], BigFloat[8])
        @checkequals(BigInt[9278], BigFloat[11.313708498984761], BigInt[31799], BigFloat[17], BigInt[17770], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[9278], BigFloat[-11.313708498984761], BigInt[9278], BigFloat[8])
        @checkequals(BigInt[31799], BigFloat[17], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[9280], BigFloat[11.313708498984761], BigInt[9280], BigFloat[11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[17770], BigFloat[6], BigInt[17770], BigFloat[6], BigInt[9278], BigFloat[8])
        if tri === :F
            @checkequals(BigInt[31799], BigFloat[17])
            @checkequals(BigInt[9280], BigFloat[8])
            @checkequals(BigInt[9278], BigFloat[-8])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[9280], BigFloat[8])
            @checkequals(BigInt[17770], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 55
        @test dim == 4
        iter = iterate(data)
        @checkequals(BigInt[31799], BigFloat[17], BigInt[31799], BigFloat[17], BigInt[31799], BigFloat[17])
        @checkequals(BigInt[9278,9280], BigFloat[11.313708498984761,2.8284271247461903], BigInt[9278,9280], BigFloat[11.313708498984761,2.8284271247461903], BigInt[9278,9280], BigFloat[8,2])
        @checkequals(BigInt[], BigFloat[], BigInt[17770], BigFloat[6], BigInt[], BigFloat[])
        @checkequals(BigInt[9278,9280], BigFloat[-2.8284271247461903,11.313708498984761], BigInt[], BigFloat[], BigInt[9278,9280], BigFloat[-2,8])
        @checkequals(BigInt[17770], BigFloat[6], BigInt[9278,9280], BigFloat[2.8284271247461903,-11.313708498984761], BigInt[9278,9280], BigFloat[8,2])
        @checkequals(BigInt[9278,9280], BigFloat[2.8284271247461903,-11.313708498984761], BigInt[31799], BigFloat[17], BigInt[17770], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[9278,9280], BigFloat[-2.8284271247461903,11.313708498984761], BigInt[9278,9280], BigFloat[2,-8])
        @checkequals(BigInt[31799], BigFloat[17], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[9278,9280], BigFloat[11.313708498984761,2.8284271247461903], BigInt[9278,9280], BigFloat[11.313708498984761,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[17770], BigFloat[6], BigInt[17770], BigFloat[6], BigInt[9278,9280], BigFloat[2,-8])
        if tri === :F
            @checkequals(BigInt[31799], BigFloat[17])
            @checkequals(BigInt[9278,9280], BigFloat[8,2])
            @checkequals(BigInt[9278,9280], BigFloat[-2,8])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[9278,9280], BigFloat[8,2])
            @checkequals(BigInt[17770], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 58
        @test dim == 4
        iter = iterate(data)
        @checkequals(BigInt[9460,31799], BigFloat[5,17], BigInt[9460,31799], BigFloat[5,17], BigInt[9460,31799], BigFloat[5,17])
        @checkequals(BigInt[9280,9297], BigFloat[2.8284271247461903,1.4142135623730951], BigInt[9280,9297], BigFloat[2.8284271247461903,1.4142135623730951], BigInt[9280,9297], BigFloat[2,1])
        @checkequals(BigInt[], BigFloat[], BigInt[17770], BigFloat[6], BigInt[], BigFloat[])
        @checkequals(BigInt[5665,9278,9280], BigFloat[4.242640687119286,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[], BigInt[5665,9278,9280], BigFloat[3,2,-16])
        @checkequals(BigInt[17770], BigFloat[6], BigInt[5665,9278,9280], BigFloat[-4.242640687119286,-2.8284271247461903,22.627416997969522], BigInt[9280,9297], BigFloat[2,1])
        @checkequals(BigInt[5665,9278,9280], BigFloat[-4.242640687119286,-2.8284271247461903,22.627416997969522], BigInt[9460,31799], BigFloat[5,17], BigInt[17770], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[5665,9278,9280], BigFloat[4.242640687119286,2.8284271247461903,-22.627416997969522], BigInt[5665,9278,9280], BigFloat[-3,-2,16])
        @checkequals(BigInt[9460,31799], BigFloat[5,17], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[9280,9297], BigFloat[2.8284271247461903,1.4142135623730951], BigInt[9280,9297], BigFloat[2.8284271247461903,1.4142135623730951], BigInt[], BigFloat[])
        @checkequals(BigInt[17770], BigFloat[6], BigInt[17770], BigFloat[6], BigInt[5665,9278,9280], BigFloat[-3,-2,16])
        if tri === :F
            @checkequals(BigInt[9460,31799], BigFloat[5,17])
            @checkequals(BigInt[9280,9297], BigFloat[2,1])
            @checkequals(BigInt[5665,9278,9280], BigFloat[3,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[9280,9297], BigFloat[2,1])
            @checkequals(BigInt[17770], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 61
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[17669,17845], BigFloat[-34,10], BigInt[17669,17845], BigFloat[-34,10], BigInt[17669,17845], BigFloat[-34,10])
        @checkequals(BigInt[9278,9280], BigFloat[22.627416997969522,5.656854249492381], BigInt[9278,9280], BigFloat[22.627416997969522,5.656854249492381], BigInt[9278,9280], BigFloat[16,4])
        @checkequals(BigInt[17770], BigFloat[6], BigInt[17770], BigFloat[6], BigInt[9278,9280], BigFloat[16,4])
        if tri === :F
            @checkequals(BigInt[17770], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 62
        @test dim == 4
        iter = iterate(data)
        @checkequals(BigInt[50,51,66,84], BigFloat[-4,-6,5,3], BigInt[50,51,66,84], BigFloat[-4,-6,5,3], BigInt[50,51,66,84], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[79,80,158,176], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[79,80,158,176], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[79,80,158,176], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[454,455,1069,1181], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[171,172,404,422], BigFloat[-4,-6,5,3], BigInt[454,455,1069,1181], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[2170,2171,4545,4683], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[454,455,1069,1181], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[2170,2171,4545,4683], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[171,172,404,422], BigFloat[-4,-6,5,3], BigInt[1162,1163,2575,2687], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[79,80,158,176], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[1162,1163,2575,2687], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[5813,5814,11406,11860], BigFloat[-4,-6,5,3], BigInt[171,172,404,422], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[4678,4679,9264,9402], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[2170,2171,4545,4683], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[1162,1163,2575,2687], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[5813,5814,11406,11860], BigFloat[-4,-6,5,3], BigInt[4678,4679,9264,9402], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[4678,4679,9264,9402], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[20439,20440,36385,36903], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[20439,20440,36385,36903], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[454,455,1069,1181], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[55253,55254,92466,93270], BigFloat[-4,-6,5,3], BigInt[55253,55254,92466,93270], BigFloat[-4,-6,5,3], BigInt[1162,1163,2575,2687], BigFloat[-4,-6,5,3])
        if tri === :F
            @checkequals(BigInt[5813,5814,11406,11860], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[20439,20440,36385,36903], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[2170,2171,4545,4683], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[4678,4679,9264,9402], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[20439,20440,36385,36903], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[55253,55254,92466,93270], BigFloat[-4,-6,5,3])
        end
        @test isnothing(iter)
    elseif state.instance == 63
        @test dim == 12
        iter = iterate(data)
        @checkequals(BigInt[50,51,66,84], BigFloat[-4,-6,5,3], BigInt[50,51,66,84], BigFloat[-4,-6,5,3], BigInt[50,51,66,84], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[54], BigFloat[24.041630560342618], BigInt[54], BigFloat[24.041630560342618], BigInt[54], BigFloat[17])
        @checkequals(BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[57,59], BigFloat[10,8])
        @checkequals(BigInt[79,80,158,176], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[79,80,158,176], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[83], BigFloat[24.041630560342618], BigInt[74], BigFloat[67.88225099390857], BigInt[83], BigFloat[17])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[83], BigFloat[6], BigInt[92,151], BigFloat[10,8])
        @checkequals(BigInt[454,455,1069,1181], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[79,80,158,176], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[454,455,1069,1181], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[458], BigFloat[24.041630560342618], BigInt[83], BigFloat[24.041630560342618], BigInt[458], BigFloat[17])
        @checkequals(BigInt[522,1062], BigFloat[14.142135623730951,11.313708498984761], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[522,1062], BigFloat[10,8])
        @checkequals(BigInt[2170,2171,4545,4683], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[171,172,404,422], BigFloat[-4,-6,5,3], BigInt[2170,2171,4545,4683], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[2174], BigFloat[24.041630560342618], BigInt[83], BigFloat[24.041630560342618], BigInt[2174], BigFloat[17])
        @checkequals(BigInt[2693,4538], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[2693,4538], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[166], BigFloat[67.88225099390857], BigInt[54], BigFloat[17])
        @checkequals(BigInt[74], BigFloat[67.88225099390857], BigInt[175], BigFloat[24.041630560342618], BigInt[], BigFloat[])
        @checkequals(BigInt[83], BigFloat[24.041630560342618], BigInt[], BigFloat[], BigInt[74], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[83], BigFloat[17])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[166], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[458], BigFloat[24.041630560342618], BigInt[175], BigFloat[8.485281374238571], BigInt[166], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[458], BigFloat[17])
        @checkequals(BigInt[1107], BigFloat[67.88225099390857], BigInt[412], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[2174], BigFloat[24.041630560342618], BigInt[421], BigFloat[6], BigInt[1107], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[454,455,1069,1181], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[2174], BigFloat[17])
        @checkequals(BigInt[4553], BigFloat[67.88225099390857], BigInt[458], BigFloat[24.041630560342618], BigInt[], BigFloat[])
        @checkequals(BigInt[83], BigFloat[6], BigInt[522,1062], BigFloat[14.142135623730951,11.313708498984761], BigInt[4553], BigFloat[48])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[1162,1163,2575,2687], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[57,59], BigFloat[10,8])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[1166], BigFloat[24.041630560342618], BigInt[74], BigFloat[48])
        @checkequals(BigInt[175], BigFloat[8.485281374238571], BigInt[1286,2568], BigFloat[14.142135623730951,11.313708498984761], BigInt[83], BigFloat[6])
        @checkequals(BigInt[522,1062], BigFloat[14.142135623730951,11.313708498984761], BigInt[5813,5814,11406,11860], BigFloat[-4,-6,5,3], BigInt[92,151], BigFloat[10,8])
        @checkequals(BigInt[1107], BigFloat[67.88225099390857], BigInt[458], BigFloat[24.041630560342618], BigInt[166], BigFloat[48])
        @checkequals(BigInt[1166], BigFloat[8.485281374238571], BigInt[], BigFloat[], BigInt[175], BigFloat[6])
        @checkequals(BigInt[2693,4538], BigFloat[14.142135623730951,11.313708498984761], BigInt[1107], BigFloat[67.88225099390857], BigInt[522,1062], BigFloat[10,8])
        @checkequals(BigInt[4553], BigFloat[67.88225099390857], BigInt[1166], BigFloat[24.041630560342618], BigInt[1107], BigFloat[48])
        @checkequals(BigInt[4682], BigFloat[8.485281374238571], BigInt[], BigFloat[], BigInt[1166], BigFloat[6])
        @checkequals(BigInt[171,172,404,422], BigFloat[-4,-6,5,3], BigInt[2613], BigFloat[67.88225099390857], BigInt[2693,4538], BigFloat[10,8])
        @checkequals(BigInt[175], BigFloat[24.041630560342618], BigInt[5817], BigFloat[24.041630560342618], BigInt[4553], BigFloat[48])
        @checkequals(BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[4682], BigFloat[6])
        @checkequals(BigInt[1162,1163,2575,2687], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[522,1062], BigFloat[14.142135623730951,11.313708498984761], BigInt[79,80,158,176], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[1166], BigFloat[24.041630560342618], BigInt[1107], BigFloat[67.88225099390857], BigInt[83], BigFloat[17])
        @checkequals(BigInt[1286,2568], BigFloat[14.142135623730951,11.313708498984761], BigInt[1166], BigFloat[8.485281374238571], BigInt[92,151], BigFloat[10,8])
        @checkequals(BigInt[4678,4679,9264,9402], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[1286,2568], BigFloat[14.142135623730951,11.313708498984761], BigInt[171,172,404,422], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[4682], BigFloat[24.041630560342618], BigInt[2613], BigFloat[67.88225099390857], BigInt[175], BigFloat[17])
        @checkequals(BigInt[5663,9257], BigFloat[14.142135623730951,11.313708498984761], BigInt[2672], BigFloat[8.485281374238571], BigInt[205,397], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[6223,11399], BigFloat[14.142135623730951,11.313708498984761], BigInt[1162,1163,2575,2687], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[412], BigFloat[67.88225099390857], BigInt[11535], BigFloat[67.88225099390857], BigInt[1166], BigFloat[17])
        @checkequals(BigInt[1166], BigFloat[24.041630560342618], BigInt[11790], BigFloat[6], BigInt[1286,2568], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[2170,2171,4545,4683], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[4678,4679,9264,9402], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[2613], BigFloat[67.88225099390857], BigInt[2174], BigFloat[24.041630560342618], BigInt[4682], BigFloat[17])
        @checkequals(BigInt[4682], BigFloat[24.041630560342618], BigInt[2693,4538], BigFloat[14.142135623730951,11.313708498984761], BigInt[5663,9257], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[4678,4679,9264,9402], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[83], BigFloat[17])
        @checkequals(BigInt[9272], BigFloat[67.88225099390857], BigInt[4682], BigFloat[24.041630560342618], BigInt[], BigFloat[])
        @checkequals(BigInt[421], BigFloat[6], BigInt[5663,9257], BigFloat[14.142135623730951,11.313708498984761], BigInt[166], BigFloat[48])
        @checkequals(BigInt[1286,2568], BigFloat[14.142135623730951,11.313708498984761], BigInt[20439,20440,36385,36903], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[175], BigFloat[17])
        @checkequals(BigInt[2613], BigFloat[67.88225099390857], BigInt[20443], BigFloat[24.041630560342618], BigInt[], BigFloat[])
        @checkequals(BigInt[2672], BigFloat[8.485281374238571], BigInt[22426,36378], BigFloat[14.142135623730951,11.313708498984761], BigInt[412], BigFloat[48])
        @checkequals(BigInt[5663,9257], BigFloat[14.142135623730951,11.313708498984761], BigInt[55253,55254,92466,93270], BigFloat[-4,-6,5,3], BigInt[1166], BigFloat[17])
        @checkequals(BigInt[9272], BigFloat[67.88225099390857], BigInt[2174], BigFloat[24.041630560342618], BigInt[], BigFloat[])
        @checkequals(BigInt[9401], BigFloat[8.485281374238571], BigInt[], BigFloat[], BigInt[2613], BigFloat[48])
        @checkequals(BigInt[5813,5814,11406,11860], BigFloat[-4,-6,5,3], BigInt[4553], BigFloat[67.88225099390857], BigInt[4682], BigFloat[17])
        @checkequals(BigInt[5817], BigFloat[24.041630560342618], BigInt[4682], BigFloat[24.041630560342618], BigInt[], BigFloat[])
        @checkequals(BigInt[6223,11399], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[9272], BigFloat[48])
        @checkequals(BigInt[20439,20440,36385,36903], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[9272], BigFloat[67.88225099390857], BigInt[92,151], BigFloat[10,8])
        @checkequals(BigInt[20443], BigFloat[24.041630560342618], BigInt[20443], BigFloat[24.041630560342618], BigInt[166], BigFloat[48])
        @checkequals(BigInt[22426,36378], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[175], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[36423], BigFloat[67.88225099390857], BigInt[205,397], BigFloat[10,8])
        @checkequals(BigInt[11535], BigFloat[67.88225099390857], BigInt[55257], BigFloat[24.041630560342618], BigInt[412], BigFloat[48])
        @checkequals(BigInt[20443], BigFloat[24.041630560342618], BigInt[], BigFloat[], BigInt[421], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[2693,4538], BigFloat[14.142135623730951,11.313708498984761], BigInt[1286,2568], BigFloat[10,8])
        @checkequals(BigInt[36423], BigFloat[67.88225099390857], BigInt[4553], BigFloat[67.88225099390857], BigInt[2613], BigFloat[48])
        @checkequals(BigInt[11790], BigFloat[6], BigInt[4682], BigFloat[8.485281374238571], BigInt[2672], BigFloat[6])
        @checkequals(BigInt[22426,36378], BigFloat[14.142135623730951,11.313708498984761], BigInt[5663,9257], BigFloat[14.142135623730951,11.313708498984761], BigInt[5663,9257], BigFloat[10,8])
        @checkequals(BigInt[36423], BigFloat[67.88225099390857], BigInt[9272], BigFloat[67.88225099390857], BigInt[9272], BigFloat[48])
        @checkequals(BigInt[36888], BigFloat[8.485281374238571], BigInt[9401], BigFloat[8.485281374238571], BigInt[9401], BigFloat[6])
        @checkequals(BigInt[55253,55254,92466,93270], BigFloat[-4,-6,5,3], BigInt[22426,36378], BigFloat[14.142135623730951,11.313708498984761], BigInt[454,455,1069,1181], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[55257], BigFloat[24.041630560342618], BigInt[36423], BigFloat[67.88225099390857], BigInt[458], BigFloat[17])
        @checkequals(BigInt[63728,92459], BigFloat[14.142135623730951,11.313708498984761], BigInt[36888], BigFloat[8.485281374238571], BigInt[522,1062], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[63728,92459], BigFloat[14.142135623730951,11.313708498984761], BigInt[1162,1163,2575,2687], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[92474], BigFloat[67.88225099390857], BigInt[92474], BigFloat[67.88225099390857], BigInt[1166], BigFloat[17])
        @checkequals(BigInt[93269], BigFloat[6], BigInt[93269], BigFloat[6], BigInt[1286,2568], BigFloat[10,8])
        if tri === :F
            @checkequals(BigInt[5813,5814,11406,11860], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[5817], BigFloat[17])
            @checkequals(BigInt[6223,11399], BigFloat[10,8])
            @checkequals(BigInt[20439,20440,36385,36903], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[20443], BigFloat[17])
            @checkequals(BigInt[22426,36378], BigFloat[10,8])
            @checkequals(BigInt[458], BigFloat[17])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1107], BigFloat[48])
            @checkequals(BigInt[1166], BigFloat[17])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2613], BigFloat[48])
            @checkequals(BigInt[5817], BigFloat[17])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[11535], BigFloat[48])
            @checkequals(BigInt[20443], BigFloat[17])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[36423], BigFloat[48])
            @checkequals(BigInt[522,1062], BigFloat[10,8])
            @checkequals(BigInt[1107], BigFloat[48])
            @checkequals(BigInt[1166], BigFloat[6])
            @checkequals(BigInt[1286,2568], BigFloat[10,8])
            @checkequals(BigInt[2613], BigFloat[48])
            @checkequals(BigInt[2672], BigFloat[6])
            @checkequals(BigInt[6223,11399], BigFloat[10,8])
            @checkequals(BigInt[11535], BigFloat[48])
            @checkequals(BigInt[11790], BigFloat[6])
            @checkequals(BigInt[22426,36378], BigFloat[10,8])
            @checkequals(BigInt[36423], BigFloat[48])
            @checkequals(BigInt[36888], BigFloat[6])
            @checkequals(BigInt[2170,2171,4545,4683], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[2174], BigFloat[17])
            @checkequals(BigInt[2693,4538], BigFloat[10,8])
            @checkequals(BigInt[4678,4679,9264,9402], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[4682], BigFloat[17])
            @checkequals(BigInt[5663,9257], BigFloat[10,8])
            @checkequals(BigInt[20439,20440,36385,36903], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[20443], BigFloat[17])
            @checkequals(BigInt[22426,36378], BigFloat[10,8])
            @checkequals(BigInt[55253,55254,92466,93270], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[55257], BigFloat[17])
            @checkequals(BigInt[63728,92459], BigFloat[10,8])
            @checkequals(BigInt[2174], BigFloat[17])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[4553], BigFloat[48])
            @checkequals(BigInt[4682], BigFloat[17])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[9272], BigFloat[48])
            @checkequals(BigInt[20443], BigFloat[17])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[36423], BigFloat[48])
            @checkequals(BigInt[55257], BigFloat[17])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[92474], BigFloat[48])
            @checkequals(BigInt[2693,4538], BigFloat[10,8])
            @checkequals(BigInt[4553], BigFloat[48])
            @checkequals(BigInt[4682], BigFloat[6])
            @checkequals(BigInt[5663,9257], BigFloat[10,8])
            @checkequals(BigInt[9272], BigFloat[48])
            @checkequals(BigInt[9401], BigFloat[6])
            @checkequals(BigInt[22426,36378], BigFloat[10,8])
            @checkequals(BigInt[36423], BigFloat[48])
            @checkequals(BigInt[36888], BigFloat[6])
            @checkequals(BigInt[63728,92459], BigFloat[10,8])
            @checkequals(BigInt[92474], BigFloat[48])
            @checkequals(BigInt[93269], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 64
        @test dim == 24
        iter = iterate(data)
        @checkequals(BigInt[50,51,66,84], BigFloat[-4,-6,5,3], BigInt[50,51,66,84], BigFloat[-4,-6,5,3], BigInt[50,51,66,84], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[60,66], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[60,66], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[60,66], BigFloat[2,2])
        @checkequals(BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[57,59], BigFloat[10,8])
        @checkequals(BigInt[79,80,158,176], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[79,80,158,176], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[74], BigFloat[67.88225099390857], BigInt[152,158], BigFloat[2,2])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[83], BigFloat[6], BigInt[92,151], BigFloat[10,8])
        @checkequals(BigInt[454,455,1069,1181], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[79,80,158,176], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[454,455,1069,1181], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[1063,1069], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[1063,1069], BigFloat[2,2])
        @checkequals(BigInt[522,1062], BigFloat[14.142135623730951,11.313708498984761], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[522,1062], BigFloat[10,8])
        @checkequals(BigInt[2170,2171,4545,4683], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[171,172,404,422], BigFloat[-4,-6,5,3], BigInt[2170,2171,4545,4683], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[4539,4545], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[4539,4545], BigFloat[2,2])
        @checkequals(BigInt[2693,4538], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[2693,4538], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[166], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[57,58,60], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[398,404], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[57,58,60], BigFloat[6,2,-16])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[92,150,152], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[166], BigFloat[67.88225099390857], BigInt[92,150,152], BigFloat[6,2,-16])
        @checkequals(BigInt[], BigFloat[], BigInt[175], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[522,1061,1063], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[412], BigFloat[67.88225099390857], BigInt[522,1061,1063], BigFloat[6,2,-16])
        @checkequals(BigInt[], BigFloat[], BigInt[421], BigFloat[6], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[454,455,1069,1181], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[], BigFloat[])
        @checkequals(BigInt[2693,4537,4539], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[1063,1069], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[2693,4537,4539], BigFloat[6,2,-16])
        @checkequals(BigInt[], BigFloat[], BigInt[522,1062], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[1162,1163,2575,2687], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[60,66], BigFloat[2,2])
        @checkequals(BigInt[74], BigFloat[67.88225099390857], BigInt[2569,2575], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[1286,2568], BigFloat[14.142135623730951,11.313708498984761], BigInt[74], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[5813,5814,11406,11860], BigFloat[-4,-6,5,3], BigInt[152,158], BigFloat[2,2])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[1063,1069], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[1063,1069], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[166], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[1107], BigFloat[67.88225099390857], BigInt[1063,1069], BigFloat[2,2])
        @checkequals(BigInt[1107], BigFloat[67.88225099390857], BigInt[2569,2575], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[4539,4545], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[1107], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[2613], BigFloat[67.88225099390857], BigInt[4539,4545], BigFloat[2,2])
        @checkequals(BigInt[4553], BigFloat[67.88225099390857], BigInt[11400,11406], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[57,58,60], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[], BigInt[4553], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[522,1062], BigFloat[14.142135623730951,11.313708498984761], BigInt[57,58,60], BigFloat[-6,-2,16])
        @checkequals(BigInt[], BigFloat[], BigInt[1107], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[92,150,152], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[1166], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[1286,2568], BigFloat[14.142135623730951,11.313708498984761], BigInt[92,150,152], BigFloat[-6,-2,16])
        @checkequals(BigInt[], BigFloat[], BigInt[2613], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[522,1061,1063], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[2672], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[6223,11399], BigFloat[14.142135623730951,11.313708498984761], BigInt[522,1061,1063], BigFloat[-6,-2,16])
        @checkequals(BigInt[], BigFloat[], BigInt[11535], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[2693,4537,4539], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[11790], BigFloat[6], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[2170,2171,4545,4683], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[2693,4537,4539], BigFloat[-6,-2,16])
        @checkequals(BigInt[], BigFloat[], BigInt[4539,4545], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[83], BigFloat[6], BigInt[2693,4538], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[4678,4679,9264,9402], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[57,59], BigFloat[10,8])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[9258,9264], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[74], BigFloat[48])
        @checkequals(BigInt[175], BigFloat[8.485281374238571], BigInt[5663,9257], BigFloat[14.142135623730951,11.313708498984761], BigInt[83], BigFloat[6])
        @checkequals(BigInt[522,1062], BigFloat[14.142135623730951,11.313708498984761], BigInt[20439,20440,36385,36903], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[92,151], BigFloat[10,8])
        @checkequals(BigInt[1107], BigFloat[67.88225099390857], BigInt[36379,36385], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[166], BigFloat[48])
        @checkequals(BigInt[1166], BigFloat[8.485281374238571], BigInt[22426,36378], BigFloat[14.142135623730951,11.313708498984761], BigInt[175], BigFloat[6])
        @checkequals(BigInt[2693,4538], BigFloat[14.142135623730951,11.313708498984761], BigInt[55253,55254,92466,93270], BigFloat[-4,-6,5,3], BigInt[522,1062], BigFloat[10,8])
        @checkequals(BigInt[4553], BigFloat[67.88225099390857], BigInt[4539,4545], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[1107], BigFloat[48])
        @checkequals(BigInt[4682], BigFloat[8.485281374238571], BigInt[], BigFloat[], BigInt[1166], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[4553], BigFloat[67.88225099390857], BigInt[2693,4538], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[9258,9264], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[4553], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[4682], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[9272], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[36379,36385], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[36423], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[92460,92466], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[2693,4538], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[4553], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[4682], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[171,172,404,422], BigFloat[-4,-6,5,3], BigInt[5663,9257], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[398,404], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[9272], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[9401], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[1162,1163,2575,2687], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[22426,36378], BigFloat[14.142135623730951,11.313708498984761], BigInt[79,80,158,176], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[2569,2575], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[36423], BigFloat[67.88225099390857], BigInt[152,158], BigFloat[2,2])
        @checkequals(BigInt[1286,2568], BigFloat[14.142135623730951,11.313708498984761], BigInt[36888], BigFloat[8.485281374238571], BigInt[92,151], BigFloat[10,8])
        @checkequals(BigInt[4678,4679,9264,9402], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[63728,92459], BigFloat[14.142135623730951,11.313708498984761], BigInt[171,172,404,422], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[9258,9264], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[92474], BigFloat[67.88225099390857], BigInt[398,404], BigFloat[2,2])
        @checkequals(BigInt[5663,9257], BigFloat[14.142135623730951,11.313708498984761], BigInt[93269], BigFloat[6], BigInt[205,397], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[1162,1163,2575,2687], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[92,150,152], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[57,58,60], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[2569,2575], BigFloat[2,2])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[1286,2568], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[4678,4679,9264,9402], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[205,396,398], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[92,150,152], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[9258,9264], BigFloat[2,2])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[5663,9257], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[1286,2567,2569], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[522,1061,1063], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[92,150,152], BigFloat[6,2,-16])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[5663,9256,9258], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[2693,4537,4539], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[205,396,398], BigFloat[6,2,-16])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[50,51,66,84], BigFloat[-4,-6,5,3], BigInt[], BigFloat[])
        @checkequals(BigInt[412], BigFloat[67.88225099390857], BigInt[57,58,60], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[1286,2567,2569], BigFloat[6,2,-16])
        @checkequals(BigInt[2569,2575], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[2613], BigFloat[67.88225099390857], BigInt[92,150,152], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[5663,9256,9258], BigFloat[6,2,-16])
        @checkequals(BigInt[9258,9264], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[152,158], BigFloat[2,2])
        @checkequals(BigInt[9272], BigFloat[67.88225099390857], BigInt[522,1061,1063], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[92,150,152], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[], BigInt[166], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[398,404], BigFloat[2,2])
        @checkequals(BigInt[], BigFloat[], BigInt[2693,4537,4539], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[205,396,398], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[], BigInt[412], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[2569,2575], BigFloat[2,2])
        @checkequals(BigInt[], BigFloat[], BigInt[60,66], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[1286,2567,2569], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[], BigInt[2613], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[9258,9264], BigFloat[2,2])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[5663,9256,9258], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[], BigInt[9272], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[92,150,152], BigFloat[-6,-2,16])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[421], BigFloat[6], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[1286,2568], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[205,396,398], BigFloat[-6,-2,16])
        @checkequals(BigInt[2613], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[2672], BigFloat[8.485281374238571], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[5663,9257], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[1286,2567,2569], BigFloat[-6,-2,16])
        @checkequals(BigInt[9272], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[9401], BigFloat[8.485281374238571], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[5663,9256,9258], BigFloat[-6,-2,16])
        @checkequals(BigInt[], BigFloat[], BigInt[74], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[83], BigFloat[6], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[92,151], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[92,150,152], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[166], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[175], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[205,397], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[205,396,398], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[412], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[421], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[1286,2568], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[1286,2567,2569], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[2613], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[2672], BigFloat[6])
        @checkequals(BigInt[5813,5814,11406,11860], BigFloat[-4,-6,5,3], BigInt[], BigFloat[], BigInt[5663,9257], BigFloat[10,8])
        @checkequals(BigInt[11400,11406], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[5663,9256,9258], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[9272], BigFloat[48])
        @checkequals(BigInt[6223,11399], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[9401], BigFloat[6])
        @checkequals(BigInt[20439,20440,36385,36903], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[79,80,158,176], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[], BigFloat[])
        @checkequals(BigInt[36379,36385], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[22426,36378], BigFloat[14.142135623730951,11.313708498984761], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[171,172,404,422], BigFloat[-4,-6,5,3], BigInt[], BigFloat[])
        @checkequals(BigInt[522,1061,1063], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[92,150,152], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[1286,2567,2569], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[205,396,398], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[6223,11398,11400], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[1286,2567,2569], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[454,455,1069,1181], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[22426,36377,36379], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[5663,9256,9258], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[1063,1069], BigFloat[2,2])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[522,1062], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[1162,1163,2575,2687], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[11535], BigFloat[67.88225099390857], BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[2569,2575], BigFloat[2,2])
        @checkequals(BigInt[36379,36385], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[1286,2568], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[166], BigFloat[67.88225099390857], BigInt[5813,5814,11406,11860], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[36423], BigFloat[67.88225099390857], BigInt[398,404], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[11400,11406], BigFloat[2,2])
        @checkequals(BigInt[522,1061,1063], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[], BigInt[6223,11399], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[20439,20440,36385,36903], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[36379,36385], BigFloat[2,2])
        @checkequals(BigInt[1286,2567,2569], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[], BigInt[22426,36378], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[522,1061,1063], BigFloat[6,2,-16])
        @checkequals(BigInt[6223,11398,11400], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[1286,2567,2569], BigFloat[6,2,-16])
        @checkequals(BigInt[22426,36377,36379], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[6223,11398,11400], BigFloat[6,2,-16])
        @checkequals(BigInt[11790], BigFloat[6], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[22426,36378], BigFloat[14.142135623730951,11.313708498984761], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[36423], BigFloat[67.88225099390857], BigInt[166], BigFloat[67.88225099390857], BigInt[22426,36377,36379], BigFloat[6,2,-16])
        @checkequals(BigInt[36888], BigFloat[8.485281374238571], BigInt[175], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[1063,1069], BigFloat[2,2])
        @checkequals(BigInt[], BigFloat[], BigInt[412], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[421], BigFloat[6], BigInt[1107], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[2569,2575], BigFloat[2,2])
        @checkequals(BigInt[], BigFloat[], BigInt[522,1061,1063], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[2613], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[11400,11406], BigFloat[2,2])
        @checkequals(BigInt[], BigFloat[], BigInt[1286,2567,2569], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[11535], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[36379,36385], BigFloat[2,2])
        @checkequals(BigInt[], BigFloat[], BigInt[6223,11398,11400], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[36423], BigFloat[48])
        @checkequals(BigInt[55253,55254,92466,93270], BigFloat[-4,-6,5,3], BigInt[], BigFloat[], BigInt[522,1061,1063], BigFloat[-6,-2,16])
        @checkequals(BigInt[92460,92466], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[22426,36377,36379], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[63728,92459], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[454,455,1069,1181], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[1286,2567,2569], BigFloat[-6,-2,16])
        @checkequals(BigInt[2693,4537,4539], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[1063,1069], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[522,1062], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[1162,1163,2575,2687], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[6223,11398,11400], BigFloat[-6,-2,16])
        @checkequals(BigInt[5663,9256,9258], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[2569,2575], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[1286,2568], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[5813,5814,11406,11860], BigFloat[-4,-6,5,3], BigInt[22426,36377,36379], BigFloat[-6,-2,16])
        @checkequals(BigInt[22426,36377,36379], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[522,1061,1063], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[522,1062], BigFloat[10,8])
        @checkequals(BigInt[63728,92458,92460], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[1286,2567,2569], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[1107], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[1166], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[1286,2568], BigFloat[10,8])
        @checkequals(BigInt[92474], BigFloat[67.88225099390857], BigInt[6223,11398,11400], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[2613], BigFloat[48])
        @checkequals(BigInt[2693,4537,4539], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[], BigInt[2672], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[6223,11399], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[22426,36377,36379], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[11535], BigFloat[48])
        @checkequals(BigInt[5663,9256,9258], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[], BigInt[11790], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[22426,36378], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[1063,1069], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[36423], BigFloat[48])
        @checkequals(BigInt[22426,36377,36379], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[], BigInt[36888], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[1107], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[2569,2575], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[63728,92458,92460], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[2613], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[11400,11406], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[93269], BigFloat[6], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[2170,2171,4545,4683], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[4539,4545], BigFloat[2,2])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[2693,4538], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[4678,4679,9264,9402], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[9258,9264], BigFloat[2,2])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[5663,9257], BigFloat[10,8])
        @checkequals(BigInt[50,51,66,84], BigFloat[-4,-6,5,3], BigInt[522,1062], BigFloat[14.142135623730951,11.313708498984761], BigInt[20439,20440,36385,36903], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[60,66], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[1107], BigFloat[67.88225099390857], BigInt[36379,36385], BigFloat[2,2])
        @checkequals(BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[1166], BigFloat[8.485281374238571], BigInt[22426,36378], BigFloat[10,8])
        @checkequals(BigInt[79,80,158,176], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[1286,2568], BigFloat[14.142135623730951,11.313708498984761], BigInt[55253,55254,92466,93270], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[2613], BigFloat[67.88225099390857], BigInt[92460,92466], BigFloat[2,2])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[2672], BigFloat[8.485281374238571], BigInt[63728,92459], BigFloat[10,8])
        @checkequals(BigInt[454,455,1069,1181], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[6223,11399], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[1063,1069], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[11535], BigFloat[67.88225099390857], BigInt[2693,4537,4539], BigFloat[6,2,-16])
        @checkequals(BigInt[522,1062], BigFloat[14.142135623730951,11.313708498984761], BigInt[11790], BigFloat[6], BigInt[], BigFloat[])
        @checkequals(BigInt[2170,2171,4545,4683], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[4539,4545], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[2693,4537,4539], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[5663,9256,9258], BigFloat[6,2,-16])
        @checkequals(BigInt[2693,4538], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[74], BigFloat[67.88225099390857], BigInt[5663,9256,9258], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[22426,36377,36379], BigFloat[6,2,-16])
        @checkequals(BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[22426,36377,36379], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[63728,92458,92460], BigFloat[6,2,-16])
        @checkequals(BigInt[1063,1069], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[4539,4545], BigFloat[2,2])
        @checkequals(BigInt[1107], BigFloat[67.88225099390857], BigInt[63728,92458,92460], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[4539,4545], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[4553], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[2170,2171,4545,4683], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[9258,9264], BigFloat[2,2])
        @checkequals(BigInt[4553], BigFloat[67.88225099390857], BigInt[4539,4545], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[83], BigFloat[6], BigInt[2693,4538], BigFloat[14.142135623730951,11.313708498984761], BigInt[9272], BigFloat[48])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[4678,4679,9264,9402], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[36379,36385], BigFloat[2,2])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[9258,9264], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[175], BigFloat[8.485281374238571], BigInt[5663,9257], BigFloat[14.142135623730951,11.313708498984761], BigInt[36423], BigFloat[48])
        @checkequals(BigInt[522,1062], BigFloat[14.142135623730951,11.313708498984761], BigInt[20439,20440,36385,36903], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[92460,92466], BigFloat[2,2])
        @checkequals(BigInt[1107], BigFloat[67.88225099390857], BigInt[36379,36385], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[1166], BigFloat[8.485281374238571], BigInt[22426,36378], BigFloat[14.142135623730951,11.313708498984761], BigInt[92474], BigFloat[48])
        @checkequals(BigInt[2693,4538], BigFloat[14.142135623730951,11.313708498984761], BigInt[55253,55254,92466,93270], BigFloat[-4,-6,5,3], BigInt[2693,4537,4539], BigFloat[-6,-2,16])
        @checkequals(BigInt[4553], BigFloat[67.88225099390857], BigInt[2693,4537,4539], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[4682], BigFloat[8.485281374238571], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[171,172,404,422], BigFloat[-4,-6,5,3], BigInt[], BigFloat[], BigInt[5663,9256,9258], BigFloat[-6,-2,16])
        @checkequals(BigInt[398,404], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[5663,9256,9258], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[1162,1163,2575,2687], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[], BigFloat[], BigInt[22426,36377,36379], BigFloat[-6,-2,16])
        @checkequals(BigInt[2569,2575], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[22426,36377,36379], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[1286,2568], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[4678,4679,9264,9402], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[], BigFloat[], BigInt[63728,92458,92460], BigFloat[-6,-2,16])
        @checkequals(BigInt[9258,9264], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[63728,92458,92460], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[5663,9257], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[2693,4538], BigFloat[10,8])
        @checkequals(BigInt[412], BigFloat[67.88225099390857], BigInt[4539,4545], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[4553], BigFloat[48])
        @checkequals(BigInt[2569,2575], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[4682], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[4553], BigFloat[67.88225099390857], BigInt[5663,9257], BigFloat[10,8])
        @checkequals(BigInt[2613], BigFloat[67.88225099390857], BigInt[9258,9264], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[9272], BigFloat[48])
        @checkequals(BigInt[9258,9264], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[9401], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[9272], BigFloat[67.88225099390857], BigInt[22426,36378], BigFloat[10,8])
        @checkequals(BigInt[9272], BigFloat[67.88225099390857], BigInt[36379,36385], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[36423], BigFloat[48])
        @checkequals(BigInt[421], BigFloat[6], BigInt[], BigFloat[], BigInt[36888], BigFloat[6])
        @checkequals(BigInt[1286,2568], BigFloat[14.142135623730951,11.313708498984761], BigInt[36423], BigFloat[67.88225099390857], BigInt[63728,92459], BigFloat[10,8])
        @checkequals(BigInt[2613], BigFloat[67.88225099390857], BigInt[92460,92466], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[92474], BigFloat[48])
        @checkequals(BigInt[2672], BigFloat[8.485281374238571], BigInt[], BigFloat[], BigInt[93269], BigFloat[6])
        @checkequals(BigInt[5663,9257], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[9272], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[9401], BigFloat[8.485281374238571], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[5813,5814,11406,11860], BigFloat[-4,-6,5,3], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[11400,11406], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[6223,11399], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[20439,20440,36385,36903], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[36379,36385], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[22426,36378], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[11535], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[36379,36385], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[2693,4538], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[36423], BigFloat[67.88225099390857], BigInt[4553], BigFloat[67.88225099390857], BigInt[57,58,60], BigFloat[-6,-2,16])
        @checkequals(BigInt[11790], BigFloat[6], BigInt[4682], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[22426,36378], BigFloat[14.142135623730951,11.313708498984761], BigInt[5663,9257], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[36423], BigFloat[67.88225099390857], BigInt[9272], BigFloat[67.88225099390857], BigInt[92,150,152], BigFloat[-6,-2,16])
        @checkequals(BigInt[36888], BigFloat[8.485281374238571], BigInt[9401], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[55253,55254,92466,93270], BigFloat[-4,-6,5,3], BigInt[22426,36378], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[92460,92466], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[36423], BigFloat[67.88225099390857], BigInt[522,1061,1063], BigFloat[-6,-2,16])
        @checkequals(BigInt[63728,92459], BigFloat[14.142135623730951,11.313708498984761], BigInt[36888], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[63728,92459], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[92474], BigFloat[67.88225099390857], BigInt[92474], BigFloat[67.88225099390857], BigInt[2693,4537,4539], BigFloat[-6,-2,16])
        @checkequals(BigInt[93269], BigFloat[6], BigInt[93269], BigFloat[6], BigInt[], BigFloat[])
        if tri === :F
            @checkequals(BigInt[50,51,66,84], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[60,66], BigFloat[2,2])
            @checkequals(BigInt[57,59], BigFloat[10,8])
            @checkequals(BigInt[79,80,158,176], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[152,158], BigFloat[2,2])
            @checkequals(BigInt[92,151], BigFloat[10,8])
            @checkequals(BigInt[454,455,1069,1181], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[1063,1069], BigFloat[2,2])
            @checkequals(BigInt[522,1062], BigFloat[10,8])
            @checkequals(BigInt[2170,2171,4545,4683], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[4539,4545], BigFloat[2,2])
            @checkequals(BigInt[2693,4538], BigFloat[10,8])
            @checkequals(BigInt[57,58,60], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[92,150,152], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[522,1061,1063], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2693,4537,4539], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[60,66], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[74], BigFloat[48])
            @checkequals(BigInt[152,158], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[166], BigFloat[48])
            @checkequals(BigInt[1063,1069], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1107], BigFloat[48])
            @checkequals(BigInt[4539,4545], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[4553], BigFloat[48])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[57,59], BigFloat[10,8])
            @checkequals(BigInt[74], BigFloat[48])
            @checkequals(BigInt[83], BigFloat[6])
            @checkequals(BigInt[92,151], BigFloat[10,8])
            @checkequals(BigInt[166], BigFloat[48])
            @checkequals(BigInt[175], BigFloat[6])
            @checkequals(BigInt[522,1062], BigFloat[10,8])
            @checkequals(BigInt[1107], BigFloat[48])
            @checkequals(BigInt[1166], BigFloat[6])
            @checkequals(BigInt[2693,4538], BigFloat[10,8])
            @checkequals(BigInt[4553], BigFloat[48])
            @checkequals(BigInt[4682], BigFloat[6])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[92,150,152], BigFloat[-6,-2,16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[205,396,398], BigFloat[-6,-2,16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1286,2567,2569], BigFloat[-6,-2,16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[5663,9256,9258], BigFloat[-6,-2,16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[79,80,158,176], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[152,158], BigFloat[2,2])
            @checkequals(BigInt[92,151], BigFloat[10,8])
            @checkequals(BigInt[171,172,404,422], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[398,404], BigFloat[2,2])
            @checkequals(BigInt[205,397], BigFloat[10,8])
            @checkequals(BigInt[1162,1163,2575,2687], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[2569,2575], BigFloat[2,2])
            @checkequals(BigInt[1286,2568], BigFloat[10,8])
            @checkequals(BigInt[4678,4679,9264,9402], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[9258,9264], BigFloat[2,2])
            @checkequals(BigInt[5663,9257], BigFloat[10,8])
            @checkequals(BigInt[92,150,152], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[205,396,398], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1286,2567,2569], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[5663,9256,9258], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[152,158], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[166], BigFloat[48])
            @checkequals(BigInt[398,404], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[412], BigFloat[48])
            @checkequals(BigInt[2569,2575], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2613], BigFloat[48])
            @checkequals(BigInt[9258,9264], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[9272], BigFloat[48])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[92,151], BigFloat[10,8])
            @checkequals(BigInt[166], BigFloat[48])
            @checkequals(BigInt[175], BigFloat[6])
            @checkequals(BigInt[205,397], BigFloat[10,8])
            @checkequals(BigInt[412], BigFloat[48])
            @checkequals(BigInt[421], BigFloat[6])
            @checkequals(BigInt[1286,2568], BigFloat[10,8])
            @checkequals(BigInt[2613], BigFloat[48])
            @checkequals(BigInt[2672], BigFloat[6])
            @checkequals(BigInt[5663,9257], BigFloat[10,8])
            @checkequals(BigInt[9272], BigFloat[48])
            @checkequals(BigInt[9401], BigFloat[6])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[522,1061,1063], BigFloat[-6,-2,16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1286,2567,2569], BigFloat[-6,-2,16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[6223,11398,11400], BigFloat[-6,-2,16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[22426,36377,36379], BigFloat[-6,-2,16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[454,455,1069,1181], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[1063,1069], BigFloat[2,2])
            @checkequals(BigInt[522,1062], BigFloat[10,8])
            @checkequals(BigInt[1162,1163,2575,2687], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[2569,2575], BigFloat[2,2])
            @checkequals(BigInt[1286,2568], BigFloat[10,8])
            @checkequals(BigInt[5813,5814,11406,11860], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[11400,11406], BigFloat[2,2])
            @checkequals(BigInt[6223,11399], BigFloat[10,8])
            @checkequals(BigInt[20439,20440,36385,36903], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[36379,36385], BigFloat[2,2])
            @checkequals(BigInt[22426,36378], BigFloat[10,8])
            @checkequals(BigInt[522,1061,1063], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1286,2567,2569], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[6223,11398,11400], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[22426,36377,36379], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1063,1069], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1107], BigFloat[48])
            @checkequals(BigInt[2569,2575], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2613], BigFloat[48])
            @checkequals(BigInt[11400,11406], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[11535], BigFloat[48])
            @checkequals(BigInt[36379,36385], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[36423], BigFloat[48])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[522,1062], BigFloat[10,8])
            @checkequals(BigInt[1107], BigFloat[48])
            @checkequals(BigInt[1166], BigFloat[6])
            @checkequals(BigInt[1286,2568], BigFloat[10,8])
            @checkequals(BigInt[2613], BigFloat[48])
            @checkequals(BigInt[2672], BigFloat[6])
            @checkequals(BigInt[6223,11399], BigFloat[10,8])
            @checkequals(BigInt[11535], BigFloat[48])
            @checkequals(BigInt[11790], BigFloat[6])
            @checkequals(BigInt[22426,36378], BigFloat[10,8])
            @checkequals(BigInt[36423], BigFloat[48])
            @checkequals(BigInt[36888], BigFloat[6])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2693,4537,4539], BigFloat[-6,-2,16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[5663,9256,9258], BigFloat[-6,-2,16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[22426,36377,36379], BigFloat[-6,-2,16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[63728,92458,92460], BigFloat[-6,-2,16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2170,2171,4545,4683], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[4539,4545], BigFloat[2,2])
            @checkequals(BigInt[2693,4538], BigFloat[10,8])
            @checkequals(BigInt[4678,4679,9264,9402], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[9258,9264], BigFloat[2,2])
            @checkequals(BigInt[5663,9257], BigFloat[10,8])
            @checkequals(BigInt[20439,20440,36385,36903], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[36379,36385], BigFloat[2,2])
            @checkequals(BigInt[22426,36378], BigFloat[10,8])
            @checkequals(BigInt[55253,55254,92466,93270], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[92460,92466], BigFloat[2,2])
            @checkequals(BigInt[63728,92459], BigFloat[10,8])
            @checkequals(BigInt[2693,4537,4539], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[5663,9256,9258], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[22426,36377,36379], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[63728,92458,92460], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[4539,4545], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[4553], BigFloat[48])
            @checkequals(BigInt[9258,9264], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[9272], BigFloat[48])
            @checkequals(BigInt[36379,36385], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[36423], BigFloat[48])
            @checkequals(BigInt[92460,92466], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[92474], BigFloat[48])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2693,4538], BigFloat[10,8])
            @checkequals(BigInt[4553], BigFloat[48])
            @checkequals(BigInt[4682], BigFloat[6])
            @checkequals(BigInt[5663,9257], BigFloat[10,8])
            @checkequals(BigInt[9272], BigFloat[48])
            @checkequals(BigInt[9401], BigFloat[6])
            @checkequals(BigInt[22426,36378], BigFloat[10,8])
            @checkequals(BigInt[36423], BigFloat[48])
            @checkequals(BigInt[36888], BigFloat[6])
            @checkequals(BigInt[63728,92459], BigFloat[10,8])
            @checkequals(BigInt[92474], BigFloat[48])
            @checkequals(BigInt[93269], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 66
        @test dim == 8
        iter = iterate(data)
        @checkequals(BigInt[50,51,66,84], BigFloat[-4,-12,8,4], BigInt[50,51,66,84], BigFloat[-4,-12,8,4], BigInt[50,51,66,84], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[79,80,158,176], BigFloat[-5.656854249492381,-16.970562748477143,11.313708498984761,5.656854249492381], BigInt[79,80,158,176], BigFloat[-5.656854249492381,-16.970562748477143,11.313708498984761,5.656854249492381], BigInt[79,80,158,176], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[272,273,275,276,650,898], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[171,172,404,422], BigFloat[-4,-12,8,4], BigInt[272,273,275,276,650,898], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[272,273,275,276,650,898], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[], BigFloat[], BigInt[854,855,857,858,1904,2152], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4], BigInt[], BigFloat[])
        @checkequals(BigInt[272,273,275,276,653,899], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[272,273,275,276,653,899], BigFloat[-6,6,2,2,-8,-4])
        @checkequals(BigInt[1742,1743,1744,1745,3739,4287], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[-6,6,2,2,-8,-4])
        @checkequals(BigInt[171,172,404,422], BigFloat[-4,-12,8,4], BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[79,80,158,176], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[854,855,857,858,1904,2152], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4], BigInt[171,172,404,422], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[], BigFloat[], BigInt[854,855,857,858,1904,2152], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[], BigFloat[], BigInt[272,273,275,276,653,899], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[854,855,857,858,1907,2153], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[4250,4251,4252,4253,8458,9006], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[50,51,66,84], BigFloat[-4,-12,8,4], BigInt[854,855,857,858,1907,2153], BigFloat[-6,6,2,2,-8,-4])
        @checkequals(BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4], BigInt[], BigFloat[], BigInt[4250,4251,4252,4253,8458,9006], BigFloat[-6,6,2,2,-8,-4])
        @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[], BigFloat[], BigInt[272,273,275,276,650,898], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[272,273,275,276,653,899], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[854,855,857,858,1907,2153], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[854,855,857,858,1904,2152], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[854,855,857,858,1907,2153], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[4250,4251,4252,4253,8458,9006], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[], BigFloat[], BigInt[79,80,158,176], BigFloat[-5.656854249492381,-16.970562748477143,11.313708498984761,5.656854249492381], BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[171,172,404,422], BigFloat[-4,-12,8,4], BigInt[272,273,275,276,653,899], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4], BigInt[272,273,275,276,653,899], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[854,855,857,858,1907,2153], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[1742,1743,1744,1745,3739,4287], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[854,855,857,858,1907,2153], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[4250,4251,4252,4253,8458,9006], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[], BigFloat[], BigInt[14606,14607,14614,14615,26814,29213], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[14606,14607,14614,14615,26814,29213], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[], BigFloat[], BigInt[272,273,275,276,650,898], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[50,51,66,84], BigFloat[-4,-12,8,4], BigInt[854,855,857,858,1904,2152], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[79,80,158,176], BigFloat[-5.656854249492381,-16.970562748477143,11.313708498984761,5.656854249492381], BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4], BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[272,273,275,276,650,898], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[4250,4251,4252,4253,8458,9006], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[4250,4251,4252,4253,8458,9006], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[171,172,404,422], BigFloat[-4,-12,8,4], BigInt[14606,14607,14614,14615,26814,29213], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[14606,14607,14614,14615,26814,29213], BigFloat[-6,6,2,2,-8,-4])
        @checkequals(BigInt[854,855,857,858,1904,2152], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4], BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[272,273,275,276,653,899], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4], BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[6,-6,-2,-2,8,4])
        if tri === :F
            @checkequals(BigInt[50,51,66,84], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[79,80,158,176], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[272,273,275,276,650,898], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[854,855,857,858,1907,2153], BigFloat[6,-6,-2,-2,8,4])
            @checkequals(BigInt[4250,4251,4252,4253,8458,9006], BigFloat[6,-6,-2,-2,8,4])
            @checkequals(BigInt[79,80,158,176], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[171,172,404,422], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[854,855,857,858,1904,2152], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[272,273,275,276,653,899], BigFloat[-6,6,2,2,-8,-4])
            @checkequals(BigInt[854,855,857,858,1907,2153], BigFloat[-6,6,2,2,-8,-4])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[-6,6,2,2,-8,-4])
            @checkequals(BigInt[272,273,275,276,650,898], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[854,855,857,858,1904,2152], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[1742,1743,1744,1745,3739,4287], BigFloat[-6,6,2,2,-8,-4])
            @checkequals(BigInt[4250,4251,4252,4253,8458,9006], BigFloat[-6,6,2,2,-8,-4])
            @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[6,-6,-2,-2,8,4])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4])
        end
        @test isnothing(iter)
    elseif state.instance == 68
        @test dim == 24
        iter = iterate(data)
        @checkequals(BigInt[50,51,66,84], BigFloat[-4,-12,8,4], BigInt[50,51,66,84], BigFloat[-4,-12,8,4], BigInt[50,51,66,84], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[54], BigFloat[25.455844122715714], BigInt[54], BigFloat[25.455844122715714], BigInt[54], BigFloat[18])
        @checkequals(BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[57,59], BigFloat[10,8])
        @checkequals(BigInt[79,80,158,176], BigFloat[-5.656854249492381,-16.970562748477143,11.313708498984761,5.656854249492381], BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[79,80,158,176], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[83], BigFloat[25.455844122715714], BigInt[74], BigFloat[67.88225099390857], BigInt[83], BigFloat[18])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[83], BigFloat[6], BigInt[92,151], BigFloat[10,8])
        @checkequals(BigInt[272,273,275,276,650,898], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[79,80,158,176], BigFloat[-5.656854249492381,-16.970562748477143,11.313708498984761,5.656854249492381], BigInt[272,273,275,276,650,898], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[281], BigFloat[25.455844122715714], BigInt[83], BigFloat[25.455844122715714], BigInt[281], BigFloat[18])
        @checkequals(BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[456,640], BigFloat[10,8])
        @checkequals(BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[171,172,404,422], BigFloat[-4,-12,8,4], BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[1762], BigFloat[25.455844122715714], BigInt[83], BigFloat[25.455844122715714], BigInt[1762], BigFloat[18])
        @checkequals(BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[2491,3719], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[166], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[175], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[166], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[175], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[272,273,275,276,653,899], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[272,273,275,276,653,899], BigFloat[-6,6,2,2,-8,-4])
        @checkequals(BigInt[282], BigFloat[-25.455844122715714], BigInt[412], BigFloat[67.88225099390857], BigInt[282], BigFloat[-18])
        @checkequals(BigInt[457,646], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[421], BigFloat[6], BigInt[457,646], BigFloat[-10,-8])
        @checkequals(BigInt[1742,1743,1744,1745,3739,4287], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[272,273,275,276,650,898], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[-6,6,2,2,-8,-4])
        @checkequals(BigInt[1764], BigFloat[-25.455844122715714], BigInt[281], BigFloat[25.455844122715714], BigInt[1764], BigFloat[-18])
        @checkequals(BigInt[2493,3721], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[2493,3721], BigFloat[-10,-8])
        @checkequals(BigInt[], BigFloat[], BigInt[854,855,857,858,1904,2152], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[54], BigFloat[18])
        @checkequals(BigInt[74], BigFloat[67.88225099390857], BigInt[863], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[83], BigFloat[25.455844122715714], BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[74], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4], BigInt[83], BigFloat[18])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[281], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[281], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[166], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[281], BigFloat[18])
        @checkequals(BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[863], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[1762], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[731,732], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[1762], BigFloat[18])
        @checkequals(BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[3375], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[3790,3791], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[863], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[282], BigFloat[-25.455844122715714], BigInt[2117], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[4971,6929], BigFloat[14.142135623730951,11.313708498984761], BigInt[282], BigFloat[-18])
        @checkequals(BigInt[728,729], BigFloat[33.941125496954285,-33.941125496954285], BigInt[7288], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[1764], BigFloat[-25.455844122715714], BigInt[8094], BigFloat[6], BigInt[728,729], BigFloat[24,-24])
        @checkequals(BigInt[], BigFloat[], BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[1764], BigFloat[-18])
        @checkequals(BigInt[3788,3789], BigFloat[33.941125496954285,-33.941125496954285], BigInt[1762], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[83], BigFloat[6], BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[3788,3789], BigFloat[24,-24])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[57,59], BigFloat[10,8])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[4270], BigFloat[25.455844122715714], BigInt[74], BigFloat[48])
        @checkequals(BigInt[175], BigFloat[8.485281374238571], BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[83], BigFloat[6])
        @checkequals(BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[92,151], BigFloat[10,8])
        @checkequals(BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[14640], BigFloat[25.455844122715714], BigInt[166], BigFloat[48])
        @checkequals(BigInt[863], BigFloat[8.485281374238571], BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[175], BigFloat[6])
        @checkequals(BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4], BigInt[456,640], BigFloat[10,8])
        @checkequals(BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[1762], BigFloat[25.455844122715714], BigInt[731,732], BigFloat[-24,24])
        @checkequals(BigInt[4270], BigFloat[8.485281374238571], BigInt[], BigFloat[], BigInt[863], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[2491,3719], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[4270], BigFloat[25.455844122715714], BigInt[3790,3791], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[4270], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[14640], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[457,646], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[728,729], BigFloat[33.941125496954285,-33.941125496954285], BigInt[47981], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[864], BigFloat[-8.485281374238571], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[2493,3721], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[457,646], BigFloat[-10,-8])
        @checkequals(BigInt[3788,3789], BigFloat[33.941125496954285,-33.941125496954285], BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[728,729], BigFloat[24,-24])
        @checkequals(BigInt[4272], BigFloat[-8.485281374238571], BigInt[4270], BigFloat[8.485281374238571], BigInt[864], BigFloat[-6])
        @checkequals(BigInt[171,172,404,422], BigFloat[-4,-12,8,4], BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[2493,3721], BigFloat[-10,-8])
        @checkequals(BigInt[175], BigFloat[25.455844122715714], BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[3788,3789], BigFloat[24,-24])
        @checkequals(BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[8989], BigFloat[8.485281374238571], BigInt[4272], BigFloat[-6])
        @checkequals(BigInt[854,855,857,858,1904,2152], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[79,80,158,176], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[863], BigFloat[25.455844122715714], BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[83], BigFloat[18])
        @checkequals(BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[29083], BigFloat[8.485281374238571], BigInt[92,151], BigFloat[10,8])
        @checkequals(BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[59062,81360], BigFloat[14.142135623730951,11.313708498984761], BigInt[171,172,404,422], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[4270], BigFloat[25.455844122715714], BigInt[81570], BigFloat[67.88225099390857], BigInt[175], BigFloat[18])
        @checkequals(BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[85993], BigFloat[6], BigInt[205,397], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[854,855,857,858,1904,2152], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[863], BigFloat[18])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[1164,1894], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[4270], BigFloat[18])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[5461,8438], BigFloat[10,8])
        @checkequals(BigInt[854,855,857,858,1907,2153], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[272,273,275,276,653,899], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[864], BigFloat[-25.455844122715714], BigInt[282], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[1165,1900], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[457,646], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[4250,4251,4252,4253,8458,9006], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[4272], BigFloat[-25.455844122715714], BigInt[1764], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[5463,8440], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[2493,3721], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[50,51,66,84], BigFloat[-4,-12,8,4], BigInt[854,855,857,858,1907,2153], BigFloat[-6,6,2,2,-8,-4])
        @checkequals(BigInt[412], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[864], BigFloat[-18])
        @checkequals(BigInt[863], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[1165,1900], BigFloat[-10,-8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[4250,4251,4252,4253,8458,9006], BigFloat[-6,6,2,2,-8,-4])
        @checkequals(BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[], BigInt[4272], BigFloat[-18])
        @checkequals(BigInt[4270], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[5463,8440], BigFloat[-10,-8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[83], BigFloat[18])
        @checkequals(BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[282], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[166], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[728,729], BigFloat[-33.941125496954285,33.941125496954285], BigInt[175], BigFloat[18])
        @checkequals(BigInt[], BigFloat[], BigInt[1764], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[412], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[3788,3789], BigFloat[-33.941125496954285,33.941125496954285], BigInt[863], BigFloat[18])
        @checkequals(BigInt[], BigFloat[], BigInt[54], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[864], BigFloat[-25.455844122715714], BigInt[], BigFloat[], BigInt[1985,1986], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[4270], BigFloat[18])
        @checkequals(BigInt[1982,1983], BigFloat[33.941125496954285,-33.941125496954285], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[4272], BigFloat[-25.455844122715714], BigInt[], BigFloat[], BigInt[8509,8510], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[8507,8508], BigFloat[33.941125496954285,-33.941125496954285], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[421], BigFloat[6], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[457,646], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[728,729], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[2117], BigFloat[8.485281374238571], BigInt[864], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[2493,3721], BigFloat[14.142135623730951,11.313708498984761], BigInt[864], BigFloat[-18])
        @checkequals(BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[3788,3789], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[8989], BigFloat[8.485281374238571], BigInt[4272], BigFloat[8.485281374238571], BigInt[1982,1983], BigFloat[24,-24])
        @checkequals(BigInt[], BigFloat[], BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[4272], BigFloat[-18])
        @checkequals(BigInt[], BigFloat[], BigInt[74], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[83], BigFloat[6], BigInt[8507,8508], BigFloat[24,-24])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[92,151], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[166], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[175], BigFloat[6])
        @checkequals(BigInt[1165,1900], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[], BigFloat[], BigInt[205,397], BigFloat[10,8])
        @checkequals(BigInt[1982,1983], BigFloat[33.941125496954285,-33.941125496954285], BigInt[], BigFloat[], BigInt[412], BigFloat[48])
        @checkequals(BigInt[2118], BigFloat[-8.485281374238571], BigInt[], BigFloat[], BigInt[421], BigFloat[6])
        @checkequals(BigInt[5463,8440], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[854,855,857,858,1907,2153], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[1164,1894], BigFloat[10,8])
        @checkequals(BigInt[8507,8508], BigFloat[33.941125496954285,-33.941125496954285], BigInt[864], BigFloat[25.455844122715714], BigInt[1985,1986], BigFloat[-24,24])
        @checkequals(BigInt[8991], BigFloat[-8.485281374238571], BigInt[1165,1900], BigFloat[14.142135623730951,11.313708498984761], BigInt[2117], BigFloat[6])
        @checkequals(BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4], BigInt[4250,4251,4252,4253,8458,9006], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[5461,8438], BigFloat[10,8])
        @checkequals(BigInt[3375], BigFloat[25.455844122715714], BigInt[4272], BigFloat[25.455844122715714], BigInt[8509,8510], BigFloat[-24,24])
        @checkequals(BigInt[4971,6929], BigFloat[14.142135623730951,11.313708498984761], BigInt[5463,8440], BigFloat[14.142135623730951,11.313708498984761], BigInt[8989], BigFloat[6])
        @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[79,80,158,176], BigFloat[-5.656854249492381,-16.970562748477143,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[14640], BigFloat[25.455844122715714], BigInt[83], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[272,273,275,276,653,899], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[171,172,404,422], BigFloat[-4,-12,8,4], BigInt[], BigFloat[])
        @checkequals(BigInt[282], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[457,646], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[854,855,857,858,1907,2153], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[], BigFloat[], BigInt[1165,1900], BigFloat[-10,-8])
        @checkequals(BigInt[864], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[1982,1983], BigFloat[24,-24])
        @checkequals(BigInt[1165,1900], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[2118], BigFloat[-6])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[5463,8440], BigFloat[-10,-8])
        @checkequals(BigInt[], BigFloat[], BigInt[864], BigFloat[25.455844122715714], BigInt[8507,8508], BigFloat[24,-24])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[8991], BigFloat[-6])
        @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[1982,1983], BigFloat[-33.941125496954285,33.941125496954285], BigInt[272,273,275,276,650,898], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[14644], BigFloat[25.455844122715714], BigInt[4272], BigFloat[25.455844122715714], BigInt[281], BigFloat[18])
        @checkequals(BigInt[19060,26796], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[456,640], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[8507,8508], BigFloat[-33.941125496954285,33.941125496954285], BigInt[854,855,857,858,1904,2152], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[7288], BigFloat[67.88225099390857], BigInt[83], BigFloat[25.455844122715714], BigInt[863], BigFloat[18])
        @checkequals(BigInt[14640], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[1164,1894], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[166], BigFloat[67.88225099390857], BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[175], BigFloat[25.455844122715714], BigInt[3375], BigFloat[18])
        @checkequals(BigInt[282], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[4971,6929], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[728,729], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[], BigInt[14640], BigFloat[18])
        @checkequals(BigInt[864], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[19056,26783], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[272,273,275,276,653,899], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[1982,1983], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[], BigInt[282], BigFloat[18])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[457,646], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[1165,1900], BigFloat[14.142135623730951,11.313708498984761], BigInt[854,855,857,858,1907,2153], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[], BigFloat[], BigInt[1982,1983], BigFloat[-33.941125496954285,33.941125496954285], BigInt[864], BigFloat[18])
        @checkequals(BigInt[14644], BigFloat[25.455844122715714], BigInt[2118], BigFloat[8.485281374238571], BigInt[1165,1900], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[5463,8440], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[27047,27048], BigFloat[-33.941125496954285,33.941125496954285], BigInt[8507,8508], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[8094], BigFloat[6], BigInt[8991], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[14606,14607,14614,14615,26814,29213], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[166], BigFloat[67.88225099390857], BigInt[14644], BigFloat[18])
        @checkequals(BigInt[29083], BigFloat[8.485281374238571], BigInt[175], BigFloat[8.485281374238571], BigInt[19060,26796], BigFloat[10,8])
        @checkequals(BigInt[457,646], BigFloat[14.142135623730951,11.313708498984761], BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[281], BigFloat[18])
        @checkequals(BigInt[728,729], BigFloat[-33.941125496954285,33.941125496954285], BigInt[412], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[864], BigFloat[8.485281374238571], BigInt[421], BigFloat[6], BigInt[731,732], BigFloat[-24,24])
        @checkequals(BigInt[1165,1900], BigFloat[14.142135623730951,11.313708498984761], BigInt[272,273,275,276,653,899], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[863], BigFloat[18])
        @checkequals(BigInt[1982,1983], BigFloat[-33.941125496954285,33.941125496954285], BigInt[282], BigFloat[-25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[2118], BigFloat[8.485281374238571], BigInt[457,646], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[1985,1986], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[854,855,857,858,1907,2153], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[3375], BigFloat[18])
        @checkequals(BigInt[], BigFloat[], BigInt[864], BigFloat[-25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[1165,1900], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[7288], BigFloat[48])
        @checkequals(BigInt[19060,26796], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[14640], BigFloat[18])
        @checkequals(BigInt[27047,27048], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[29087], BigFloat[8.485281374238571], BigInt[], BigFloat[], BigInt[27055,27056], BigFloat[-24,24])
        @checkequals(BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4], BigInt[14606,14607,14614,14615,26814,29213], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[282], BigFloat[18])
        @checkequals(BigInt[47981], BigFloat[25.455844122715714], BigInt[14644], BigFloat[-25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[59062,81360], BigFloat[14.142135623730951,11.313708498984761], BigInt[19060,26796], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[728,729], BigFloat[-24,24])
        @checkequals(BigInt[1742,1743,1744,1745,3739,4287], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[272,273,275,276,650,898], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[864], BigFloat[18])
        @checkequals(BigInt[1764], BigFloat[25.455844122715714], BigInt[281], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[2493,3721], BigFloat[14.142135623730951,11.313708498984761], BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[1982,1983], BigFloat[-24,24])
        @checkequals(BigInt[4250,4251,4252,4253,8458,9006], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[854,855,857,858,1904,2152], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[4272], BigFloat[25.455844122715714], BigInt[863], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[5463,8440], BigFloat[14.142135623730951,11.313708498984761], BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4], BigInt[14644], BigFloat[18])
        @checkequals(BigInt[14644], BigFloat[-25.455844122715714], BigInt[282], BigFloat[-25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[19060,26796], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[], BigFloat[], BigInt[27047,27048], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[728,729], BigFloat[33.941125496954285,-33.941125496954285], BigInt[456,640], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[864], BigFloat[-25.455844122715714], BigInt[731,732], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[863], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[1982,1983], BigFloat[33.941125496954285,-33.941125496954285], BigInt[1164,1894], BigFloat[10,8])
        @checkequals(BigInt[81570], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[1985,1986], BigFloat[-24,24])
        @checkequals(BigInt[1764], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[2117], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[4971,6929], BigFloat[10,8])
        @checkequals(BigInt[3788,3789], BigFloat[-33.941125496954285,33.941125496954285], BigInt[14644], BigFloat[-25.455844122715714], BigInt[7288], BigFloat[48])
        @checkequals(BigInt[4272], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[8094], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[27047,27048], BigFloat[33.941125496954285,-33.941125496954285], BigInt[19056,26783], BigFloat[10,8])
        @checkequals(BigInt[8507,8508], BigFloat[-33.941125496954285,33.941125496954285], BigInt[281], BigFloat[25.455844122715714], BigInt[27055,27056], BigFloat[-24,24])
        @checkequals(BigInt[14644], BigFloat[-25.455844122715714], BigInt[], BigFloat[], BigInt[29083], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[457,646], BigFloat[10,8])
        @checkequals(BigInt[27047,27048], BigFloat[33.941125496954285,-33.941125496954285], BigInt[863], BigFloat[25.455844122715714], BigInt[728,729], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[864], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[1165,1900], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[3375], BigFloat[25.455844122715714], BigInt[1982,1983], BigFloat[-24,24])
        @checkequals(BigInt[85993], BigFloat[6], BigInt[], BigFloat[], BigInt[2118], BigFloat[6])
        @checkequals(BigInt[2493,3721], BigFloat[14.142135623730951,11.313708498984761], BigInt[457,646], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[3788,3789], BigFloat[-33.941125496954285,33.941125496954285], BigInt[728,729], BigFloat[33.941125496954285,-33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[4272], BigFloat[8.485281374238571], BigInt[864], BigFloat[-8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[5463,8440], BigFloat[14.142135623730951,11.313708498984761], BigInt[1165,1900], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[19060,26796], BigFloat[10,8])
        @checkequals(BigInt[8507,8508], BigFloat[-33.941125496954285,33.941125496954285], BigInt[1982,1983], BigFloat[33.941125496954285,-33.941125496954285], BigInt[27047,27048], BigFloat[-24,24])
        @checkequals(BigInt[8991], BigFloat[8.485281374238571], BigInt[2118], BigFloat[-8.485281374238571], BigInt[29087], BigFloat[6])
        @checkequals(BigInt[19060,26796], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[], BigFloat[], BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[27047,27048], BigFloat[33.941125496954285,-33.941125496954285], BigInt[], BigFloat[], BigInt[1762], BigFloat[18])
        @checkequals(BigInt[29087], BigFloat[-8.485281374238571], BigInt[], BigFloat[], BigInt[2491,3719], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[19060,26796], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[], BigFloat[], BigInt[27047,27048], BigFloat[33.941125496954285,-33.941125496954285], BigInt[4270], BigFloat[18])
        @checkequals(BigInt[], BigFloat[], BigInt[29087], BigFloat[-8.485281374238571], BigInt[5461,8438], BigFloat[10,8])
        @checkequals(BigInt[50,51,66,84], BigFloat[-4,-12,8,4], BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[54], BigFloat[25.455844122715714], BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[14640], BigFloat[18])
        @checkequals(BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[863], BigFloat[8.485281374238571], BigInt[19056,26783], BigFloat[10,8])
        @checkequals(BigInt[79,80,158,176], BigFloat[-5.656854249492381,-16.970562748477143,11.313708498984761,5.656854249492381], BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[83], BigFloat[25.455844122715714], BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[47981], BigFloat[18])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[2117], BigFloat[8.485281374238571], BigInt[59062,81360], BigFloat[10,8])
        @checkequals(BigInt[272,273,275,276,650,898], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[4971,6929], BigFloat[14.142135623730951,11.313708498984761], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[281], BigFloat[25.455844122715714], BigInt[7288], BigFloat[67.88225099390857], BigInt[1764], BigFloat[18])
        @checkequals(BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[8094], BigFloat[6], BigInt[2493,3721], BigFloat[10,8])
        @checkequals(BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[4250,4251,4252,4253,8458,9006], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[1762], BigFloat[25.455844122715714], BigInt[1764], BigFloat[-25.455844122715714], BigInt[4272], BigFloat[18])
        @checkequals(BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[2493,3721], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[5463,8440], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[4250,4251,4252,4253,8458,9006], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[14606,14607,14614,14615,26814,29213], BigFloat[-6,6,2,2,-8,-4])
        @checkequals(BigInt[74], BigFloat[67.88225099390857], BigInt[4272], BigFloat[-25.455844122715714], BigInt[14644], BigFloat[-18])
        @checkequals(BigInt[83], BigFloat[25.455844122715714], BigInt[5463,8440], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[19060,26796], BigFloat[-10,-8])
        @checkequals(BigInt[], BigFloat[], BigInt[14606,14607,14614,14615,26814,29213], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[14644], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[281], BigFloat[25.455844122715714], BigInt[19060,26796], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[1762], BigFloat[18])
        @checkequals(BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[1762], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[3790,3791], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[4270], BigFloat[18])
        @checkequals(BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[1762], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[83], BigFloat[6], BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[8509,8510], BigFloat[-24,24])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[14640], BigFloat[18])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[4270], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[175], BigFloat[8.485281374238571], BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[27055,27056], BigFloat[-24,24])
        @checkequals(BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[47981], BigFloat[18])
        @checkequals(BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[14640], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[863], BigFloat[8.485281374238571], BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[81570], BigFloat[48])
        @checkequals(BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4], BigInt[1764], BigFloat[18])
        @checkequals(BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[1764], BigFloat[-25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[4270], BigFloat[8.485281374238571], BigInt[], BigFloat[], BigInt[3788,3789], BigFloat[-24,24])
        @checkequals(BigInt[171,172,404,422], BigFloat[-4,-12,8,4], BigInt[3788,3789], BigFloat[33.941125496954285,-33.941125496954285], BigInt[4272], BigFloat[18])
        @checkequals(BigInt[175], BigFloat[25.455844122715714], BigInt[4272], BigFloat[-25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[8507,8508], BigFloat[-24,24])
        @checkequals(BigInt[854,855,857,858,1904,2152], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[8507,8508], BigFloat[33.941125496954285,-33.941125496954285], BigInt[14644], BigFloat[-18])
        @checkequals(BigInt[863], BigFloat[25.455844122715714], BigInt[14644], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[27047,27048], BigFloat[24,-24])
        @checkequals(BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[27047,27048], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[4270], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[2491,3719], BigFloat[10,8])
        @checkequals(BigInt[412], BigFloat[67.88225099390857], BigInt[1762], BigFloat[25.455844122715714], BigInt[3790,3791], BigFloat[-24,24])
        @checkequals(BigInt[863], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[4270], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[5461,8438], BigFloat[10,8])
        @checkequals(BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[4270], BigFloat[25.455844122715714], BigInt[8509,8510], BigFloat[-24,24])
        @checkequals(BigInt[4270], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[8989], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[19056,26783], BigFloat[10,8])
        @checkequals(BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[14640], BigFloat[25.455844122715714], BigInt[27055,27056], BigFloat[-24,24])
        @checkequals(BigInt[421], BigFloat[6], BigInt[], BigFloat[], BigInt[29083], BigFloat[6])
        @checkequals(BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[59062,81360], BigFloat[10,8])
        @checkequals(BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[47981], BigFloat[25.455844122715714], BigInt[81570], BigFloat[48])
        @checkequals(BigInt[2117], BigFloat[8.485281374238571], BigInt[], BigFloat[], BigInt[85993], BigFloat[6])
        @checkequals(BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[2493,3721], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[2493,3721], BigFloat[10,8])
        @checkequals(BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[3788,3789], BigFloat[33.941125496954285,-33.941125496954285], BigInt[3788,3789], BigFloat[-24,24])
        @checkequals(BigInt[8989], BigFloat[8.485281374238571], BigInt[4272], BigFloat[-8.485281374238571], BigInt[4272], BigFloat[6])
        @checkequals(BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4], BigInt[5463,8440], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[5463,8440], BigFloat[10,8])
        @checkequals(BigInt[3375], BigFloat[25.455844122715714], BigInt[8507,8508], BigFloat[33.941125496954285,-33.941125496954285], BigInt[8507,8508], BigFloat[-24,24])
        @checkequals(BigInt[4971,6929], BigFloat[14.142135623730951,11.313708498984761], BigInt[8991], BigFloat[-8.485281374238571], BigInt[8991], BigFloat[6])
        @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[19060,26796], BigFloat[14.142135623730951,11.313708498984761], BigInt[19060,26796], BigFloat[-10,-8])
        @checkequals(BigInt[14640], BigFloat[25.455844122715714], BigInt[27047,27048], BigFloat[-33.941125496954285,33.941125496954285], BigInt[27047,27048], BigFloat[24,-24])
        @checkequals(BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[29087], BigFloat[8.485281374238571], BigInt[29087], BigFloat[-6])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[7288], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[14640], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[8094], BigFloat[6], BigInt[4270], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[29083], BigFloat[8.485281374238571], BigInt[8989], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4], BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[272,273,275,276,653,899], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[47981], BigFloat[25.455844122715714], BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[282], BigFloat[18])
        @checkequals(BigInt[59062,81360], BigFloat[14.142135623730951,11.313708498984761], BigInt[29083], BigFloat[8.485281374238571], BigInt[457,646], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[59062,81360], BigFloat[14.142135623730951,11.313708498984761], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[81570], BigFloat[67.88225099390857], BigInt[81570], BigFloat[67.88225099390857], BigInt[1764], BigFloat[18])
        @checkequals(BigInt[85993], BigFloat[6], BigInt[85993], BigFloat[6], BigInt[2493,3721], BigFloat[10,8])
        if tri === :F
            @checkequals(BigInt[50,51,66,84], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[54], BigFloat[18])
            @checkequals(BigInt[57,59], BigFloat[10,8])
            @checkequals(BigInt[79,80,158,176], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[83], BigFloat[18])
            @checkequals(BigInt[92,151], BigFloat[10,8])
            @checkequals(BigInt[272,273,275,276,650,898], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[281], BigFloat[18])
            @checkequals(BigInt[456,640], BigFloat[10,8])
            @checkequals(BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[1762], BigFloat[18])
            @checkequals(BigInt[2491,3719], BigFloat[10,8])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[282], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[728,729], BigFloat[-24,24])
            @checkequals(BigInt[1764], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[3788,3789], BigFloat[-24,24])
            @checkequals(BigInt[54], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[74], BigFloat[48])
            @checkequals(BigInt[83], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[166], BigFloat[48])
            @checkequals(BigInt[281], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[731,732], BigFloat[-24,24])
            @checkequals(BigInt[1762], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[3790,3791], BigFloat[-24,24])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[457,646], BigFloat[10,8])
            @checkequals(BigInt[728,729], BigFloat[-24,24])
            @checkequals(BigInt[864], BigFloat[6])
            @checkequals(BigInt[2493,3721], BigFloat[10,8])
            @checkequals(BigInt[3788,3789], BigFloat[-24,24])
            @checkequals(BigInt[4272], BigFloat[6])
            @checkequals(BigInt[57,59], BigFloat[10,8])
            @checkequals(BigInt[74], BigFloat[48])
            @checkequals(BigInt[83], BigFloat[6])
            @checkequals(BigInt[92,151], BigFloat[10,8])
            @checkequals(BigInt[166], BigFloat[48])
            @checkequals(BigInt[175], BigFloat[6])
            @checkequals(BigInt[456,640], BigFloat[10,8])
            @checkequals(BigInt[731,732], BigFloat[-24,24])
            @checkequals(BigInt[863], BigFloat[6])
            @checkequals(BigInt[2491,3719], BigFloat[10,8])
            @checkequals(BigInt[3790,3791], BigFloat[-24,24])
            @checkequals(BigInt[4270], BigFloat[6])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[854,855,857,858,1907,2153], BigFloat[6,-6,-2,-2,8,4])
            @checkequals(BigInt[864], BigFloat[18])
            @checkequals(BigInt[1165,1900], BigFloat[10,8])
            @checkequals(BigInt[4250,4251,4252,4253,8458,9006], BigFloat[6,-6,-2,-2,8,4])
            @checkequals(BigInt[4272], BigFloat[18])
            @checkequals(BigInt[5463,8440], BigFloat[10,8])
            @checkequals(BigInt[79,80,158,176], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[83], BigFloat[18])
            @checkequals(BigInt[92,151], BigFloat[10,8])
            @checkequals(BigInt[171,172,404,422], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[175], BigFloat[18])
            @checkequals(BigInt[205,397], BigFloat[10,8])
            @checkequals(BigInt[854,855,857,858,1904,2152], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[863], BigFloat[18])
            @checkequals(BigInt[1164,1894], BigFloat[10,8])
            @checkequals(BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[4270], BigFloat[18])
            @checkequals(BigInt[5461,8438], BigFloat[10,8])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[864], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1982,1983], BigFloat[-24,24])
            @checkequals(BigInt[4272], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[8507,8508], BigFloat[-24,24])
            @checkequals(BigInt[83], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[166], BigFloat[48])
            @checkequals(BigInt[175], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[412], BigFloat[48])
            @checkequals(BigInt[863], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1985,1986], BigFloat[-24,24])
            @checkequals(BigInt[4270], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[8509,8510], BigFloat[-24,24])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1165,1900], BigFloat[10,8])
            @checkequals(BigInt[1982,1983], BigFloat[-24,24])
            @checkequals(BigInt[2118], BigFloat[6])
            @checkequals(BigInt[5463,8440], BigFloat[10,8])
            @checkequals(BigInt[8507,8508], BigFloat[-24,24])
            @checkequals(BigInt[8991], BigFloat[6])
            @checkequals(BigInt[92,151], BigFloat[10,8])
            @checkequals(BigInt[166], BigFloat[48])
            @checkequals(BigInt[175], BigFloat[6])
            @checkequals(BigInt[205,397], BigFloat[10,8])
            @checkequals(BigInt[412], BigFloat[48])
            @checkequals(BigInt[421], BigFloat[6])
            @checkequals(BigInt[1164,1894], BigFloat[10,8])
            @checkequals(BigInt[1985,1986], BigFloat[-24,24])
            @checkequals(BigInt[2117], BigFloat[6])
            @checkequals(BigInt[5461,8438], BigFloat[10,8])
            @checkequals(BigInt[8509,8510], BigFloat[-24,24])
            @checkequals(BigInt[8989], BigFloat[6])
            @checkequals(BigInt[272,273,275,276,653,899], BigFloat[-6,6,2,2,-8,-4])
            @checkequals(BigInt[282], BigFloat[-18])
            @checkequals(BigInt[457,646], BigFloat[-10,-8])
            @checkequals(BigInt[854,855,857,858,1907,2153], BigFloat[-6,6,2,2,-8,-4])
            @checkequals(BigInt[864], BigFloat[-18])
            @checkequals(BigInt[1165,1900], BigFloat[-10,-8])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[-6,6,2,2,-8,-4])
            @checkequals(BigInt[14644], BigFloat[-18])
            @checkequals(BigInt[19060,26796], BigFloat[-10,-8])
            @checkequals(BigInt[272,273,275,276,650,898], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[281], BigFloat[18])
            @checkequals(BigInt[456,640], BigFloat[10,8])
            @checkequals(BigInt[854,855,857,858,1904,2152], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[863], BigFloat[18])
            @checkequals(BigInt[1164,1894], BigFloat[10,8])
            @checkequals(BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[3375], BigFloat[18])
            @checkequals(BigInt[4971,6929], BigFloat[10,8])
            @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[14640], BigFloat[18])
            @checkequals(BigInt[19056,26783], BigFloat[10,8])
            @checkequals(BigInt[282], BigFloat[-18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[728,729], BigFloat[24,-24])
            @checkequals(BigInt[864], BigFloat[-18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1982,1983], BigFloat[24,-24])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[14644], BigFloat[-18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[27047,27048], BigFloat[24,-24])
            @checkequals(BigInt[281], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[731,732], BigFloat[-24,24])
            @checkequals(BigInt[863], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1985,1986], BigFloat[-24,24])
            @checkequals(BigInt[3375], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[7288], BigFloat[48])
            @checkequals(BigInt[14640], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[27055,27056], BigFloat[-24,24])
            @checkequals(BigInt[457,646], BigFloat[-10,-8])
            @checkequals(BigInt[728,729], BigFloat[24,-24])
            @checkequals(BigInt[864], BigFloat[-6])
            @checkequals(BigInt[1165,1900], BigFloat[-10,-8])
            @checkequals(BigInt[1982,1983], BigFloat[24,-24])
            @checkequals(BigInt[2118], BigFloat[-6])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[19060,26796], BigFloat[-10,-8])
            @checkequals(BigInt[27047,27048], BigFloat[24,-24])
            @checkequals(BigInt[29087], BigFloat[-6])
            @checkequals(BigInt[456,640], BigFloat[10,8])
            @checkequals(BigInt[731,732], BigFloat[-24,24])
            @checkequals(BigInt[863], BigFloat[6])
            @checkequals(BigInt[1164,1894], BigFloat[10,8])
            @checkequals(BigInt[1985,1986], BigFloat[-24,24])
            @checkequals(BigInt[2117], BigFloat[6])
            @checkequals(BigInt[4971,6929], BigFloat[10,8])
            @checkequals(BigInt[7288], BigFloat[48])
            @checkequals(BigInt[8094], BigFloat[6])
            @checkequals(BigInt[19056,26783], BigFloat[10,8])
            @checkequals(BigInt[27055,27056], BigFloat[-24,24])
            @checkequals(BigInt[29083], BigFloat[6])
            @checkequals(BigInt[1742,1743,1744,1745,3739,4287], BigFloat[-6,6,2,2,-8,-4])
            @checkequals(BigInt[1764], BigFloat[-18])
            @checkequals(BigInt[2493,3721], BigFloat[-10,-8])
            @checkequals(BigInt[4250,4251,4252,4253,8458,9006], BigFloat[-6,6,2,2,-8,-4])
            @checkequals(BigInt[4272], BigFloat[-18])
            @checkequals(BigInt[5463,8440], BigFloat[-10,-8])
            @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[6,-6,-2,-2,8,4])
            @checkequals(BigInt[14644], BigFloat[18])
            @checkequals(BigInt[19060,26796], BigFloat[10,8])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[1762], BigFloat[18])
            @checkequals(BigInt[2491,3719], BigFloat[10,8])
            @checkequals(BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[4270], BigFloat[18])
            @checkequals(BigInt[5461,8438], BigFloat[10,8])
            @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[14640], BigFloat[18])
            @checkequals(BigInt[19056,26783], BigFloat[10,8])
            @checkequals(BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[47981], BigFloat[18])
            @checkequals(BigInt[59062,81360], BigFloat[10,8])
            @checkequals(BigInt[1764], BigFloat[-18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[3788,3789], BigFloat[24,-24])
            @checkequals(BigInt[4272], BigFloat[-18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[8507,8508], BigFloat[24,-24])
            @checkequals(BigInt[14644], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[27047,27048], BigFloat[-24,24])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1762], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[3790,3791], BigFloat[-24,24])
            @checkequals(BigInt[4270], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[8509,8510], BigFloat[-24,24])
            @checkequals(BigInt[14640], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[27055,27056], BigFloat[-24,24])
            @checkequals(BigInt[47981], BigFloat[18])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[81570], BigFloat[48])
            @checkequals(BigInt[2493,3721], BigFloat[-10,-8])
            @checkequals(BigInt[3788,3789], BigFloat[24,-24])
            @checkequals(BigInt[4272], BigFloat[-6])
            @checkequals(BigInt[5463,8440], BigFloat[-10,-8])
            @checkequals(BigInt[8507,8508], BigFloat[24,-24])
            @checkequals(BigInt[8991], BigFloat[-6])
            @checkequals(BigInt[19060,26796], BigFloat[10,8])
            @checkequals(BigInt[27047,27048], BigFloat[-24,24])
            @checkequals(BigInt[29087], BigFloat[6])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2491,3719], BigFloat[10,8])
            @checkequals(BigInt[3790,3791], BigFloat[-24,24])
            @checkequals(BigInt[4270], BigFloat[6])
            @checkequals(BigInt[5461,8438], BigFloat[10,8])
            @checkequals(BigInt[8509,8510], BigFloat[-24,24])
            @checkequals(BigInt[8989], BigFloat[6])
            @checkequals(BigInt[19056,26783], BigFloat[10,8])
            @checkequals(BigInt[27055,27056], BigFloat[-24,24])
            @checkequals(BigInt[29083], BigFloat[6])
            @checkequals(BigInt[59062,81360], BigFloat[10,8])
            @checkequals(BigInt[81570], BigFloat[48])
            @checkequals(BigInt[85993], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 70
        @test dim == 24
        iter = iterate(data)
        @checkequals(BigInt[50,51,66,84], BigFloat[-4,-12,8,4], BigInt[50,51,66,84], BigFloat[-4,-12,8,4], BigInt[50,51,66,84], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[60,66], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[60,66], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[60,66], BigFloat[2,2])
        @checkequals(BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[57,59], BigFloat[10,8])
        @checkequals(BigInt[79,80,158,176], BigFloat[-5.656854249492381,-16.970562748477143,11.313708498984761,5.656854249492381], BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[79,80,158,176], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[74], BigFloat[67.88225099390857], BigInt[152,158], BigFloat[2,2])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[83], BigFloat[6], BigInt[92,151], BigFloat[10,8])
        @checkequals(BigInt[272,273,275,276,650,898], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[79,80,158,176], BigFloat[-5.656854249492381,-16.970562748477143,11.313708498984761,5.656854249492381], BigInt[272,273,275,276,650,898], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[457,639,641,647,650], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[457,639,641,647,650], BigFloat[6,8,-8,2,2])
        @checkequals(BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[456,640], BigFloat[10,8])
        @checkequals(BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[171,172,404,422], BigFloat[-4,-12,8,4], BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[2493,3718,3720,3722,3737], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[2493,3718,3720,3722,3737], BigFloat[6,8,-8,2,2])
        @checkequals(BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[2491,3719], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[166], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[57,58,60], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[398,404], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[57,58,60], BigFloat[6,2,-16])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[92,150,152], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[166], BigFloat[67.88225099390857], BigInt[92,150,152], BigFloat[6,2,-16])
        @checkequals(BigInt[], BigFloat[], BigInt[175], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[272,273,275,276,653,899], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[272,273,275,276,653,899], BigFloat[-6,6,2,2,-8,-4])
        @checkequals(BigInt[456,639,645,647,653], BigFloat[8.485281374238571,2.8284271247461903,11.313708498984761,-11.313708498984761,-2.8284271247461903], BigInt[412], BigFloat[67.88225099390857], BigInt[456,639,645,647,653], BigFloat[6,2,8,-8,-2])
        @checkequals(BigInt[457,646], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[421], BigFloat[6], BigInt[457,646], BigFloat[-10,-8])
        @checkequals(BigInt[1742,1743,1744,1745,3739,4287], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[272,273,275,276,650,898], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[-6,6,2,2,-8,-4])
        @checkequals(BigInt[2491,3718,3722,3739], BigFloat[8.485281374238571,2.8284271247461903,-11.313708498984761,-2.8284271247461903], BigInt[457,639,641,645,650], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,-2.8284271247461903,2.8284271247461903], BigInt[2491,3718,3722,3739], BigFloat[6,2,-8,-2])
        @checkequals(BigInt[2493,3721], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[2493,3721], BigFloat[-10,-8])
        @checkequals(BigInt[], BigFloat[], BigInt[854,855,857,858,1904,2152], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[60,66], BigFloat[2,2])
        @checkequals(BigInt[74], BigFloat[67.88225099390857], BigInt[1165,1893,1895,1899,1904], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,-2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[74], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4], BigInt[152,158], BigFloat[2,2])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[457,639,641,647,650], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[457,639,641,645,650], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,-2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[166], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[457,639,641,645,650], BigFloat[-6,-8,8,-2,2])
        @checkequals(BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[1165,1893,1895,1901,1904], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[2493,3718,3720,3737], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[], BigFloat[], BigInt[731,732], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[2493,3718,3720,3737], BigFloat[-6,-8,8,2])
        @checkequals(BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[6930,6939], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[57,58,60], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[], BigInt[3790,3791], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[57,58,60], BigFloat[-6,-2,16])
        @checkequals(BigInt[], BigFloat[], BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[92,150,152], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[863], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[92,150,152], BigFloat[-6,-2,16])
        @checkequals(BigInt[], BigFloat[], BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[456,641,645,647,653], BigFloat[-8.485281374238571,-2.8284271247461903,-11.313708498984761,11.313708498984761,-2.8284271247461903], BigInt[2117], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[4971,6929], BigFloat[14.142135623730951,11.313708498984761], BigInt[456,641,645,647,653], BigFloat[-6,-2,-8,8,-2])
        @checkequals(BigInt[728,729], BigFloat[33.941125496954285,-33.941125496954285], BigInt[7288], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[2491,3720,3722,3739], BigFloat[-8.485281374238571,-2.8284271247461903,11.313708498984761,-2.8284271247461903], BigInt[8094], BigFloat[6], BigInt[728,729], BigFloat[24,-24])
        @checkequals(BigInt[], BigFloat[], BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[2491,3720,3722,3739], BigFloat[-6,-2,8,-2])
        @checkequals(BigInt[3788,3789], BigFloat[33.941125496954285,-33.941125496954285], BigInt[2493,3718,3720,3737], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[83], BigFloat[6], BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[3788,3789], BigFloat[24,-24])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[57,59], BigFloat[10,8])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[5463,8437,8439,8456], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[74], BigFloat[48])
        @checkequals(BigInt[175], BigFloat[8.485281374238571], BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[83], BigFloat[6])
        @checkequals(BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[92,151], BigFloat[10,8])
        @checkequals(BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[19060,26782,26784,26797,26806], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[166], BigFloat[48])
        @checkequals(BigInt[863], BigFloat[8.485281374238571], BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[175], BigFloat[6])
        @checkequals(BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4], BigInt[456,640], BigFloat[10,8])
        @checkequals(BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[2493,3718,3720,3722,3737], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[731,732], BigFloat[-24,24])
        @checkequals(BigInt[4270], BigFloat[8.485281374238571], BigInt[], BigFloat[], BigInt[863], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[2491,3719], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[5463,8437,8439,8441,8456], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[3790,3791], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[4270], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[19060,26782,26784,26795,26806], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,-2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[457,646], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[728,729], BigFloat[33.941125496954285,-33.941125496954285], BigInt[81361,81393], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[864], BigFloat[-8.485281374238571], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[2493,3721], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[457,646], BigFloat[-10,-8])
        @checkequals(BigInt[3788,3789], BigFloat[33.941125496954285,-33.941125496954285], BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[728,729], BigFloat[24,-24])
        @checkequals(BigInt[4272], BigFloat[-8.485281374238571], BigInt[4270], BigFloat[8.485281374238571], BigInt[864], BigFloat[-6])
        @checkequals(BigInt[171,172,404,422], BigFloat[-4,-12,8,4], BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[2493,3721], BigFloat[-10,-8])
        @checkequals(BigInt[398,404], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[3788,3789], BigFloat[24,-24])
        @checkequals(BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[8989], BigFloat[8.485281374238571], BigInt[4272], BigFloat[-6])
        @checkequals(BigInt[854,855,857,858,1904,2152], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[79,80,158,176], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[1165,1893,1895,1901,1904], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[152,158], BigFloat[2,2])
        @checkequals(BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[29083], BigFloat[8.485281374238571], BigInt[92,151], BigFloat[10,8])
        @checkequals(BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[59062,81360], BigFloat[14.142135623730951,11.313708498984761], BigInt[171,172,404,422], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[5463,8437,8439,8441,8456], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[81570], BigFloat[67.88225099390857], BigInt[398,404], BigFloat[2,2])
        @checkequals(BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[85993], BigFloat[6], BigInt[205,397], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[854,855,857,858,1904,2152], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[92,150,152], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[57,58,60], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[1165,1893,1895,1901,1904], BigFloat[6,8,-8,2,2])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[1164,1894], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[205,396,398], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[92,150,152], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[5463,8437,8439,8441,8456], BigFloat[6,8,-8,2,2])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[5461,8438], BigFloat[10,8])
        @checkequals(BigInt[854,855,857,858,1907,2153], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[272,273,275,276,653,899], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[1164,1893,1899,1901,1907], BigFloat[8.485281374238571,2.8284271247461903,11.313708498984761,-11.313708498984761,-2.8284271247461903], BigInt[456,639,645,647,653], BigFloat[-8.485281374238571,-2.8284271247461903,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[92,150,152], BigFloat[6,2,-16])
        @checkequals(BigInt[1165,1900], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[457,646], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[4250,4251,4252,4253,8458,9006], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[5461,8437,8441,8458], BigFloat[8.485281374238571,2.8284271247461903,-11.313708498984761,-2.8284271247461903], BigInt[2491,3718,3722,3739], BigFloat[-8.485281374238571,-2.8284271247461903,11.313708498984761,2.8284271247461903], BigInt[205,396,398], BigFloat[6,2,-16])
        @checkequals(BigInt[5463,8440], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[2493,3721], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[50,51,66,84], BigFloat[-4,-12,8,4], BigInt[854,855,857,858,1907,2153], BigFloat[-6,6,2,2,-8,-4])
        @checkequals(BigInt[412], BigFloat[67.88225099390857], BigInt[57,58,60], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[1164,1893,1899,1901,1907], BigFloat[6,2,8,-8,-2])
        @checkequals(BigInt[1165,1893,1895,1899,1904], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,-2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[1165,1900], BigFloat[-10,-8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[4250,4251,4252,4253,8458,9006], BigFloat[-6,6,2,2,-8,-4])
        @checkequals(BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[92,150,152], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[5461,8437,8441,8458], BigFloat[6,2,-8,-2])
        @checkequals(BigInt[5463,8437,8439,8456], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[], BigFloat[], BigInt[5463,8440], BigFloat[-10,-8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[152,158], BigFloat[2,2])
        @checkequals(BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[456,641,645,647,653], BigFloat[8.485281374238571,2.8284271247461903,11.313708498984761,-11.313708498984761,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[92,150,152], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[], BigInt[166], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[728,729], BigFloat[-33.941125496954285,33.941125496954285], BigInt[398,404], BigFloat[2,2])
        @checkequals(BigInt[], BigFloat[], BigInt[2491,3720,3722,3739], BigFloat[8.485281374238571,2.8284271247461903,-11.313708498984761,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[205,396,398], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[], BigInt[412], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[3788,3789], BigFloat[-33.941125496954285,33.941125496954285], BigInt[1165,1893,1895,1899,1904], BigFloat[-6,-8,8,-2,2])
        @checkequals(BigInt[], BigFloat[], BigInt[60,66], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[1164,1895,1899,1901,1907], BigFloat[-8.485281374238571,-2.8284271247461903,-11.313708498984761,11.313708498984761,-2.8284271247461903], BigInt[], BigFloat[], BigInt[1985,1986], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[5463,8437,8439,8456], BigFloat[-6,-8,8,2])
        @checkequals(BigInt[1982,1983], BigFloat[33.941125496954285,-33.941125496954285], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[5461,8439,8441,8458], BigFloat[-8.485281374238571,-2.8284271247461903,11.313708498984761,-2.8284271247461903], BigInt[], BigFloat[], BigInt[8509,8510], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[92,150,152], BigFloat[-6,-2,16])
        @checkequals(BigInt[8507,8508], BigFloat[33.941125496954285,-33.941125496954285], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[421], BigFloat[6], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[457,646], BigFloat[14.142135623730951,11.313708498984761], BigInt[205,396,398], BigFloat[-6,-2,16])
        @checkequals(BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[728,729], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[2117], BigFloat[8.485281374238571], BigInt[864], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[2493,3721], BigFloat[14.142135623730951,11.313708498984761], BigInt[1164,1895,1899,1901,1907], BigFloat[-6,-2,-8,8,-2])
        @checkequals(BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[3788,3789], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[8989], BigFloat[8.485281374238571], BigInt[4272], BigFloat[8.485281374238571], BigInt[1982,1983], BigFloat[24,-24])
        @checkequals(BigInt[], BigFloat[], BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[5461,8439,8441,8458], BigFloat[-6,-2,8,-2])
        @checkequals(BigInt[], BigFloat[], BigInt[74], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[83], BigFloat[6], BigInt[8507,8508], BigFloat[24,-24])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[92,151], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[92,150,152], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[166], BigFloat[48])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[175], BigFloat[6])
        @checkequals(BigInt[1165,1900], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[], BigFloat[], BigInt[205,397], BigFloat[10,8])
        @checkequals(BigInt[1982,1983], BigFloat[33.941125496954285,-33.941125496954285], BigInt[205,396,398], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[412], BigFloat[48])
        @checkequals(BigInt[2118], BigFloat[-8.485281374238571], BigInt[], BigFloat[], BigInt[421], BigFloat[6])
        @checkequals(BigInt[5463,8440], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[854,855,857,858,1907,2153], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[1164,1894], BigFloat[10,8])
        @checkequals(BigInt[8507,8508], BigFloat[33.941125496954285,-33.941125496954285], BigInt[1164,1893,1899,1901,1907], BigFloat[-8.485281374238571,-2.8284271247461903,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[1985,1986], BigFloat[-24,24])
        @checkequals(BigInt[8991], BigFloat[-8.485281374238571], BigInt[1165,1900], BigFloat[14.142135623730951,11.313708498984761], BigInt[2117], BigFloat[6])
        @checkequals(BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4], BigInt[4250,4251,4252,4253,8458,9006], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[5461,8438], BigFloat[10,8])
        @checkequals(BigInt[6930,6939], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[5461,8437,8441,8458], BigFloat[-8.485281374238571,-2.8284271247461903,11.313708498984761,2.8284271247461903], BigInt[8509,8510], BigFloat[-24,24])
        @checkequals(BigInt[4971,6929], BigFloat[14.142135623730951,11.313708498984761], BigInt[5463,8440], BigFloat[14.142135623730951,11.313708498984761], BigInt[8989], BigFloat[6])
        @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[79,80,158,176], BigFloat[-5.656854249492381,-16.970562748477143,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[19060,26782,26784,26795,26806], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,-2.8284271247461903,2.8284271247461903], BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[272,273,275,276,653,899], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[171,172,404,422], BigFloat[-4,-12,8,4], BigInt[], BigFloat[])
        @checkequals(BigInt[456,641,645,647,653], BigFloat[8.485281374238571,2.8284271247461903,11.313708498984761,-11.313708498984761,2.8284271247461903], BigInt[92,150,152], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[457,646], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[854,855,857,858,1907,2153], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[], BigFloat[], BigInt[1165,1900], BigFloat[-10,-8])
        @checkequals(BigInt[1164,1895,1899,1901,1907], BigFloat[8.485281374238571,2.8284271247461903,11.313708498984761,-11.313708498984761,2.8284271247461903], BigInt[205,396,398], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[1982,1983], BigFloat[24,-24])
        @checkequals(BigInt[1165,1900], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[2118], BigFloat[-6])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[5463,8440], BigFloat[-10,-8])
        @checkequals(BigInt[4971,6928,6930], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[1164,1895,1899,1901,1907], BigFloat[8.485281374238571,2.8284271247461903,11.313708498984761,-11.313708498984761,2.8284271247461903], BigInt[8507,8508], BigFloat[24,-24])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[8991], BigFloat[-6])
        @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[1982,1983], BigFloat[-33.941125496954285,33.941125496954285], BigInt[272,273,275,276,650,898], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[19056,26784,26795,26797,26814], BigFloat[8.485281374238571,2.8284271247461903,11.313708498984761,-11.313708498984761,2.8284271247461903], BigInt[5461,8439,8441,8458], BigFloat[8.485281374238571,2.8284271247461903,-11.313708498984761,2.8284271247461903], BigInt[457,639,641,645,650], BigFloat[-6,-8,8,-2,2])
        @checkequals(BigInt[19060,26796], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[456,640], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[8507,8508], BigFloat[-33.941125496954285,33.941125496954285], BigInt[854,855,857,858,1904,2152], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[7288], BigFloat[67.88225099390857], BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[1165,1893,1895,1899,1904], BigFloat[-6,-8,8,-2,2])
        @checkequals(BigInt[19060,26782,26784,26797,26806], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[1164,1894], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[166], BigFloat[67.88225099390857], BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[398,404], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[6930,6939], BigFloat[2,2])
        @checkequals(BigInt[456,639,645,647,653], BigFloat[-8.485281374238571,-2.8284271247461903,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[], BigFloat[], BigInt[4971,6929], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[728,729], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[], BigInt[19060,26782,26784,26795,26806], BigFloat[-6,-8,8,-2,2])
        @checkequals(BigInt[1164,1893,1899,1901,1907], BigFloat[-8.485281374238571,-2.8284271247461903,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[], BigFloat[], BigInt[19056,26783], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[272,273,275,276,653,899], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[1982,1983], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[], BigInt[456,641,645,647,653], BigFloat[6,2,8,-8,2])
        @checkequals(BigInt[4971,6928,6930], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[], BigInt[457,646], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[1165,1900], BigFloat[14.142135623730951,11.313708498984761], BigInt[854,855,857,858,1907,2153], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[], BigFloat[], BigInt[1982,1983], BigFloat[-33.941125496954285,33.941125496954285], BigInt[1164,1895,1899,1901,1907], BigFloat[6,2,8,-8,2])
        @checkequals(BigInt[19056,26782,26795,26797,26814], BigFloat[-8.485281374238571,-2.8284271247461903,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[2118], BigFloat[8.485281374238571], BigInt[1165,1900], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[5463,8440], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[27047,27048], BigFloat[-33.941125496954285,33.941125496954285], BigInt[8507,8508], BigFloat[-33.941125496954285,33.941125496954285], BigInt[4971,6928,6930], BigFloat[6,2,-16])
        @checkequals(BigInt[8094], BigFloat[6], BigInt[8991], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[14606,14607,14614,14615,26814,29213], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[166], BigFloat[67.88225099390857], BigInt[19056,26784,26795,26797,26814], BigFloat[6,2,8,-8,2])
        @checkequals(BigInt[29083], BigFloat[8.485281374238571], BigInt[175], BigFloat[8.485281374238571], BigInt[19060,26796], BigFloat[10,8])
        @checkequals(BigInt[457,646], BigFloat[14.142135623730951,11.313708498984761], BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[457,639,641,647,650], BigFloat[6,8,-8,2,2])
        @checkequals(BigInt[728,729], BigFloat[-33.941125496954285,33.941125496954285], BigInt[412], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[864], BigFloat[8.485281374238571], BigInt[421], BigFloat[6], BigInt[731,732], BigFloat[-24,24])
        @checkequals(BigInt[1165,1900], BigFloat[14.142135623730951,11.313708498984761], BigInt[272,273,275,276,653,899], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[1165,1893,1895,1901,1904], BigFloat[6,8,-8,2,2])
        @checkequals(BigInt[1982,1983], BigFloat[-33.941125496954285,33.941125496954285], BigInt[456,641,645,647,653], BigFloat[-8.485281374238571,-2.8284271247461903,-11.313708498984761,11.313708498984761,-2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[2118], BigFloat[8.485281374238571], BigInt[457,646], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[1985,1986], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[854,855,857,858,1907,2153], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[6930,6939], BigFloat[2,2])
        @checkequals(BigInt[], BigFloat[], BigInt[1164,1895,1899,1901,1907], BigFloat[-8.485281374238571,-2.8284271247461903,-11.313708498984761,11.313708498984761,-2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[1165,1900], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[7288], BigFloat[48])
        @checkequals(BigInt[19060,26796], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[19060,26782,26784,26797,26806], BigFloat[6,8,-8,2,2])
        @checkequals(BigInt[27047,27048], BigFloat[-33.941125496954285,33.941125496954285], BigInt[4971,6928,6930], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[29087], BigFloat[8.485281374238571], BigInt[], BigFloat[], BigInt[27055,27056], BigFloat[-24,24])
        @checkequals(BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4], BigInt[14606,14607,14614,14615,26814,29213], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[456,639,645,647,653], BigFloat[-6,-2,-8,8,2])
        @checkequals(BigInt[81361,81393], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[19056,26784,26795,26797,26814], BigFloat[-8.485281374238571,-2.8284271247461903,-11.313708498984761,11.313708498984761,-2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[59062,81360], BigFloat[14.142135623730951,11.313708498984761], BigInt[19060,26796], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[728,729], BigFloat[-24,24])
        @checkequals(BigInt[1742,1743,1744,1745,3739,4287], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[272,273,275,276,650,898], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[1164,1893,1899,1901,1907], BigFloat[-6,-2,-8,8,2])
        @checkequals(BigInt[2491,3720,3722,3739], BigFloat[8.485281374238571,2.8284271247461903,-11.313708498984761,2.8284271247461903], BigInt[457,639,641,645,650], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,-2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[2493,3721], BigFloat[14.142135623730951,11.313708498984761], BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[1982,1983], BigFloat[-24,24])
        @checkequals(BigInt[4250,4251,4252,4253,8458,9006], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[854,855,857,858,1904,2152], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[4971,6928,6930], BigFloat[-6,-2,16])
        @checkequals(BigInt[5461,8439,8441,8458], BigFloat[8.485281374238571,2.8284271247461903,-11.313708498984761,2.8284271247461903], BigInt[1165,1893,1895,1899,1904], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,-2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[5463,8440], BigFloat[14.142135623730951,11.313708498984761], BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4], BigInt[19056,26782,26795,26797,26814], BigFloat[-6,-2,-8,8,2])
        @checkequals(BigInt[19056,26782,26795,26797,26814], BigFloat[8.485281374238571,2.8284271247461903,11.313708498984761,-11.313708498984761,-2.8284271247461903], BigInt[456,639,645,647,653], BigFloat[8.485281374238571,2.8284271247461903,11.313708498984761,-11.313708498984761,-2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[19060,26796], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[], BigFloat[], BigInt[27047,27048], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[728,729], BigFloat[33.941125496954285,-33.941125496954285], BigInt[456,640], BigFloat[10,8])
        @checkequals(BigInt[59062,81359,81361], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[1164,1893,1899,1901,1907], BigFloat[8.485281374238571,2.8284271247461903,11.313708498984761,-11.313708498984761,-2.8284271247461903], BigInt[731,732], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[863], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[1982,1983], BigFloat[33.941125496954285,-33.941125496954285], BigInt[1164,1894], BigFloat[10,8])
        @checkequals(BigInt[81570], BigFloat[67.88225099390857], BigInt[4971,6928,6930], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[1985,1986], BigFloat[-24,24])
        @checkequals(BigInt[2491,3718,3722,3739], BigFloat[-8.485281374238571,-2.8284271247461903,11.313708498984761,2.8284271247461903], BigInt[], BigFloat[], BigInt[2117], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[4971,6929], BigFloat[10,8])
        @checkequals(BigInt[3788,3789], BigFloat[-33.941125496954285,33.941125496954285], BigInt[19056,26782,26795,26797,26814], BigFloat[8.485281374238571,2.8284271247461903,11.313708498984761,-11.313708498984761,-2.8284271247461903], BigInt[7288], BigFloat[48])
        @checkequals(BigInt[5461,8437,8441,8458], BigFloat[-8.485281374238571,-2.8284271247461903,11.313708498984761,2.8284271247461903], BigInt[], BigFloat[], BigInt[8094], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[27047,27048], BigFloat[33.941125496954285,-33.941125496954285], BigInt[19056,26783], BigFloat[10,8])
        @checkequals(BigInt[8507,8508], BigFloat[-33.941125496954285,33.941125496954285], BigInt[457,639,641,647,650], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[27055,27056], BigFloat[-24,24])
        @checkequals(BigInt[19056,26784,26795,26797,26814], BigFloat[-8.485281374238571,-2.8284271247461903,-11.313708498984761,11.313708498984761,-2.8284271247461903], BigInt[], BigFloat[], BigInt[29083], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[457,646], BigFloat[10,8])
        @checkequals(BigInt[27047,27048], BigFloat[33.941125496954285,-33.941125496954285], BigInt[1165,1893,1895,1901,1904], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[728,729], BigFloat[-24,24])
        @checkequals(BigInt[59062,81359,81361], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[], BigInt[864], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[1165,1900], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[6930,6939], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[1982,1983], BigFloat[-24,24])
        @checkequals(BigInt[85993], BigFloat[6], BigInt[], BigFloat[], BigInt[2118], BigFloat[6])
        @checkequals(BigInt[2493,3721], BigFloat[14.142135623730951,11.313708498984761], BigInt[457,646], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[3788,3789], BigFloat[-33.941125496954285,33.941125496954285], BigInt[728,729], BigFloat[33.941125496954285,-33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[4272], BigFloat[8.485281374238571], BigInt[864], BigFloat[-8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[5463,8440], BigFloat[14.142135623730951,11.313708498984761], BigInt[1165,1900], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[19060,26796], BigFloat[10,8])
        @checkequals(BigInt[8507,8508], BigFloat[-33.941125496954285,33.941125496954285], BigInt[1982,1983], BigFloat[33.941125496954285,-33.941125496954285], BigInt[27047,27048], BigFloat[-24,24])
        @checkequals(BigInt[8991], BigFloat[8.485281374238571], BigInt[2118], BigFloat[-8.485281374238571], BigInt[29087], BigFloat[6])
        @checkequals(BigInt[19060,26796], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[], BigFloat[], BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[27047,27048], BigFloat[33.941125496954285,-33.941125496954285], BigInt[], BigFloat[], BigInt[2493,3718,3720,3737], BigFloat[-6,-8,8,2])
        @checkequals(BigInt[29087], BigFloat[-8.485281374238571], BigInt[], BigFloat[], BigInt[2491,3719], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[19060,26796], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[], BigFloat[], BigInt[27047,27048], BigFloat[33.941125496954285,-33.941125496954285], BigInt[5463,8437,8439,8456], BigFloat[-6,-8,8,2])
        @checkequals(BigInt[], BigFloat[], BigInt[29087], BigFloat[-8.485281374238571], BigInt[5461,8438], BigFloat[10,8])
        @checkequals(BigInt[50,51,66,84], BigFloat[-4,-12,8,4], BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2,-2,6,-6,8,4])
        @checkequals(BigInt[60,66], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[19060,26782,26784,26797,26806], BigFloat[6,8,-8,2,2])
        @checkequals(BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[863], BigFloat[8.485281374238571], BigInt[19056,26783], BigFloat[10,8])
        @checkequals(BigInt[79,80,158,176], BigFloat[-5.656854249492381,-16.970562748477143,11.313708498984761,5.656854249492381], BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[81361,81393], BigFloat[2,2])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[2117], BigFloat[8.485281374238571], BigInt[59062,81360], BigFloat[10,8])
        @checkequals(BigInt[272,273,275,276,650,898], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[4971,6929], BigFloat[14.142135623730951,11.313708498984761], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[457,639,641,647,650], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[7288], BigFloat[67.88225099390857], BigInt[2491,3720,3722,3739], BigFloat[6,2,-8,2])
        @checkequals(BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[8094], BigFloat[6], BigInt[2493,3721], BigFloat[10,8])
        @checkequals(BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[4250,4251,4252,4253,8458,9006], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[2493,3718,3720,3722,3737], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[2491,3720,3722,3739], BigFloat[-8.485281374238571,-2.8284271247461903,11.313708498984761,-2.8284271247461903], BigInt[5461,8439,8441,8458], BigFloat[6,2,-8,2])
        @checkequals(BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[2493,3721], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[5463,8440], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[4250,4251,4252,4253,8458,9006], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[14606,14607,14614,14615,26814,29213], BigFloat[-6,6,2,2,-8,-4])
        @checkequals(BigInt[74], BigFloat[67.88225099390857], BigInt[5461,8439,8441,8458], BigFloat[-8.485281374238571,-2.8284271247461903,11.313708498984761,-2.8284271247461903], BigInt[19056,26782,26795,26797,26814], BigFloat[6,2,8,-8,-2])
        @checkequals(BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[5463,8440], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[19060,26796], BigFloat[-10,-8])
        @checkequals(BigInt[], BigFloat[], BigInt[14606,14607,14614,14615,26814,29213], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[19056,26782,26795,26797,26814], BigFloat[-8.485281374238571,-2.8284271247461903,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[59062,81359,81361], BigFloat[6,2,-16])
        @checkequals(BigInt[457,639,641,645,650], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,-2.8284271247461903,2.8284271247461903], BigInt[19060,26796], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[2493,3718,3720,3722,3737], BigFloat[6,8,-8,2,2])
        @checkequals(BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[59062,81359,81361], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[2493,3718,3720,3737], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[], BigFloat[], BigInt[3790,3791], BigFloat[-24,24])
        @checkequals(BigInt[], BigFloat[], BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[5463,8437,8439,8441,8456], BigFloat[6,8,-8,2,2])
        @checkequals(BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[2493,3718,3720,3737], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[83], BigFloat[6], BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[8509,8510], BigFloat[-24,24])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[19060,26782,26784,26795,26806], BigFloat[-6,-8,8,-2,2])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[5463,8437,8439,8456], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[175], BigFloat[8.485281374238571], BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[27055,27056], BigFloat[-24,24])
        @checkequals(BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[81361,81393], BigFloat[2,2])
        @checkequals(BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[19060,26782,26784,26797,26806], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[863], BigFloat[8.485281374238571], BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[81570], BigFloat[48])
        @checkequals(BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4], BigInt[2491,3718,3722,3739], BigFloat[-6,-2,8,2])
        @checkequals(BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[2491,3718,3722,3739], BigFloat[8.485281374238571,2.8284271247461903,-11.313708498984761,-2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[4270], BigFloat[8.485281374238571], BigInt[], BigFloat[], BigInt[3788,3789], BigFloat[-24,24])
        @checkequals(BigInt[171,172,404,422], BigFloat[-4,-12,8,4], BigInt[3788,3789], BigFloat[33.941125496954285,-33.941125496954285], BigInt[5461,8437,8441,8458], BigFloat[-6,-2,8,2])
        @checkequals(BigInt[398,404], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[5461,8437,8441,8458], BigFloat[8.485281374238571,2.8284271247461903,-11.313708498984761,-2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[8507,8508], BigFloat[-24,24])
        @checkequals(BigInt[854,855,857,858,1904,2152], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[8507,8508], BigFloat[33.941125496954285,-33.941125496954285], BigInt[19056,26784,26795,26797,26814], BigFloat[-6,-2,-8,8,-2])
        @checkequals(BigInt[1165,1893,1895,1901,1904], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[19056,26784,26795,26797,26814], BigFloat[8.485281374238571,2.8284271247461903,11.313708498984761,-11.313708498984761,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[27047,27048], BigFloat[24,-24])
        @checkequals(BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[27047,27048], BigFloat[-33.941125496954285,33.941125496954285], BigInt[59062,81359,81361], BigFloat[-6,-2,16])
        @checkequals(BigInt[5463,8437,8439,8441,8456], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[59062,81359,81361], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[2491,3719], BigFloat[10,8])
        @checkequals(BigInt[412], BigFloat[67.88225099390857], BigInt[2493,3718,3720,3722,3737], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[3790,3791], BigFloat[-24,24])
        @checkequals(BigInt[1165,1893,1895,1899,1904], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,-2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[4270], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[5461,8438], BigFloat[10,8])
        @checkequals(BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[5463,8437,8439,8441,8456], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[8509,8510], BigFloat[-24,24])
        @checkequals(BigInt[5463,8437,8439,8456], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[], BigFloat[], BigInt[8989], BigFloat[6])
        @checkequals(BigInt[], BigFloat[], BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[19056,26783], BigFloat[10,8])
        @checkequals(BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[19060,26782,26784,26795,26806], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,-2.8284271247461903,2.8284271247461903], BigInt[27055,27056], BigFloat[-24,24])
        @checkequals(BigInt[421], BigFloat[6], BigInt[], BigFloat[], BigInt[29083], BigFloat[6])
        @checkequals(BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[59062,81360], BigFloat[10,8])
        @checkequals(BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[81361,81393], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[81570], BigFloat[48])
        @checkequals(BigInt[2117], BigFloat[8.485281374238571], BigInt[], BigFloat[], BigInt[85993], BigFloat[6])
        @checkequals(BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[2493,3721], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[2493,3721], BigFloat[10,8])
        @checkequals(BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[3788,3789], BigFloat[33.941125496954285,-33.941125496954285], BigInt[3788,3789], BigFloat[-24,24])
        @checkequals(BigInt[8989], BigFloat[8.485281374238571], BigInt[4272], BigFloat[-8.485281374238571], BigInt[4272], BigFloat[6])
        @checkequals(BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4], BigInt[5463,8440], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[5463,8440], BigFloat[10,8])
        @checkequals(BigInt[6930,6939], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[8507,8508], BigFloat[33.941125496954285,-33.941125496954285], BigInt[8507,8508], BigFloat[-24,24])
        @checkequals(BigInt[4971,6929], BigFloat[14.142135623730951,11.313708498984761], BigInt[8991], BigFloat[-8.485281374238571], BigInt[8991], BigFloat[6])
        @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[19060,26796], BigFloat[14.142135623730951,11.313708498984761], BigInt[19060,26796], BigFloat[-10,-8])
        @checkequals(BigInt[19060,26782,26784,26795,26806], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,-2.8284271247461903,2.8284271247461903], BigInt[27047,27048], BigFloat[-33.941125496954285,33.941125496954285], BigInt[27047,27048], BigFloat[24,-24])
        @checkequals(BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[29087], BigFloat[8.485281374238571], BigInt[29087], BigFloat[-6])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[7288], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[19060,26782,26784,26797,26806], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[57,58,60], BigFloat[-6,-2,16])
        @checkequals(BigInt[8094], BigFloat[6], BigInt[4270], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[92,150,152], BigFloat[-6,-2,16])
        @checkequals(BigInt[29083], BigFloat[8.485281374238571], BigInt[8989], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4], BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[272,273,275,276,653,899], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[81361,81393], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[456,639,645,647,653], BigFloat[-6,-2,-8,8,2])
        @checkequals(BigInt[59062,81360], BigFloat[14.142135623730951,11.313708498984761], BigInt[29083], BigFloat[8.485281374238571], BigInt[457,646], BigFloat[10,8])
        @checkequals(BigInt[], BigFloat[], BigInt[59062,81360], BigFloat[14.142135623730951,11.313708498984761], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[6,-6,-2,-2,8,4])
        @checkequals(BigInt[81570], BigFloat[67.88225099390857], BigInt[81570], BigFloat[67.88225099390857], BigInt[2491,3718,3722,3739], BigFloat[-6,-2,8,2])
        @checkequals(BigInt[85993], BigFloat[6], BigInt[85993], BigFloat[6], BigInt[2493,3721], BigFloat[10,8])
        if tri === :F
            @checkequals(BigInt[50,51,66,84], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[60,66], BigFloat[2,2])
            @checkequals(BigInt[57,59], BigFloat[10,8])
            @checkequals(BigInt[79,80,158,176], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[152,158], BigFloat[2,2])
            @checkequals(BigInt[92,151], BigFloat[10,8])
            @checkequals(BigInt[272,273,275,276,650,898], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[457,639,641,647,650], BigFloat[6,8,-8,2,2])
            @checkequals(BigInt[456,640], BigFloat[10,8])
            @checkequals(BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[2493,3718,3720,3722,3737], BigFloat[6,8,-8,2,2])
            @checkequals(BigInt[2491,3719], BigFloat[10,8])
            @checkequals(BigInt[57,58,60], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[92,150,152], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[456,641,645,647,653], BigFloat[6,2,8,-8,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[728,729], BigFloat[-24,24])
            @checkequals(BigInt[2491,3720,3722,3739], BigFloat[6,2,-8,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[3788,3789], BigFloat[-24,24])
            @checkequals(BigInt[60,66], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[74], BigFloat[48])
            @checkequals(BigInt[152,158], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[166], BigFloat[48])
            @checkequals(BigInt[457,639,641,645,650], BigFloat[-6,-8,8,-2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[731,732], BigFloat[-24,24])
            @checkequals(BigInt[2493,3718,3720,3737], BigFloat[-6,-8,8,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[3790,3791], BigFloat[-24,24])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[457,646], BigFloat[10,8])
            @checkequals(BigInt[728,729], BigFloat[-24,24])
            @checkequals(BigInt[864], BigFloat[6])
            @checkequals(BigInt[2493,3721], BigFloat[10,8])
            @checkequals(BigInt[3788,3789], BigFloat[-24,24])
            @checkequals(BigInt[4272], BigFloat[6])
            @checkequals(BigInt[57,59], BigFloat[10,8])
            @checkequals(BigInt[74], BigFloat[48])
            @checkequals(BigInt[83], BigFloat[6])
            @checkequals(BigInt[92,151], BigFloat[10,8])
            @checkequals(BigInt[166], BigFloat[48])
            @checkequals(BigInt[175], BigFloat[6])
            @checkequals(BigInt[456,640], BigFloat[10,8])
            @checkequals(BigInt[731,732], BigFloat[-24,24])
            @checkequals(BigInt[863], BigFloat[6])
            @checkequals(BigInt[2491,3719], BigFloat[10,8])
            @checkequals(BigInt[3790,3791], BigFloat[-24,24])
            @checkequals(BigInt[4270], BigFloat[6])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[92,150,152], BigFloat[-6,-2,16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[205,396,398], BigFloat[-6,-2,16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[854,855,857,858,1907,2153], BigFloat[6,-6,-2,-2,8,4])
            @checkequals(BigInt[1164,1893,1899,1901,1907], BigFloat[-6,-2,-8,8,2])
            @checkequals(BigInt[1165,1900], BigFloat[10,8])
            @checkequals(BigInt[4250,4251,4252,4253,8458,9006], BigFloat[6,-6,-2,-2,8,4])
            @checkequals(BigInt[5461,8437,8441,8458], BigFloat[-6,-2,8,2])
            @checkequals(BigInt[5463,8440], BigFloat[10,8])
            @checkequals(BigInt[79,80,158,176], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[152,158], BigFloat[2,2])
            @checkequals(BigInt[92,151], BigFloat[10,8])
            @checkequals(BigInt[171,172,404,422], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[398,404], BigFloat[2,2])
            @checkequals(BigInt[205,397], BigFloat[10,8])
            @checkequals(BigInt[854,855,857,858,1904,2152], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[1165,1893,1895,1901,1904], BigFloat[6,8,-8,2,2])
            @checkequals(BigInt[1164,1894], BigFloat[10,8])
            @checkequals(BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[5463,8437,8439,8441,8456], BigFloat[6,8,-8,2,2])
            @checkequals(BigInt[5461,8438], BigFloat[10,8])
            @checkequals(BigInt[92,150,152], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[205,396,398], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1164,1895,1899,1901,1907], BigFloat[6,2,8,-8,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1982,1983], BigFloat[-24,24])
            @checkequals(BigInt[5461,8439,8441,8458], BigFloat[6,2,-8,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[8507,8508], BigFloat[-24,24])
            @checkequals(BigInt[152,158], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[166], BigFloat[48])
            @checkequals(BigInt[398,404], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[412], BigFloat[48])
            @checkequals(BigInt[1165,1893,1895,1899,1904], BigFloat[-6,-8,8,-2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1985,1986], BigFloat[-24,24])
            @checkequals(BigInt[5463,8437,8439,8456], BigFloat[-6,-8,8,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[8509,8510], BigFloat[-24,24])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1165,1900], BigFloat[10,8])
            @checkequals(BigInt[1982,1983], BigFloat[-24,24])
            @checkequals(BigInt[2118], BigFloat[6])
            @checkequals(BigInt[5463,8440], BigFloat[10,8])
            @checkequals(BigInt[8507,8508], BigFloat[-24,24])
            @checkequals(BigInt[8991], BigFloat[6])
            @checkequals(BigInt[92,151], BigFloat[10,8])
            @checkequals(BigInt[166], BigFloat[48])
            @checkequals(BigInt[175], BigFloat[6])
            @checkequals(BigInt[205,397], BigFloat[10,8])
            @checkequals(BigInt[412], BigFloat[48])
            @checkequals(BigInt[421], BigFloat[6])
            @checkequals(BigInt[1164,1894], BigFloat[10,8])
            @checkequals(BigInt[1985,1986], BigFloat[-24,24])
            @checkequals(BigInt[2117], BigFloat[6])
            @checkequals(BigInt[5461,8438], BigFloat[10,8])
            @checkequals(BigInt[8509,8510], BigFloat[-24,24])
            @checkequals(BigInt[8989], BigFloat[6])
            @checkequals(BigInt[272,273,275,276,653,899], BigFloat[-6,6,2,2,-8,-4])
            @checkequals(BigInt[456,641,645,647,653], BigFloat[-6,-2,-8,8,-2])
            @checkequals(BigInt[457,646], BigFloat[-10,-8])
            @checkequals(BigInt[854,855,857,858,1907,2153], BigFloat[-6,6,2,2,-8,-4])
            @checkequals(BigInt[1164,1895,1899,1901,1907], BigFloat[-6,-2,-8,8,-2])
            @checkequals(BigInt[1165,1900], BigFloat[-10,-8])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[4971,6928,6930], BigFloat[-6,-2,16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[-6,6,2,2,-8,-4])
            @checkequals(BigInt[19056,26784,26795,26797,26814], BigFloat[-6,-2,-8,8,-2])
            @checkequals(BigInt[19060,26796], BigFloat[-10,-8])
            @checkequals(BigInt[272,273,275,276,650,898], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[457,639,641,645,650], BigFloat[-6,-8,8,-2,2])
            @checkequals(BigInt[456,640], BigFloat[10,8])
            @checkequals(BigInt[854,855,857,858,1904,2152], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[1165,1893,1895,1899,1904], BigFloat[-6,-8,8,-2,2])
            @checkequals(BigInt[1164,1894], BigFloat[10,8])
            @checkequals(BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[6930,6939], BigFloat[2,2])
            @checkequals(BigInt[4971,6929], BigFloat[10,8])
            @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[19060,26782,26784,26795,26806], BigFloat[-6,-8,8,-2,2])
            @checkequals(BigInt[19056,26783], BigFloat[10,8])
            @checkequals(BigInt[456,639,645,647,653], BigFloat[6,2,8,-8,-2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[728,729], BigFloat[24,-24])
            @checkequals(BigInt[1164,1893,1899,1901,1907], BigFloat[6,2,8,-8,-2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1982,1983], BigFloat[24,-24])
            @checkequals(BigInt[4971,6928,6930], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[19056,26782,26795,26797,26814], BigFloat[6,2,8,-8,-2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[27047,27048], BigFloat[24,-24])
            @checkequals(BigInt[457,639,641,647,650], BigFloat[6,8,-8,2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[731,732], BigFloat[-24,24])
            @checkequals(BigInt[1165,1893,1895,1901,1904], BigFloat[6,8,-8,2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1985,1986], BigFloat[-24,24])
            @checkequals(BigInt[6930,6939], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[7288], BigFloat[48])
            @checkequals(BigInt[19060,26782,26784,26797,26806], BigFloat[6,8,-8,2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[27055,27056], BigFloat[-24,24])
            @checkequals(BigInt[457,646], BigFloat[-10,-8])
            @checkequals(BigInt[728,729], BigFloat[24,-24])
            @checkequals(BigInt[864], BigFloat[-6])
            @checkequals(BigInt[1165,1900], BigFloat[-10,-8])
            @checkequals(BigInt[1982,1983], BigFloat[24,-24])
            @checkequals(BigInt[2118], BigFloat[-6])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[19060,26796], BigFloat[-10,-8])
            @checkequals(BigInt[27047,27048], BigFloat[24,-24])
            @checkequals(BigInt[29087], BigFloat[-6])
            @checkequals(BigInt[456,640], BigFloat[10,8])
            @checkequals(BigInt[731,732], BigFloat[-24,24])
            @checkequals(BigInt[863], BigFloat[6])
            @checkequals(BigInt[1164,1894], BigFloat[10,8])
            @checkequals(BigInt[1985,1986], BigFloat[-24,24])
            @checkequals(BigInt[2117], BigFloat[6])
            @checkequals(BigInt[4971,6929], BigFloat[10,8])
            @checkequals(BigInt[7288], BigFloat[48])
            @checkequals(BigInt[8094], BigFloat[6])
            @checkequals(BigInt[19056,26783], BigFloat[10,8])
            @checkequals(BigInt[27055,27056], BigFloat[-24,24])
            @checkequals(BigInt[29083], BigFloat[6])
            @checkequals(BigInt[1742,1743,1744,1745,3739,4287], BigFloat[-6,6,2,2,-8,-4])
            @checkequals(BigInt[2491,3720,3722,3739], BigFloat[-6,-2,8,-2])
            @checkequals(BigInt[2493,3721], BigFloat[-10,-8])
            @checkequals(BigInt[4250,4251,4252,4253,8458,9006], BigFloat[-6,6,2,2,-8,-4])
            @checkequals(BigInt[5461,8439,8441,8458], BigFloat[-6,-2,8,-2])
            @checkequals(BigInt[5463,8440], BigFloat[-10,-8])
            @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[6,-6,-2,-2,8,4])
            @checkequals(BigInt[19056,26782,26795,26797,26814], BigFloat[-6,-2,-8,8,2])
            @checkequals(BigInt[19060,26796], BigFloat[10,8])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[59062,81359,81361], BigFloat[-6,-2,16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[2493,3718,3720,3737], BigFloat[-6,-8,8,2])
            @checkequals(BigInt[2491,3719], BigFloat[10,8])
            @checkequals(BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[5463,8437,8439,8456], BigFloat[-6,-8,8,2])
            @checkequals(BigInt[5461,8438], BigFloat[10,8])
            @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2,-2,6,-6,8,4])
            @checkequals(BigInt[19060,26782,26784,26797,26806], BigFloat[6,8,-8,2,2])
            @checkequals(BigInt[19056,26783], BigFloat[10,8])
            @checkequals(BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[81361,81393], BigFloat[2,2])
            @checkequals(BigInt[59062,81360], BigFloat[10,8])
            @checkequals(BigInt[2491,3718,3722,3739], BigFloat[6,2,-8,-2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[3788,3789], BigFloat[24,-24])
            @checkequals(BigInt[5461,8437,8441,8458], BigFloat[6,2,-8,-2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[8507,8508], BigFloat[24,-24])
            @checkequals(BigInt[19056,26784,26795,26797,26814], BigFloat[6,2,8,-8,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[27047,27048], BigFloat[-24,24])
            @checkequals(BigInt[59062,81359,81361], BigFloat[6,2,-16])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2493,3718,3720,3722,3737], BigFloat[6,8,-8,2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[3790,3791], BigFloat[-24,24])
            @checkequals(BigInt[5463,8437,8439,8441,8456], BigFloat[6,8,-8,2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[8509,8510], BigFloat[-24,24])
            @checkequals(BigInt[19060,26782,26784,26795,26806], BigFloat[-6,-8,8,-2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[27055,27056], BigFloat[-24,24])
            @checkequals(BigInt[81361,81393], BigFloat[2,2])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[81570], BigFloat[48])
            @checkequals(BigInt[2493,3721], BigFloat[-10,-8])
            @checkequals(BigInt[3788,3789], BigFloat[24,-24])
            @checkequals(BigInt[4272], BigFloat[-6])
            @checkequals(BigInt[5463,8440], BigFloat[-10,-8])
            @checkequals(BigInt[8507,8508], BigFloat[24,-24])
            @checkequals(BigInt[8991], BigFloat[-6])
            @checkequals(BigInt[19060,26796], BigFloat[10,8])
            @checkequals(BigInt[27047,27048], BigFloat[-24,24])
            @checkequals(BigInt[29087], BigFloat[6])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2491,3719], BigFloat[10,8])
            @checkequals(BigInt[3790,3791], BigFloat[-24,24])
            @checkequals(BigInt[4270], BigFloat[6])
            @checkequals(BigInt[5461,8438], BigFloat[10,8])
            @checkequals(BigInt[8509,8510], BigFloat[-24,24])
            @checkequals(BigInt[8989], BigFloat[6])
            @checkequals(BigInt[19056,26783], BigFloat[10,8])
            @checkequals(BigInt[27055,27056], BigFloat[-24,24])
            @checkequals(BigInt[29083], BigFloat[6])
            @checkequals(BigInt[59062,81360], BigFloat[10,8])
            @checkequals(BigInt[81570], BigFloat[48])
            @checkequals(BigInt[85993], BigFloat[6])
        end
        @test isnothing(iter)
    else
        @test false
    end
end

function add_constr_psd_worker!(state::SolverSetup{false,false,<:Any,false,false}, dim::Int, ::PSDIndextypeMatrixCartesian{tri,17}, data::PSDMatrixCartesian{BigInt,BigFloat}) where {tri}
    @test state.lastcall === :none
    state.lastcall = :psdr
    if state.instance == 14
        @test dim == 2
        iter = iterate(data)
        @checkequals(23048, [17], [17], BigFloat[17])
        @checkequals(68265, [18], [17], BigFloat[17])
        @checkequals(169998, [18], [18], BigFloat[17])
        @test isnothing(iter)
    elseif state.instance == 16
        @test dim == 2
        iter = iterate(data)
        @checkequals(21922, [17], [17], BigFloat[24])
        @checkequals(63204, [18], [17], BigFloat[24])
        @checkequals(151422, [18], [18], BigFloat[24])
        @test isnothing(iter)
    elseif state.instance == 18
        @test dim == 2
        iter = iterate(data)
        @checkequals(6223, [17], [17], BigFloat[2])
        @checkequals(21928, [17], [17], BigFloat[8])
        @checkequals(22426, [18], [17], BigFloat[2])
        @checkequals(63210, [18], [17], BigFloat[8])
        @checkequals(63728, [18], [18], BigFloat[2])
        @checkequals(151428, [18], [18], BigFloat[8])
        @test isnothing(iter)
    elseif state.instance == 20
        @test dim == 2
        iter = iterate(data)
        @checkequals(5815, [17], [17], BigFloat[6])
        @checkequals(20441, [18], [17], BigFloat[6])
        @checkequals(55255, [18], [18], BigFloat[6])
        @test isnothing(iter)
    elseif state.instance == 22
        @test dim == 2
        iter = iterate(data)
        @checkequals(21232, [17], [17], BigFloat[14])
        @checkequals(62324, [18], [17], BigFloat[14])
        @checkequals(150102, [18], [18], BigFloat[14])
        @test isnothing(iter)
    elseif state.instance == 24
        @test dim == 2
        iter = iterate(data)
        @checkequals(5815, [17], [17], BigFloat[8])
        @checkequals(5816, [17], [17], BigFloat[16])
        @checkequals(6223, [17], [17], BigFloat[3])
        @checkequals(11399, [17], [17], BigFloat[4])
        @checkequals(20441, [18], [17], BigFloat[8])
        @checkequals(20442, [18], [17], BigFloat[16])
        @checkequals(21230, [17], [17], BigFloat[14])
        @checkequals(21928, [17], [17], BigFloat[5])
        @checkequals(22426, [18], [17], BigFloat[3])
        @checkequals(36378, [18], [17], BigFloat[4])
        @checkequals(55255, [18], [18], BigFloat[8])
        @checkequals(55256, [18], [18], BigFloat[16])
        @checkequals(62322, [18], [17], BigFloat[14])
        @checkequals(63210, [18], [17], BigFloat[5])
        @checkequals(63728, [18], [18], BigFloat[3])
        @checkequals(92459, [18], [18], BigFloat[4])
        @checkequals(150100, [18], [18], BigFloat[14])
        @checkequals(151428, [18], [18], BigFloat[5])
        @test isnothing(iter)
    elseif state.instance == 26
        @test dim == 4
        iter = iterate(data)
        @checkequals(20830, [17,19], [17,19], BigFloat[17,17])
        @checkequals(22409, [18,20], [17,19], BigFloat[17,17])
        @checkequals(22410, [19,20], [18,17], BigFloat[-17,17])
        @checkequals(23048, [18,20], [18,20], BigFloat[17,17])
        @test isnothing(iter)
    elseif state.instance == 29
        @test dim == 4
        iter = iterate(data)
        @checkequals(17744, [17,19], [17,19], BigFloat[24,24])
        @checkequals(20571, [18,20], [17,19], BigFloat[24,24])
        @checkequals(20574, [19,20], [18,17], BigFloat[-24,24])
        @checkequals(21922, [18,20], [18,20], BigFloat[24,24])
        @test isnothing(iter)
    elseif state.instance == 32
        @test dim == 4
        iter = iterate(data)
        @checkequals(5672, [17,19], [17,19], BigFloat[2,2])
        @checkequals(6102, [18,20], [17,19], BigFloat[2,2])
        @checkequals(6103, [19,20], [18,17], BigFloat[-2,2])
        @checkequals(6223, [18,20], [18,20], BigFloat[2,2])
        @checkequals(17777, [17,19], [17,19], BigFloat[8,8])
        @checkequals(20588, [18,20], [17,19], BigFloat[8,8])
        @checkequals(20589, [19,20], [18,17], BigFloat[-8,8])
        @checkequals(21928, [18,20], [18,20], BigFloat[8,8])
        @test isnothing(iter)
    elseif state.instance == 35
        @test dim == 4
        iter = iterate(data)
        @checkequals(4699, [17,19], [17,19], BigFloat[6,6])
        @checkequals(5542, [18,20], [17,19], BigFloat[3,3])
        @checkequals(5545, [18,20], [17,19], BigFloat[3,3])
        @checkequals(5546, [19,20], [18,17], BigFloat[-3,3])
        @checkequals(5815, [18,20], [18,20], BigFloat[6,6])
        @test isnothing(iter)
    elseif state.instance == 38
        @test dim == 4
        iter = iterate(data)
        @checkequals(17502, [17,19], [17,19], BigFloat[14,14])
        @checkequals(20154, [19,20], [18,17], BigFloat[7,-7])
        @checkequals(20162, [19,20], [18,17], BigFloat[-7,7])
        @checkequals(20164, [18,20], [17,19], BigFloat[-7,-7])
        @checkequals(20168, [18,20], [17,19], BigFloat[7,7])
        @checkequals(21232, [18,20], [18,20], BigFloat[14,14])
        @test isnothing(iter)
    elseif state.instance == 41
        @test dim == 4
        iter = iterate(data)
        @checkequals(4699, [17,19], [17,19], BigFloat[8,8])
        @checkequals(4702, [17,19], [17,19], BigFloat[16,16])
        @checkequals(5542, [18,19,20,20], [17,18,17,19], BigFloat[4,8,-8,4])
        @checkequals(5545, [18,19,20,20], [17,18,17,19], BigFloat[4,-8,8,4])
        @checkequals(5546, [18,19,20,20], [17,18,17,19], BigFloat[8,-4,4,8])
        @checkequals(5672, [17,19], [17,19], BigFloat[3,3])
        @checkequals(5815, [18,20], [18,20], BigFloat[8,8])
        @checkequals(5816, [18,20], [18,20], BigFloat[16,16])
        @checkequals(6102, [18,20], [17,19], BigFloat[3,3])
        @checkequals(6103, [19,20], [18,17], BigFloat[-3,3])
        @checkequals(6223, [18,20], [18,20], BigFloat[3,3])
        @checkequals(9297, [17,19], [17,19], BigFloat[4,4])
        @checkequals(10837, [18,20], [17,19], BigFloat[4,4])
        @checkequals(10843, [19,20], [18,17], BigFloat[-4,4])
        @checkequals(11399, [18,20], [18,20], BigFloat[4,4])
        @checkequals(17496, [17,19], [17,19], BigFloat[14,14])
        @checkequals(17777, [17,19], [17,19], BigFloat[5,5])
        @checkequals(20156, [18,20], [17,19], BigFloat[7,7])
        @checkequals(20166, [18,20], [17,19], BigFloat[7,7])
        @checkequals(20171, [19,20], [18,17], BigFloat[7,-7])
        @checkequals(20174, [19,20], [18,17], BigFloat[-7,7])
        @checkequals(20588, [18,20], [17,19], BigFloat[5,5])
        @checkequals(20589, [19,20], [18,17], BigFloat[-5,5])
        @checkequals(21230, [18,20], [18,20], BigFloat[14,14])
        @checkequals(21928, [18,20], [18,20], BigFloat[5,5])
        @test isnothing(iter)
    elseif state.instance == 44
        @test dim == 2
        iter = iterate(data)
        @checkequals(9460, [18], [17], BigFloat[8])
        @checkequals(17770, [18], [18], BigFloat[6])
        @checkequals(31799, [17], [17], BigFloat[17])
        @test isnothing(iter)
    elseif state.instance == 46
        @test dim == 4
        iter = iterate(data)
        @checkequals(9460, [19,20], [18,17], BigFloat[8,-8])
        @checkequals(17770, [18,20], [18,20], BigFloat[6,6])
        @checkequals(31799, [17,19], [17,19], BigFloat[17,17])
        @test isnothing(iter)
    elseif state.instance == 49
        @test dim == 4
        iter = iterate(data)
        @checkequals(9278, [18,20], [17,19], BigFloat[8,8])
        @checkequals(9280, [19,20], [18,17], BigFloat[-8,8])
        @checkequals(17770, [18,20], [18,20], BigFloat[6,6])
        @checkequals(31799, [17,19], [17,19], BigFloat[17,17])
        @test isnothing(iter)
    elseif state.instance == 52
        @test dim == 4
        iter = iterate(data)
        @checkequals(9278, [19,20], [18,17], BigFloat[8,-8])
        @checkequals(9280, [18,20], [17,19], BigFloat[8,8])
        @checkequals(17770, [18,20], [18,20], BigFloat[6,6])
        @checkequals(31799, [17,19], [17,19], BigFloat[17,17])
        @test isnothing(iter)
    elseif state.instance == 55
        @test dim == 4
        iter = iterate(data)
        @checkequals(9278, [18,19,20,20], [17,18,17,19], BigFloat[8,2,-2,8])
        @checkequals(9280, [18,19,20,20], [17,18,17,19], BigFloat[2,-8,8,2])
        @checkequals(17770, [18,20], [18,20], BigFloat[6,6])
        @checkequals(31799, [17,19], [17,19], BigFloat[17,17])
        @test isnothing(iter)
    elseif state.instance == 58
        @test dim == 4
        iter = iterate(data)
        @checkequals(5665, [19,20], [18,17], BigFloat[-3,3])
        @checkequals(9278, [19,20], [18,17], BigFloat[-2,2])
        @checkequals(9280, [18,19,20,20], [17,18,17,19], BigFloat[2,16,-16,2])
        @checkequals(9297, [18,20], [17,19], BigFloat[1,1])
        @checkequals(9460, [17,19], [17,19], BigFloat[5,5])
        @checkequals(17770, [18,20], [18,20], BigFloat[6,6])
        @checkequals(31799, [17,19], [17,19], BigFloat[17,17])
        @test isnothing(iter)
    elseif state.instance == 61
        @test dim == 2
        iter = iterate(data)
        @checkequals(9278, [18], [17], BigFloat[16])
        @checkequals(9280, [18], [17], BigFloat[4])
        @checkequals(17669, [17], [17], BigFloat[-34])
        @checkequals(17770, [18], [18], BigFloat[6])
        @checkequals(17845, [17], [17], BigFloat[10])
        @test isnothing(iter)
    elseif state.instance == 62
        @test dim == 4
        iter = iterate(data)
        @checkequals(50, [17], [17], BigFloat[-4])
        @checkequals(51, [17], [17], BigFloat[-6])
        @checkequals(66, [17], [17], BigFloat[5])
        @checkequals(79, [18], [17], BigFloat[-4])
        @checkequals(80, [18], [17], BigFloat[-6])
        @checkequals(84, [17], [17], BigFloat[3])
        @checkequals(158, [18], [17], BigFloat[5])
        @checkequals(171, [18], [18], BigFloat[-4])
        @checkequals(172, [18], [18], BigFloat[-6])
        @checkequals(176, [18], [17], BigFloat[3])
        @checkequals(404, [18], [18], BigFloat[5])
        @checkequals(422, [18], [18], BigFloat[3])
        @checkequals(454, [19], [17], BigFloat[-4])
        @checkequals(455, [19], [17], BigFloat[-6])
        @checkequals(1069, [19], [17], BigFloat[5])
        @checkequals(1162, [19], [18], BigFloat[-4])
        @checkequals(1163, [19], [18], BigFloat[-6])
        @checkequals(1181, [19], [17], BigFloat[3])
        @checkequals(2170, [20], [17], BigFloat[-4])
        @checkequals(2171, [20], [17], BigFloat[-6])
        @checkequals(2575, [19], [18], BigFloat[5])
        @checkequals(2687, [19], [18], BigFloat[3])
        @checkequals(4545, [20], [17], BigFloat[5])
        @checkequals(4678, [20], [18], BigFloat[-4])
        @checkequals(4679, [20], [18], BigFloat[-6])
        @checkequals(4683, [20], [17], BigFloat[3])
        @checkequals(5813, [19], [19], BigFloat[-4])
        @checkequals(5814, [19], [19], BigFloat[-6])
        @checkequals(9264, [20], [18], BigFloat[5])
        @checkequals(9402, [20], [18], BigFloat[3])
        @checkequals(11406, [19], [19], BigFloat[5])
        @checkequals(11860, [19], [19], BigFloat[3])
        @checkequals(20439, [20], [19], BigFloat[-4])
        @checkequals(20440, [20], [19], BigFloat[-6])
        @checkequals(36385, [20], [19], BigFloat[5])
        @checkequals(36903, [20], [19], BigFloat[3])
        @checkequals(55253, [20], [20], BigFloat[-4])
        @checkequals(55254, [20], [20], BigFloat[-6])
        @checkequals(92466, [20], [20], BigFloat[5])
        @checkequals(93270, [20], [20], BigFloat[3])
        @test isnothing(iter)
    elseif state.instance == 63
        @test dim == 12
        iter = iterate(data)
        @checkequals(50, [17], [17], BigFloat[-4])
        @checkequals(51, [17], [17], BigFloat[-6])
        @checkequals(54, [18], [17], BigFloat[17])
        @checkequals(57, [19], [17], BigFloat[10])
        @checkequals(59, [19], [17], BigFloat[8])
        @checkequals(66, [17], [17], BigFloat[5])
        @checkequals(74, [19], [18], BigFloat[48])
        @checkequals(79, [20], [17], BigFloat[-4])
        @checkequals(80, [20], [17], BigFloat[-6])
        @checkequals(83, [19,20,21], [19,18,17], BigFloat[6,17,17])
        @checkequals(84, [17], [17], BigFloat[3])
        @checkequals(92, [20,22], [19,17], BigFloat[10,10])
        @checkequals(151, [20,22], [19,17], BigFloat[8,8])
        @checkequals(158, [20], [17], BigFloat[5])
        @checkequals(166, [21,22], [19,18], BigFloat[48,48])
        @checkequals(171, [20], [20], BigFloat[-4])
        @checkequals(172, [20], [20], BigFloat[-6])
        @checkequals(175, [21,22], [20,19], BigFloat[17,6])
        @checkequals(176, [20], [17], BigFloat[3])
        @checkequals(205, [22], [20], BigFloat[10])
        @checkequals(397, [22], [20], BigFloat[8])
        @checkequals(404, [20], [20], BigFloat[5])
        @checkequals(412, [22], [21], BigFloat[48])
        @checkequals(421, [22], [22], BigFloat[6])
        @checkequals(422, [20], [20], BigFloat[3])
        @checkequals(454, [23], [17], BigFloat[-4])
        @checkequals(455, [23], [17], BigFloat[-6])
        @checkequals(458, [23,24], [18,17], BigFloat[17,17])
        @checkequals(522, [23,25], [19,17], BigFloat[10,10])
        @checkequals(1062, [23,25], [19,17], BigFloat[8,8])
        @checkequals(1069, [23], [17], BigFloat[5])
        @checkequals(1107, [24,25], [19,18], BigFloat[48,48])
        @checkequals(1162, [23], [20], BigFloat[-4])
        @checkequals(1163, [23], [20], BigFloat[-6])
        @checkequals(1166, [23,24,25], [21,20,19], BigFloat[17,17,6])
        @checkequals(1181, [23], [17], BigFloat[3])
        @checkequals(1286, [23,25], [22,20], BigFloat[10,10])
        @checkequals(2170, [26], [17], BigFloat[-4])
        @checkequals(2171, [26], [17], BigFloat[-6])
        @checkequals(2174, [26,27], [18,17], BigFloat[17,17])
        @checkequals(2568, [23,25], [22,20], BigFloat[8,8])
        @checkequals(2575, [23], [20], BigFloat[5])
        @checkequals(2613, [24,25], [22,21], BigFloat[48,48])
        @checkequals(2672, [25], [22], BigFloat[6])
        @checkequals(2687, [23], [20], BigFloat[3])
        @checkequals(2693, [26,28], [19,17], BigFloat[10,10])
        @checkequals(4538, [26,28], [19,17], BigFloat[8,8])
        @checkequals(4545, [26], [17], BigFloat[5])
        @checkequals(4553, [27,28], [19,18], BigFloat[48,48])
        @checkequals(4678, [26], [20], BigFloat[-4])
        @checkequals(4679, [26], [20], BigFloat[-6])
        @checkequals(4682, [26,27,28], [21,20,19], BigFloat[17,17,6])
        @checkequals(4683, [26], [17], BigFloat[3])
        @checkequals(5663, [26,28], [22,20], BigFloat[10,10])
        @checkequals(5813, [23], [23], BigFloat[-4])
        @checkequals(5814, [23], [23], BigFloat[-6])
        @checkequals(5817, [24], [23], BigFloat[17])
        @checkequals(6223, [25], [23], BigFloat[10])
        @checkequals(9257, [26,28], [22,20], BigFloat[8,8])
        @checkequals(9264, [26], [20], BigFloat[5])
        @checkequals(9272, [27,28], [22,21], BigFloat[48,48])
        @checkequals(9401, [28], [22], BigFloat[6])
        @checkequals(9402, [26], [20], BigFloat[3])
        @checkequals(11399, [25], [23], BigFloat[8])
        @checkequals(11406, [23], [23], BigFloat[5])
        @checkequals(11535, [25], [24], BigFloat[48])
        @checkequals(11790, [25], [25], BigFloat[6])
        @checkequals(11860, [23], [23], BigFloat[3])
        @checkequals(20439, [26], [23], BigFloat[-4])
        @checkequals(20440, [26], [23], BigFloat[-6])
        @checkequals(20443, [26,27], [24,23], BigFloat[17,17])
        @checkequals(22426, [26,28], [25,23], BigFloat[10,10])
        @checkequals(36378, [26,28], [25,23], BigFloat[8,8])
        @checkequals(36385, [26], [23], BigFloat[5])
        @checkequals(36423, [27,28], [25,24], BigFloat[48,48])
        @checkequals(36888, [28], [25], BigFloat[6])
        @checkequals(36903, [26], [23], BigFloat[3])
        @checkequals(55253, [26], [26], BigFloat[-4])
        @checkequals(55254, [26], [26], BigFloat[-6])
        @checkequals(55257, [27], [26], BigFloat[17])
        @checkequals(63728, [28], [26], BigFloat[10])
        @checkequals(92459, [28], [26], BigFloat[8])
        @checkequals(92466, [26], [26], BigFloat[5])
        @checkequals(92474, [28], [27], BigFloat[48])
        @checkequals(93269, [28], [28], BigFloat[6])
        @checkequals(93270, [26], [26], BigFloat[3])
        @test isnothing(iter)
    elseif state.instance == 64
        @test dim == 24
        iter = iterate(data)
        @checkequals(50, [17,29], [17,29], BigFloat[-4,-4])
        @checkequals(51, [17,29], [17,29], BigFloat[-6,-6])
        @checkequals(57, [19,29,30,31], [17,18,17,29], BigFloat[10,-6,6,10])
        @checkequals(58, [29,30], [18,17], BigFloat[-2,2])
        @checkequals(59, [19,31], [17,29], BigFloat[8,8])
        @checkequals(60, [18,29,30,30], [17,18,17,29], BigFloat[2,16,-16,2])
        @checkequals(66, [17,18,29,30], [17,17,29,29], BigFloat[5,2,5,2])
        @checkequals(74, [19,31], [18,30], BigFloat[48,48])
        @checkequals(79, [20,32], [17,29], BigFloat[-4,-4])
        @checkequals(80, [20,32], [17,29], BigFloat[-6,-6])
        @checkequals(83, [19,31], [19,31], BigFloat[6,6])
        @checkequals(84, [17,29], [17,29], BigFloat[3,3])
        @checkequals(92, [20,22,29,30,32,32,33,34], [19,17,21,20,18,31,17,29], BigFloat[10,10,-6,6,-6,10,6,10])
        @checkequals(150, [29,30,32,33], [21,20,18,17], BigFloat[-2,2,-2,2])
        @checkequals(151, [20,22,32,34], [19,17,31,29], BigFloat[8,8,8,8])
        @checkequals(152, [20,21,29,30,32,32,33,33], [18,17,21,20,18,30,17,29], BigFloat[2,2,16,-16,16,2,-16,2])
        @checkequals(158, [20,20,21,32,32,33], [17,18,17,29,30,29], BigFloat[5,2,2,5,2,2])
        @checkequals(166, [21,22,33,34], [19,18,31,30], BigFloat[48,48,48,48])
        @checkequals(171, [20,32], [20,32], BigFloat[-4,-4])
        @checkequals(172, [20,32], [20,32], BigFloat[-6,-6])
        @checkequals(175, [22,34], [19,31], BigFloat[6,6])
        @checkequals(176, [20,32], [17,29], BigFloat[3,3])
        @checkequals(205, [22,32,33,34], [20,21,20,32], BigFloat[10,-6,6,10])
        @checkequals(396, [32,33], [21,20], BigFloat[-2,2])
        @checkequals(397, [22,34], [20,32], BigFloat[8,8])
        @checkequals(398, [21,32,33,33], [20,21,20,32], BigFloat[2,16,-16,2])
        @checkequals(404, [20,21,32,33], [20,20,32,32], BigFloat[5,2,5,2])
        @checkequals(412, [22,34], [21,33], BigFloat[48,48])
        @checkequals(421, [22,34], [22,34], BigFloat[6,6])
        @checkequals(422, [20,32], [20,32], BigFloat[3,3])
        @checkequals(454, [23,35], [17,29], BigFloat[-4,-4])
        @checkequals(455, [23,35], [17,29], BigFloat[-6,-6])
        @checkequals(522, [23,25,29,30,35,35,36,37], [19,17,24,23,18,31,17,29], BigFloat[10,10,-6,6,-6,10,6,10])
        @checkequals(1061, [29,30,35,36], [24,23,18,17], BigFloat[-2,2,-2,2])
        @checkequals(1062, [23,25,35,37], [19,17,31,29], BigFloat[8,8,8,8])
        @checkequals(1063, [23,24,29,30,35,35,36,36], [18,17,24,23,18,30,17,29], BigFloat[2,2,16,-16,16,2,-16,2])
        @checkequals(1069, [23,23,24,35,35,36], [17,18,17,29,30,29], BigFloat[5,2,2,5,2,2])
        @checkequals(1107, [24,25,36,37], [19,18,31,30], BigFloat[48,48,48,48])
        @checkequals(1162, [23,35], [20,32], BigFloat[-4,-4])
        @checkequals(1163, [23,35], [20,32], BigFloat[-6,-6])
        @checkequals(1166, [25,37], [19,31], BigFloat[6,6])
        @checkequals(1181, [23,35], [17,29], BigFloat[3,3])
        @checkequals(1286, [23,25,32,33,35,35,36,37], [22,20,24,23,21,34,20,32], BigFloat[10,10,-6,6,-6,10,6,10])
        @checkequals(2170, [26,38], [17,29], BigFloat[-4,-4])
        @checkequals(2171, [26,38], [17,29], BigFloat[-6,-6])
        @checkequals(2567, [32,33,35,36], [24,23,21,20], BigFloat[-2,2,-2,2])
        @checkequals(2568, [23,25,35,37], [22,20,34,32], BigFloat[8,8,8,8])
        @checkequals(2569, [23,24,32,33,35,35,36,36], [21,20,24,23,21,33,20,32], BigFloat[2,2,16,-16,16,2,-16,2])
        @checkequals(2575, [23,23,24,35,35,36], [20,21,20,32,33,32], BigFloat[5,2,2,5,2,2])
        @checkequals(2613, [24,25,36,37], [22,21,34,33], BigFloat[48,48,48,48])
        @checkequals(2672, [25,37], [22,34], BigFloat[6,6])
        @checkequals(2687, [23,35], [20,32], BigFloat[3,3])
        @checkequals(2693, [26,28,29,30,38,38,39,40], [19,17,27,26,18,31,17,29], BigFloat[10,10,-6,6,-6,10,6,10])
        @checkequals(4537, [29,30,38,39], [27,26,18,17], BigFloat[-2,2,-2,2])
        @checkequals(4538, [26,28,38,40], [19,17,31,29], BigFloat[8,8,8,8])
        @checkequals(4539, [26,27,29,30,38,38,39,39], [18,17,27,26,18,30,17,29], BigFloat[2,2,16,-16,16,2,-16,2])
        @checkequals(4545, [26,26,27,38,38,39], [17,18,17,29,30,29], BigFloat[5,2,2,5,2,2])
        @checkequals(4553, [27,28,39,40], [19,18,31,30], BigFloat[48,48,48,48])
        @checkequals(4678, [26,38], [20,32], BigFloat[-4,-4])
        @checkequals(4679, [26,38], [20,32], BigFloat[-6,-6])
        @checkequals(4682, [28,40], [19,31], BigFloat[6,6])
        @checkequals(4683, [26,38], [17,29], BigFloat[3,3])
        @checkequals(5663, [26,28,32,33,38,38,39,40], [22,20,27,26,21,34,20,32], BigFloat[10,10,-6,6,-6,10,6,10])
        @checkequals(5813, [23,35], [23,35], BigFloat[-4,-4])
        @checkequals(5814, [23,35], [23,35], BigFloat[-6,-6])
        @checkequals(6223, [25,35,36,37], [23,24,23,35], BigFloat[10,-6,6,10])
        @checkequals(9256, [32,33,38,39], [27,26,21,20], BigFloat[-2,2,-2,2])
        @checkequals(9257, [26,28,38,40], [22,20,34,32], BigFloat[8,8,8,8])
        @checkequals(9258, [26,27,32,33,38,38,39,39], [21,20,27,26,21,33,20,32], BigFloat[2,2,16,-16,16,2,-16,2])
        @checkequals(9264, [26,26,27,38,38,39], [20,21,20,32,33,32], BigFloat[5,2,2,5,2,2])
        @checkequals(9272, [27,28,39,40], [22,21,34,33], BigFloat[48,48,48,48])
        @checkequals(9401, [28,40], [22,34], BigFloat[6,6])
        @checkequals(9402, [26,38], [20,32], BigFloat[3,3])
        @checkequals(11398, [35,36], [24,23], BigFloat[-2,2])
        @checkequals(11399, [25,37], [23,35], BigFloat[8,8])
        @checkequals(11400, [24,35,36,36], [23,24,23,35], BigFloat[2,16,-16,2])
        @checkequals(11406, [23,24,35,36], [23,23,35,35], BigFloat[5,2,5,2])
        @checkequals(11535, [25,37], [24,36], BigFloat[48,48])
        @checkequals(11790, [25,37], [25,37], BigFloat[6,6])
        @checkequals(11860, [23,35], [23,35], BigFloat[3,3])
        @checkequals(20439, [26,38], [23,35], BigFloat[-4,-4])
        @checkequals(20440, [26,38], [23,35], BigFloat[-6,-6])
        @checkequals(22426, [26,28,35,36,38,38,39,40], [25,23,27,26,24,37,23,35], BigFloat[10,10,-6,6,-6,10,6,10])
        @checkequals(36377, [35,36,38,39], [27,26,24,23], BigFloat[-2,2,-2,2])
        @checkequals(36378, [26,28,38,40], [25,23,37,35], BigFloat[8,8,8,8])
        @checkequals(36379, [26,27,35,36,38,38,39,39], [24,23,27,26,24,36,23,35], BigFloat[2,2,16,-16,16,2,-16,2])
        @checkequals(36385, [26,26,27,38,38,39], [23,24,23,35,36,35], BigFloat[5,2,2,5,2,2])
        @checkequals(36423, [27,28,39,40], [25,24,37,36], BigFloat[48,48,48,48])
        @checkequals(36888, [28,40], [25,37], BigFloat[6,6])
        @checkequals(36903, [26,38], [23,35], BigFloat[3,3])
        @checkequals(55253, [26,38], [26,38], BigFloat[-4,-4])
        @checkequals(55254, [26,38], [26,38], BigFloat[-6,-6])
        @checkequals(63728, [28,38,39,40], [26,27,26,38], BigFloat[10,-6,6,10])
        @checkequals(92458, [38,39], [27,26], BigFloat[-2,2])
        @checkequals(92459, [28,40], [26,38], BigFloat[8,8])
        @checkequals(92460, [27,38,39,39], [26,27,26,38], BigFloat[2,16,-16,2])
        @checkequals(92466, [26,27,38,39], [26,26,38,38], BigFloat[5,2,5,2])
        @checkequals(92474, [28,40], [27,39], BigFloat[48,48])
        @checkequals(93269, [28,40], [28,40], BigFloat[6,6])
        @checkequals(93270, [26,38], [26,38], BigFloat[3,3])
        @test isnothing(iter)
    elseif state.instance == 66
        @test dim == 8
        iter = iterate(data)
        @checkequals(50, [17,21], [17,21], BigFloat[-4,-4])
        @checkequals(51, [17,21], [17,21], BigFloat[-12,-12])
        @checkequals(66, [17,21], [17,21], BigFloat[8,8])
        @checkequals(79, [18,22], [17,21], BigFloat[-4,-4])
        @checkequals(80, [18,22], [17,21], BigFloat[-12,-12])
        @checkequals(84, [17,21], [17,21], BigFloat[4,4])
        @checkequals(158, [18,22], [17,21], BigFloat[8,8])
        @checkequals(171, [18,22], [18,22], BigFloat[-4,-4])
        @checkequals(172, [18,22], [18,22], BigFloat[-12,-12])
        @checkequals(176, [18,22], [17,21], BigFloat[4,4])
        @checkequals(272, [19,21,23,23], [17,19,17,21], BigFloat[-2,6,-6,-2])
        @checkequals(273, [19,21,23,23], [17,19,17,21], BigFloat[-2,-6,6,-2])
        @checkequals(275, [19,21,23,23], [17,19,17,21], BigFloat[6,-2,2,6])
        @checkequals(276, [19,21,23,23], [17,19,17,21], BigFloat[-6,-2,2,-6])
        @checkequals(404, [18,22], [18,22], BigFloat[8,8])
        @checkequals(422, [18,22], [18,22], BigFloat[4,4])
        @checkequals(650, [19,23], [17,21], BigFloat[8,8])
        @checkequals(653, [21,23], [19,17], BigFloat[8,-8])
        @checkequals(854, [19,22,23,23], [18,19,18,22], BigFloat[-2,6,-6,-2])
        @checkequals(855, [19,22,23,23], [18,19,18,22], BigFloat[-2,-6,6,-2])
        @checkequals(857, [19,22,23,23], [18,19,18,22], BigFloat[6,-2,2,6])
        @checkequals(858, [19,22,23,23], [18,19,18,22], BigFloat[-6,-2,2,-6])
        @checkequals(898, [19,23], [17,21], BigFloat[4,4])
        @checkequals(899, [21,23], [19,17], BigFloat[4,-4])
        @checkequals(1742, [20,21,24,24], [17,20,17,21], BigFloat[-2,6,-6,-2])
        @checkequals(1743, [20,21,24,24], [17,20,17,21], BigFloat[-2,-6,6,-2])
        @checkequals(1744, [20,21,24,24], [17,20,17,21], BigFloat[6,-2,2,6])
        @checkequals(1745, [20,21,24,24], [17,20,17,21], BigFloat[-6,-2,2,-6])
        @checkequals(1904, [19,23], [18,22], BigFloat[8,8])
        @checkequals(1907, [22,23], [19,18], BigFloat[8,-8])
        @checkequals(2152, [19,23], [18,22], BigFloat[4,4])
        @checkequals(2153, [22,23], [19,18], BigFloat[4,-4])
        @checkequals(3360, [19,23], [19,23], BigFloat[-4,-4])
        @checkequals(3361, [19,23], [19,23], BigFloat[-12,-12])
        @checkequals(3737, [20,24], [17,21], BigFloat[8,8])
        @checkequals(3739, [21,24], [20,17], BigFloat[8,-8])
        @checkequals(4250, [20,22,24,24], [18,20,18,22], BigFloat[-2,6,-6,-2])
        @checkequals(4251, [20,22,24,24], [18,20,18,22], BigFloat[-2,-6,6,-2])
        @checkequals(4252, [20,22,24,24], [18,20,18,22], BigFloat[6,-2,2,6])
        @checkequals(4253, [20,22,24,24], [18,20,18,22], BigFloat[-6,-2,2,-6])
        @checkequals(4285, [20,24], [17,21], BigFloat[4,4])
        @checkequals(4287, [21,24], [20,17], BigFloat[4,-4])
        @checkequals(6939, [19,23], [19,23], BigFloat[8,8])
        @checkequals(8304, [19,23], [19,23], BigFloat[4,4])
        @checkequals(8456, [20,24], [18,22], BigFloat[8,8])
        @checkequals(8458, [22,24], [20,18], BigFloat[8,-8])
        @checkequals(9004, [20,24], [18,22], BigFloat[4,4])
        @checkequals(9006, [22,24], [20,18], BigFloat[4,-4])
        @checkequals(14606, [20,23,24,24], [19,20,19,23], BigFloat[-2,-6,6,-2])
        @checkequals(14607, [20,23,24,24], [19,20,19,23], BigFloat[-2,6,-6,-2])
        @checkequals(14614, [20,23,24,24], [19,20,19,23], BigFloat[6,2,-2,6])
        @checkequals(14615, [20,23,24,24], [19,20,19,23], BigFloat[-6,2,-2,-6])
        @checkequals(26806, [20,24], [19,23], BigFloat[8,8])
        @checkequals(26814, [23,24], [20,19], BigFloat[-8,8])
        @checkequals(29209, [20,24], [19,23], BigFloat[4,4])
        @checkequals(29213, [23,24], [20,19], BigFloat[-4,4])
        @checkequals(47925, [20,24], [20,24], BigFloat[-4,-4])
        @checkequals(47926, [20,24], [20,24], BigFloat[-12,-12])
        @checkequals(81393, [20,24], [20,24], BigFloat[8,8])
        @checkequals(86063, [20,24], [20,24], BigFloat[4,4])
        @test isnothing(iter)
    elseif state.instance == 68
        @test dim == 24
        iter = iterate(data)
        @checkequals(50, [17,29], [17,29], BigFloat[-4,-4])
        @checkequals(51, [17,29], [17,29], BigFloat[-12,-12])
        @checkequals(54, [18,30], [17,29], BigFloat[18,18])
        @checkequals(57, [19,31], [17,29], BigFloat[10,10])
        @checkequals(59, [19,31], [17,29], BigFloat[8,8])
        @checkequals(66, [17,29], [17,29], BigFloat[8,8])
        @checkequals(74, [19,31], [18,30], BigFloat[48,48])
        @checkequals(79, [20,32], [17,29], BigFloat[-4,-4])
        @checkequals(80, [20,32], [17,29], BigFloat[-12,-12])
        @checkequals(83, [19,20,21,31,32,33], [19,18,17,31,30,29], BigFloat[6,18,18,6,18,18])
        @checkequals(84, [17,29], [17,29], BigFloat[4,4])
        @checkequals(92, [20,22,32,34], [19,17,31,29], BigFloat[10,10,10,10])
        @checkequals(151, [20,22,32,34], [19,17,31,29], BigFloat[8,8,8,8])
        @checkequals(158, [20,32], [17,29], BigFloat[8,8])
        @checkequals(166, [21,22,33,34], [19,18,31,30], BigFloat[48,48,48,48])
        @checkequals(171, [20,32], [20,32], BigFloat[-4,-4])
        @checkequals(172, [20,32], [20,32], BigFloat[-12,-12])
        @checkequals(175, [21,22,33,34], [20,19,32,31], BigFloat[18,6,18,6])
        @checkequals(176, [20,32], [17,29], BigFloat[4,4])
        @checkequals(205, [22,34], [20,32], BigFloat[10,10])
        @checkequals(272, [23,29,35,35], [17,23,17,29], BigFloat[-2,6,-6,-2])
        @checkequals(273, [23,29,35,35], [17,23,17,29], BigFloat[-2,-6,6,-2])
        @checkequals(275, [23,29,35,35], [17,23,17,29], BigFloat[6,-2,2,6])
        @checkequals(276, [23,29,35,35], [17,23,17,29], BigFloat[-6,-2,2,-6])
        @checkequals(281, [23,24,35,36], [18,17,30,29], BigFloat[18,18,18,18])
        @checkequals(282, [29,30,35,36], [24,23,18,17], BigFloat[18,18,-18,-18])
        @checkequals(397, [22,34], [20,32], BigFloat[8,8])
        @checkequals(404, [20,32], [20,32], BigFloat[8,8])
        @checkequals(412, [22,34], [21,33], BigFloat[48,48])
        @checkequals(421, [22,34], [22,34], BigFloat[6,6])
        @checkequals(422, [20,32], [20,32], BigFloat[4,4])
        @checkequals(456, [23,25,35,37], [19,17,31,29], BigFloat[10,10,10,10])
        @checkequals(457, [29,31,35,37], [25,23,19,17], BigFloat[10,10,-10,-10])
        @checkequals(640, [23,25,35,37], [19,17,31,29], BigFloat[8,8,8,8])
        @checkequals(646, [29,31,35,37], [25,23,19,17], BigFloat[8,8,-8,-8])
        @checkequals(650, [23,35], [17,29], BigFloat[8,8])
        @checkequals(653, [29,35], [23,17], BigFloat[8,-8])
        @checkequals(728, [30,31,36,37], [25,24,19,18], BigFloat[-24,-24,24,24])
        @checkequals(729, [30,31,36,37], [25,24,19,18], BigFloat[24,24,-24,-24])
        @checkequals(731, [24,25,36,37], [19,18,31,30], BigFloat[-24,-24,-24,-24])
        @checkequals(732, [24,25,36,37], [19,18,31,30], BigFloat[24,24,24,24])
        @checkequals(854, [23,32,35,35], [20,23,20,32], BigFloat[-2,6,-6,-2])
        @checkequals(855, [23,32,35,35], [20,23,20,32], BigFloat[-2,-6,6,-2])
        @checkequals(857, [23,32,35,35], [20,23,20,32], BigFloat[6,-2,2,6])
        @checkequals(858, [23,32,35,35], [20,23,20,32], BigFloat[-6,-2,2,-6])
        @checkequals(863, [23,24,25,35,36,37], [21,20,19,33,32,31], BigFloat[18,18,6,18,18,6])
        @checkequals(864, [31,32,33,35,36,37], [25,24,23,21,20,19], BigFloat[6,18,18,-18,-18,-6])
        @checkequals(898, [23,35], [17,29], BigFloat[4,4])
        @checkequals(899, [29,35], [23,17], BigFloat[4,-4])
        @checkequals(1164, [23,25,35,37], [22,20,34,32], BigFloat[10,10,10,10])
        @checkequals(1165, [32,34,35,37], [25,23,22,20], BigFloat[10,10,-10,-10])
        @checkequals(1742, [26,29,38,38], [17,26,17,29], BigFloat[-2,6,-6,-2])
        @checkequals(1743, [26,29,38,38], [17,26,17,29], BigFloat[-2,-6,6,-2])
        @checkequals(1744, [26,29,38,38], [17,26,17,29], BigFloat[6,-2,2,6])
        @checkequals(1745, [26,29,38,38], [17,26,17,29], BigFloat[-6,-2,2,-6])
        @checkequals(1762, [26,27,38,39], [18,17,30,29], BigFloat[18,18,18,18])
        @checkequals(1764, [29,30,38,39], [27,26,18,17], BigFloat[18,18,-18,-18])
        @checkequals(1894, [23,25,35,37], [22,20,34,32], BigFloat[8,8,8,8])
        @checkequals(1900, [32,34,35,37], [25,23,22,20], BigFloat[8,8,-8,-8])
        @checkequals(1904, [23,35], [20,32], BigFloat[8,8])
        @checkequals(1907, [32,35], [23,20], BigFloat[8,-8])
        @checkequals(1982, [33,34,36,37], [25,24,22,21], BigFloat[-24,-24,24,24])
        @checkequals(1983, [33,34,36,37], [25,24,22,21], BigFloat[24,24,-24,-24])
        @checkequals(1985, [24,25,36,37], [22,21,34,33], BigFloat[-24,-24,-24,-24])
        @checkequals(1986, [24,25,36,37], [22,21,34,33], BigFloat[24,24,24,24])
        @checkequals(2117, [25,37], [22,34], BigFloat[6,6])
        @checkequals(2118, [34,37], [25,22], BigFloat[6,-6])
        @checkequals(2152, [23,35], [20,32], BigFloat[4,4])
        @checkequals(2153, [32,35], [23,20], BigFloat[4,-4])
        @checkequals(2491, [26,28,38,40], [19,17,31,29], BigFloat[10,10,10,10])
        @checkequals(2493, [29,31,38,40], [28,26,19,17], BigFloat[10,10,-10,-10])
        @checkequals(3360, [23,35], [23,35], BigFloat[-4,-4])
        @checkequals(3361, [23,35], [23,35], BigFloat[-12,-12])
        @checkequals(3375, [24,36], [23,35], BigFloat[18,18])
        @checkequals(3719, [26,28,38,40], [19,17,31,29], BigFloat[8,8,8,8])
        @checkequals(3721, [29,31,38,40], [28,26,19,17], BigFloat[8,8,-8,-8])
        @checkequals(3737, [26,38], [17,29], BigFloat[8,8])
        @checkequals(3739, [29,38], [26,17], BigFloat[8,-8])
        @checkequals(3788, [30,31,39,40], [28,27,19,18], BigFloat[-24,-24,24,24])
        @checkequals(3789, [30,31,39,40], [28,27,19,18], BigFloat[24,24,-24,-24])
        @checkequals(3790, [27,28,39,40], [19,18,31,30], BigFloat[-24,-24,-24,-24])
        @checkequals(3791, [27,28,39,40], [19,18,31,30], BigFloat[24,24,24,24])
        @checkequals(4250, [26,32,38,38], [20,26,20,32], BigFloat[-2,6,-6,-2])
        @checkequals(4251, [26,32,38,38], [20,26,20,32], BigFloat[-2,-6,6,-2])
        @checkequals(4252, [26,32,38,38], [20,26,20,32], BigFloat[6,-2,2,6])
        @checkequals(4253, [26,32,38,38], [20,26,20,32], BigFloat[-6,-2,2,-6])
        @checkequals(4270, [26,27,28,38,39,40], [21,20,19,33,32,31], BigFloat[18,18,6,18,18,6])
        @checkequals(4272, [31,32,33,38,39,40], [28,27,26,21,20,19], BigFloat[6,18,18,-18,-18,-6])
        @checkequals(4285, [26,38], [17,29], BigFloat[4,4])
        @checkequals(4287, [29,38], [26,17], BigFloat[4,-4])
        @checkequals(4971, [25,37], [23,35], BigFloat[10,10])
        @checkequals(5461, [26,28,38,40], [22,20,34,32], BigFloat[10,10,10,10])
        @checkequals(5463, [32,34,38,40], [28,26,22,20], BigFloat[10,10,-10,-10])
        @checkequals(6929, [25,37], [23,35], BigFloat[8,8])
        @checkequals(6939, [23,35], [23,35], BigFloat[8,8])
        @checkequals(7288, [25,37], [24,36], BigFloat[48,48])
        @checkequals(8094, [25,37], [25,37], BigFloat[6,6])
        @checkequals(8304, [23,35], [23,35], BigFloat[4,4])
        @checkequals(8438, [26,28,38,40], [22,20,34,32], BigFloat[8,8,8,8])
        @checkequals(8440, [32,34,38,40], [28,26,22,20], BigFloat[8,8,-8,-8])
        @checkequals(8456, [26,38], [20,32], BigFloat[8,8])
        @checkequals(8458, [32,38], [26,20], BigFloat[8,-8])
        @checkequals(8507, [33,34,39,40], [28,27,22,21], BigFloat[-24,-24,24,24])
        @checkequals(8508, [33,34,39,40], [28,27,22,21], BigFloat[24,24,-24,-24])
        @checkequals(8509, [27,28,39,40], [22,21,34,33], BigFloat[-24,-24,-24,-24])
        @checkequals(8510, [27,28,39,40], [22,21,34,33], BigFloat[24,24,24,24])
        @checkequals(8989, [28,40], [22,34], BigFloat[6,6])
        @checkequals(8991, [34,40], [28,22], BigFloat[6,-6])
        @checkequals(9004, [26,38], [20,32], BigFloat[4,4])
        @checkequals(9006, [32,38], [26,20], BigFloat[4,-4])
        @checkequals(14606, [26,35,38,38], [23,26,23,35], BigFloat[-2,-6,6,-2])
        @checkequals(14607, [26,35,38,38], [23,26,23,35], BigFloat[-2,6,-6,-2])
        @checkequals(14614, [26,35,38,38], [23,26,23,35], BigFloat[6,2,-2,6])
        @checkequals(14615, [26,35,38,38], [23,26,23,35], BigFloat[-6,2,-2,-6])
        @checkequals(14640, [26,27,38,39], [24,23,36,35], BigFloat[18,18,18,18])
        @checkequals(14644, [35,36,38,39], [27,26,24,23], BigFloat[-18,-18,18,18])
        @checkequals(19056, [26,28,38,40], [25,23,37,35], BigFloat[10,10,10,10])
        @checkequals(19060, [35,37,38,40], [28,26,25,23], BigFloat[-10,-10,10,10])
        @checkequals(26783, [26,28,38,40], [25,23,37,35], BigFloat[8,8,8,8])
        @checkequals(26796, [35,37,38,40], [28,26,25,23], BigFloat[-8,-8,8,8])
        @checkequals(26806, [26,38], [23,35], BigFloat[8,8])
        @checkequals(26814, [35,38], [26,23], BigFloat[-8,8])
        @checkequals(27047, [36,37,39,40], [28,27,25,24], BigFloat[24,24,-24,-24])
        @checkequals(27048, [36,37,39,40], [28,27,25,24], BigFloat[-24,-24,24,24])
        @checkequals(27055, [27,28,39,40], [25,24,37,36], BigFloat[-24,-24,-24,-24])
        @checkequals(27056, [27,28,39,40], [25,24,37,36], BigFloat[24,24,24,24])
        @checkequals(29083, [28,40], [25,37], BigFloat[6,6])
        @checkequals(29087, [37,40], [28,25], BigFloat[-6,6])
        @checkequals(29209, [26,38], [23,35], BigFloat[4,4])
        @checkequals(29213, [35,38], [26,23], BigFloat[-4,4])
        @checkequals(47925, [26,38], [26,38], BigFloat[-4,-4])
        @checkequals(47926, [26,38], [26,38], BigFloat[-12,-12])
        @checkequals(47981, [27,39], [26,38], BigFloat[18,18])
        @checkequals(59062, [28,40], [26,38], BigFloat[10,10])
        @checkequals(81360, [28,40], [26,38], BigFloat[8,8])
        @checkequals(81393, [26,38], [26,38], BigFloat[8,8])
        @checkequals(81570, [28,40], [27,39], BigFloat[48,48])
        @checkequals(85993, [28,40], [28,40], BigFloat[6,6])
        @checkequals(86063, [26,38], [26,38], BigFloat[4,4])
        @test isnothing(iter)
    elseif state.instance == 70
        @test dim == 24
        iter = iterate(data)
        @checkequals(50, [17,29], [17,29], BigFloat[-4,-4])
        @checkequals(51, [17,29], [17,29], BigFloat[-12,-12])
        @checkequals(57, [19,29,30,31], [17,18,17,29], BigFloat[10,-6,6,10])
        @checkequals(58, [29,30], [18,17], BigFloat[-2,2])
        @checkequals(59, [19,31], [17,29], BigFloat[8,8])
        @checkequals(60, [18,29,30,30], [17,18,17,29], BigFloat[2,16,-16,2])
        @checkequals(66, [17,18,29,30], [17,17,29,29], BigFloat[8,2,8,2])
        @checkequals(74, [19,31], [18,30], BigFloat[48,48])
        @checkequals(79, [20,32], [17,29], BigFloat[-4,-4])
        @checkequals(80, [20,32], [17,29], BigFloat[-12,-12])
        @checkequals(83, [19,31], [19,31], BigFloat[6,6])
        @checkequals(84, [17,29], [17,29], BigFloat[4,4])
        @checkequals(92, [20,22,29,30,32,32,33,34], [19,17,21,20,18,31,17,29], BigFloat[10,10,-6,6,-6,10,6,10])
        @checkequals(150, [29,30,32,33], [21,20,18,17], BigFloat[-2,2,-2,2])
        @checkequals(151, [20,22,32,34], [19,17,31,29], BigFloat[8,8,8,8])
        @checkequals(152, [20,21,29,30,32,32,33,33], [18,17,21,20,18,30,17,29], BigFloat[2,2,16,-16,16,2,-16,2])
        @checkequals(158, [20,20,21,32,32,33], [17,18,17,29,30,29], BigFloat[8,2,2,8,2,2])
        @checkequals(166, [21,22,33,34], [19,18,31,30], BigFloat[48,48,48,48])
        @checkequals(171, [20,32], [20,32], BigFloat[-4,-4])
        @checkequals(172, [20,32], [20,32], BigFloat[-12,-12])
        @checkequals(175, [22,34], [19,31], BigFloat[6,6])
        @checkequals(176, [20,32], [17,29], BigFloat[4,4])
        @checkequals(205, [22,32,33,34], [20,21,20,32], BigFloat[10,-6,6,10])
        @checkequals(272, [23,29,35,35], [17,23,17,29], BigFloat[-2,6,-6,-2])
        @checkequals(273, [23,29,35,35], [17,23,17,29], BigFloat[-2,-6,6,-2])
        @checkequals(275, [23,29,35,35], [17,23,17,29], BigFloat[6,-2,2,6])
        @checkequals(276, [23,29,35,35], [17,23,17,29], BigFloat[-6,-2,2,-6])
        @checkequals(396, [32,33], [21,20], BigFloat[-2,2])
        @checkequals(397, [22,34], [20,32], BigFloat[8,8])
        @checkequals(398, [21,32,33,33], [20,21,20,32], BigFloat[2,16,-16,2])
        @checkequals(404, [20,21,32,33], [20,20,32,32], BigFloat[8,2,8,2])
        @checkequals(412, [22,34], [21,33], BigFloat[48,48])
        @checkequals(421, [22,34], [22,34], BigFloat[6,6])
        @checkequals(422, [20,32], [20,32], BigFloat[4,4])
        @checkequals(456, [23,25,29,30,35,35,36,37], [19,17,24,23,18,31,17,29], BigFloat[10,10,-6,6,-6,10,6,10])
        @checkequals(457, [23,24,29,31,35,35,36,37], [18,17,25,23,19,30,29,17], BigFloat[-6,6,10,10,-10,-6,6,-10])
        @checkequals(639, [23,24,29,35,36,36], [18,17,24,30,17,29], BigFloat[-8,8,-2,-8,2,8])
        @checkequals(640, [23,25,35,37], [19,17,31,29], BigFloat[8,8,8,8])
        @checkequals(641, [23,24,30,35,35,36], [18,17,23,18,30,29], BigFloat[8,-8,2,-2,8,-8])
        @checkequals(645, [23,29,30,35,35,36], [18,24,23,18,30,17], BigFloat[-2,-8,8,-8,-2,8])
        @checkequals(646, [29,31,35,37], [25,23,19,17], BigFloat[8,8,-8,-8])
        @checkequals(647, [24,29,30,35,36,36], [17,24,23,18,17,29], BigFloat[2,8,-8,8,-8,2])
        @checkequals(650, [23,23,24,35,35,36], [17,18,17,29,30,29], BigFloat[8,2,2,8,2,2])
        @checkequals(653, [29,29,30,35,35,36], [23,24,23,17,18,17], BigFloat[8,2,2,-8,-2,-2])
        @checkequals(728, [30,31,36,37], [25,24,19,18], BigFloat[-24,-24,24,24])
        @checkequals(729, [30,31,36,37], [25,24,19,18], BigFloat[24,24,-24,-24])
        @checkequals(731, [24,25,36,37], [19,18,31,30], BigFloat[-24,-24,-24,-24])
        @checkequals(732, [24,25,36,37], [19,18,31,30], BigFloat[24,24,24,24])
        @checkequals(854, [23,32,35,35], [20,23,20,32], BigFloat[-2,6,-6,-2])
        @checkequals(855, [23,32,35,35], [20,23,20,32], BigFloat[-2,-6,6,-2])
        @checkequals(857, [23,32,35,35], [20,23,20,32], BigFloat[6,-2,2,6])
        @checkequals(858, [23,32,35,35], [20,23,20,32], BigFloat[-6,-2,2,-6])
        @checkequals(863, [25,37], [19,31], BigFloat[6,6])
        @checkequals(864, [31,37], [25,19], BigFloat[6,-6])
        @checkequals(898, [23,35], [17,29], BigFloat[4,4])
        @checkequals(899, [29,35], [23,17], BigFloat[4,-4])
        @checkequals(1164, [23,25,32,33,35,35,36,37], [22,20,24,23,21,34,20,32], BigFloat[10,10,-6,6,-6,10,6,10])
        @checkequals(1165, [23,24,32,34,35,35,36,37], [21,20,25,23,22,33,32,20], BigFloat[-6,6,10,10,-10,-6,6,-10])
        @checkequals(1742, [26,29,38,38], [17,26,17,29], BigFloat[-2,6,-6,-2])
        @checkequals(1743, [26,29,38,38], [17,26,17,29], BigFloat[-2,-6,6,-2])
        @checkequals(1744, [26,29,38,38], [17,26,17,29], BigFloat[6,-2,2,6])
        @checkequals(1745, [26,29,38,38], [17,26,17,29], BigFloat[-6,-2,2,-6])
        @checkequals(1893, [23,24,32,35,36,36], [21,20,24,33,20,32], BigFloat[-8,8,-2,-8,2,8])
        @checkequals(1894, [23,25,35,37], [22,20,34,32], BigFloat[8,8,8,8])
        @checkequals(1895, [23,24,33,35,35,36], [21,20,23,21,33,32], BigFloat[8,-8,2,-2,8,-8])
        @checkequals(1899, [23,32,33,35,35,36], [21,24,23,21,33,20], BigFloat[-2,-8,8,-8,-2,8])
        @checkequals(1900, [32,34,35,37], [25,23,22,20], BigFloat[8,8,-8,-8])
        @checkequals(1901, [24,32,33,35,36,36], [20,24,23,21,20,32], BigFloat[2,8,-8,8,-8,2])
        @checkequals(1904, [23,23,24,35,35,36], [20,21,20,32,33,32], BigFloat[8,2,2,8,2,2])
        @checkequals(1907, [32,32,33,35,35,36], [23,24,23,20,21,20], BigFloat[8,2,2,-8,-2,-2])
        @checkequals(1982, [33,34,36,37], [25,24,22,21], BigFloat[-24,-24,24,24])
        @checkequals(1983, [33,34,36,37], [25,24,22,21], BigFloat[24,24,-24,-24])
        @checkequals(1985, [24,25,36,37], [22,21,34,33], BigFloat[-24,-24,-24,-24])
        @checkequals(1986, [24,25,36,37], [22,21,34,33], BigFloat[24,24,24,24])
        @checkequals(2117, [25,37], [22,34], BigFloat[6,6])
        @checkequals(2118, [34,37], [25,22], BigFloat[6,-6])
        @checkequals(2152, [23,35], [20,32], BigFloat[4,4])
        @checkequals(2153, [32,35], [23,20], BigFloat[4,-4])
        @checkequals(2491, [26,28,29,30,38,38,39,40], [19,17,27,26,18,31,17,29], BigFloat[10,10,-6,6,-6,10,6,10])
        @checkequals(2493, [26,27,29,31,38,38,39,40], [18,17,28,26,19,30,29,17], BigFloat[-6,6,10,10,-10,-6,6,-10])
        @checkequals(3360, [23,35], [23,35], BigFloat[-4,-4])
        @checkequals(3361, [23,35], [23,35], BigFloat[-12,-12])
        @checkequals(3718, [26,27,29,38,39,39], [18,17,27,30,17,29], BigFloat[-8,8,-2,-8,2,8])
        @checkequals(3719, [26,28,38,40], [19,17,31,29], BigFloat[8,8,8,8])
        @checkequals(3720, [26,27,30,38,38,39], [18,17,26,18,30,29], BigFloat[8,-8,2,-2,8,-8])
        @checkequals(3721, [29,31,38,40], [28,26,19,17], BigFloat[8,8,-8,-8])
        @checkequals(3722, [27,29,30,38,39,39], [17,27,26,18,17,29], BigFloat[2,8,-8,8,-8,2])
        @checkequals(3737, [26,26,27,38,38,39], [17,18,17,29,30,29], BigFloat[8,2,2,8,2,2])
        @checkequals(3739, [29,29,30,38,38,39], [26,27,26,17,18,17], BigFloat[8,2,2,-8,-2,-2])
        @checkequals(3788, [30,31,39,40], [28,27,19,18], BigFloat[-24,-24,24,24])
        @checkequals(3789, [30,31,39,40], [28,27,19,18], BigFloat[24,24,-24,-24])
        @checkequals(3790, [27,28,39,40], [19,18,31,30], BigFloat[-24,-24,-24,-24])
        @checkequals(3791, [27,28,39,40], [19,18,31,30], BigFloat[24,24,24,24])
        @checkequals(4250, [26,32,38,38], [20,26,20,32], BigFloat[-2,6,-6,-2])
        @checkequals(4251, [26,32,38,38], [20,26,20,32], BigFloat[-2,-6,6,-2])
        @checkequals(4252, [26,32,38,38], [20,26,20,32], BigFloat[6,-2,2,6])
        @checkequals(4253, [26,32,38,38], [20,26,20,32], BigFloat[-6,-2,2,-6])
        @checkequals(4270, [28,40], [19,31], BigFloat[6,6])
        @checkequals(4272, [31,40], [28,19], BigFloat[6,-6])
        @checkequals(4285, [26,38], [17,29], BigFloat[4,4])
        @checkequals(4287, [29,38], [26,17], BigFloat[4,-4])
        @checkequals(4971, [25,35,36,37], [23,24,23,35], BigFloat[10,-6,6,10])
        @checkequals(5461, [26,28,32,33,38,38,39,40], [22,20,27,26,21,34,20,32], BigFloat[10,10,-6,6,-6,10,6,10])
        @checkequals(5463, [26,27,32,34,38,38,39,40], [21,20,28,26,22,33,32,20], BigFloat[-6,6,10,10,-10,-6,6,-10])
        @checkequals(6928, [35,36], [24,23], BigFloat[-2,2])
        @checkequals(6929, [25,37], [23,35], BigFloat[8,8])
        @checkequals(6930, [24,35,36,36], [23,24,23,35], BigFloat[2,16,-16,2])
        @checkequals(6939, [23,24,35,36], [23,23,35,35], BigFloat[8,2,8,2])
        @checkequals(7288, [25,37], [24,36], BigFloat[48,48])
        @checkequals(8094, [25,37], [25,37], BigFloat[6,6])
        @checkequals(8304, [23,35], [23,35], BigFloat[4,4])
        @checkequals(8437, [26,27,32,38,39,39], [21,20,27,33,20,32], BigFloat[-8,8,-2,-8,2,8])
        @checkequals(8438, [26,28,38,40], [22,20,34,32], BigFloat[8,8,8,8])
        @checkequals(8439, [26,27,33,38,38,39], [21,20,26,21,33,32], BigFloat[8,-8,2,-2,8,-8])
        @checkequals(8440, [32,34,38,40], [28,26,22,20], BigFloat[8,8,-8,-8])
        @checkequals(8441, [27,32,33,38,39,39], [20,27,26,21,20,32], BigFloat[2,8,-8,8,-8,2])
        @checkequals(8456, [26,26,27,38,38,39], [20,21,20,32,33,32], BigFloat[8,2,2,8,2,2])
        @checkequals(8458, [32,32,33,38,38,39], [26,27,26,20,21,20], BigFloat[8,2,2,-8,-2,-2])
        @checkequals(8507, [33,34,39,40], [28,27,22,21], BigFloat[-24,-24,24,24])
        @checkequals(8508, [33,34,39,40], [28,27,22,21], BigFloat[24,24,-24,-24])
        @checkequals(8509, [27,28,39,40], [22,21,34,33], BigFloat[-24,-24,-24,-24])
        @checkequals(8510, [27,28,39,40], [22,21,34,33], BigFloat[24,24,24,24])
        @checkequals(8989, [28,40], [22,34], BigFloat[6,6])
        @checkequals(8991, [34,40], [28,22], BigFloat[6,-6])
        @checkequals(9004, [26,38], [20,32], BigFloat[4,4])
        @checkequals(9006, [32,38], [26,20], BigFloat[4,-4])
        @checkequals(14606, [26,35,38,38], [23,26,23,35], BigFloat[-2,-6,6,-2])
        @checkequals(14607, [26,35,38,38], [23,26,23,35], BigFloat[-2,6,-6,-2])
        @checkequals(14614, [26,35,38,38], [23,26,23,35], BigFloat[6,2,-2,6])
        @checkequals(14615, [26,35,38,38], [23,26,23,35], BigFloat[-6,2,-2,-6])
        @checkequals(19056, [26,28,35,36,38,38,39,40], [25,23,27,26,24,37,23,35], BigFloat[10,10,-6,6,-6,10,6,10])
        @checkequals(19060, [26,27,35,37,38,38,39,40], [24,23,28,26,25,36,35,23], BigFloat[6,-6,-10,-10,10,6,-6,10])
        @checkequals(26782, [26,27,36,38,38,39], [24,23,26,24,36,35], BigFloat[8,-8,2,-2,8,-8])
        @checkequals(26783, [26,28,38,40], [25,23,37,35], BigFloat[8,8,8,8])
        @checkequals(26784, [26,27,35,38,39,39], [24,23,27,36,23,35], BigFloat[-8,8,-2,-8,2,8])
        @checkequals(26795, [27,35,36,38,39,39], [23,27,26,24,23,35], BigFloat[-2,-8,8,-8,8,-2])
        @checkequals(26796, [35,37,38,40], [28,26,25,23], BigFloat[-8,-8,8,8])
        @checkequals(26797, [26,35,36,38,38,39], [24,27,26,24,36,23], BigFloat[2,8,-8,8,2,-8])
        @checkequals(26806, [26,26,27,38,38,39], [23,24,23,35,36,35], BigFloat[8,2,2,8,2,2])
        @checkequals(26814, [35,35,36,38,38,39], [26,27,26,23,24,23], BigFloat[-8,-2,-2,8,2,2])
        @checkequals(27047, [36,37,39,40], [28,27,25,24], BigFloat[24,24,-24,-24])
        @checkequals(27048, [36,37,39,40], [28,27,25,24], BigFloat[-24,-24,24,24])
        @checkequals(27055, [27,28,39,40], [25,24,37,36], BigFloat[-24,-24,-24,-24])
        @checkequals(27056, [27,28,39,40], [25,24,37,36], BigFloat[24,24,24,24])
        @checkequals(29083, [28,40], [25,37], BigFloat[6,6])
        @checkequals(29087, [37,40], [28,25], BigFloat[-6,6])
        @checkequals(29209, [26,38], [23,35], BigFloat[4,4])
        @checkequals(29213, [35,38], [26,23], BigFloat[-4,4])
        @checkequals(47925, [26,38], [26,38], BigFloat[-4,-4])
        @checkequals(47926, [26,38], [26,38], BigFloat[-12,-12])
        @checkequals(59062, [28,38,39,40], [26,27,26,38], BigFloat[10,-6,6,10])
        @checkequals(81359, [38,39], [27,26], BigFloat[-2,2])
        @checkequals(81360, [28,40], [26,38], BigFloat[8,8])
        @checkequals(81361, [27,38,39,39], [26,27,26,38], BigFloat[2,16,-16,2])
        @checkequals(81393, [26,27,38,39], [26,26,38,38], BigFloat[8,2,8,2])
        @checkequals(81570, [28,40], [27,39], BigFloat[48,48])
        @checkequals(85993, [28,40], [28,40], BigFloat[6,6])
        @checkequals(86063, [26,38], [26,38], BigFloat[4,4])
        @test isnothing(iter)
    else
        @test false
    end
end

Solver.add_constr_psd_complex!(state::SolverSetup{false,false,<:Any,true,false}, dim::Int, data) =
    @interpret add_constr_psd_complex_worker!(state, dim, psd_indextype(state), data)

function add_constr_psd_complex_worker!(state::SolverSetup{false,false,<:Any,true,false}, dim::Int, ::PSDIndextypeVector{tri}, data::PSDVector{BigInt,BigFloat}) where {tri}
    @test state.lastcall === :none
    state.lastcall = :psdc
    if state.instance == 27
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[20830], BigFloat[17], BigInt[20830], BigFloat[17], BigInt[20830], BigFloat[17])
        @checkequals(BigInt[22409], BigFloat[24.041630560342618], BigInt[22409], BigFloat[24.041630560342618], BigInt[22409], BigFloat[17.])
        @checkequals(BigInt[22410], BigFloat[24.041630560342618], BigInt[22410], BigFloat[-24.041630560342618], BigInt[22410], BigFloat[17.])
        @checkequals(BigInt[23048], BigFloat[17], BigInt[23048], BigFloat[17], BigInt[22409], BigFloat[17.])
        if tri === :F
            @checkequals(BigInt[22410], BigFloat[-17.])
            @checkequals(BigInt[23048], BigFloat[17])
        end
        @test isnothing(iter)
    elseif state.instance == 30
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[17744], BigFloat[24], BigInt[17744], BigFloat[24], BigInt[17744], BigFloat[24])
        @checkequals(BigInt[20571], BigFloat[33.941125496954285], BigInt[20571], BigFloat[33.941125496954285], BigInt[20571], BigFloat[24.])
        @checkequals(BigInt[20574], BigFloat[33.941125496954285], BigInt[20574], BigFloat[-33.941125496954285], BigInt[20574], BigFloat[24.])
        @checkequals(BigInt[21922], BigFloat[24], BigInt[21922], BigFloat[24], BigInt[20571], BigFloat[24.])
        if tri === :F
            @checkequals(BigInt[20574], BigFloat[-24.])
            @checkequals(BigInt[21922], BigFloat[24])
        end
        @test isnothing(iter)
    elseif state.instance == 33
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[5672,17777], BigFloat[2,8], BigInt[5672,17777], BigFloat[2,8], BigInt[5672,17777], BigFloat[2,8])
        @checkequals(BigInt[6102,20588], BigFloat[2.8284271247461903,11.313708498984761], BigInt[6102,20588], BigFloat[2.8284271247461903,11.313708498984761], BigInt[6102,20588], BigFloat[2.,8.])
        @checkequals(BigInt[6103,20589], BigFloat[2.8284271247461903,11.313708498984761], BigInt[6103,20589], BigFloat[-2.8284271247461903,-11.313708498984761], BigInt[6103,20589], BigFloat[2.,8.])
        @checkequals(BigInt[6223,21928], BigFloat[2,8], BigInt[6223,21928], BigFloat[2,8], BigInt[6102,20588], BigFloat[2.,8.])
        if tri === :F
            @checkequals(BigInt[6103,20589], BigFloat[-2.,-8.])
            @checkequals(BigInt[6223,21928], BigFloat[2,8])
        end
        @test isnothing(iter)
    elseif state.instance == 36
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[4699], BigFloat[6], BigInt[4699], BigFloat[6], BigInt[4699], BigFloat[6])
        @checkequals(BigInt[5542,5545], BigFloat[4.242640687119286,4.242640687119286], BigInt[5542,5545], BigFloat[4.242640687119286,4.242640687119286], BigInt[5542,5545], BigFloat[3.,3.])
        @checkequals(BigInt[5546], BigFloat[4.242640687119286], BigInt[5546], BigFloat[-4.242640687119286], BigInt[5546], BigFloat[3.])
        @checkequals(BigInt[5815], BigFloat[6], BigInt[5815], BigFloat[6], BigInt[5542,5545], BigFloat[3.,3.])
        if tri === :F
            @checkequals(BigInt[5546], BigFloat[-3.])
            @checkequals(BigInt[5815], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 39
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[17502], BigFloat[14], BigInt[17502], BigFloat[14], BigInt[17502], BigFloat[14])
        @checkequals(BigInt[20164,20168], BigFloat[-9.899494936611665,9.899494936611665], BigInt[20164,20168], BigFloat[-9.899494936611665,9.899494936611665], BigInt[20164,20168], BigFloat[-7.,7.])
        @checkequals(BigInt[20154,20162], BigFloat[-9.899494936611665,9.899494936611665], BigInt[20154,20162], BigFloat[9.899494936611665,-9.899494936611665], BigInt[20154,20162], BigFloat[-7.,7.])
        @checkequals(BigInt[21232], BigFloat[14], BigInt[21232], BigFloat[14], BigInt[20164,20168], BigFloat[-7.,7.])
        if tri === :F
            @checkequals(BigInt[20154,20162], BigFloat[7.,-7.])
            @checkequals(BigInt[21232], BigFloat[14])
        end
        @test isnothing(iter)
    elseif state.instance == 42
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[4699,4702,5672,9297,17496,17777], BigFloat[8,16,3,4,14,5], BigInt[4699,4702,5672,9297,17496,17777], BigFloat[8,16,3,4,14,5], BigInt[4699,4702,5672,9297,17496,17777], BigFloat[8,16,3,4,14,5])
        @checkequals(BigInt[5542,5545,5546,6102,10837,20156,20166,20588], BigFloat[5.656854249492381,5.656854249492381,11.313708498984761,4.242640687119286,5.656854249492381,9.899494936611665,9.899494936611665,7.0710678118654755], BigInt[5542,5545,5546,6102,10837,20156,20166,20588], BigFloat[5.656854249492381,5.656854249492381,11.313708498984761,4.242640687119286,5.656854249492381,9.899494936611665,9.899494936611665,7.0710678118654755], BigInt[5542,5545,5546,6102,10837,20156,20166,20588], BigFloat[4.,4.,8.,3.,4.,7.,7.,5.])
        @checkequals(BigInt[5542,5545,5546,6103,10843,20171,20174,20589], BigFloat[-11.313708498984761,11.313708498984761,5.656854249492381,4.242640687119286,5.656854249492381,-9.899494936611665,9.899494936611665,7.0710678118654755], BigInt[5542,5545,5546,6103,10843,20171,20174,20589], BigFloat[11.313708498984761,-11.313708498984761,-5.656854249492381,-4.242640687119286,-5.656854249492381,9.899494936611665,-9.899494936611665,-7.0710678118654755], BigInt[5542,5545,5546,6103,10843,20171,20174,20589], BigFloat[-8.,8.,4.,3.,4.,-7.,7.,5.])
        @checkequals(BigInt[5815,5816,6223,11399,21230,21928], BigFloat[8,16,3,4,14,5], BigInt[5815,5816,6223,11399,21230,21928], BigFloat[8,16,3,4,14,5], BigInt[5542,5545,5546,6102,10837,20156,20166,20588], BigFloat[4.,4.,8.,3.,4.,7.,7.,5.])
        if tri === :F
            @checkequals(BigInt[5542,5545,5546,6103,10843,20171,20174,20589], BigFloat[8.,-8.,-4.,-3.,-4.,7.,-7.,-5.])
            @checkequals(BigInt[5815,5816,6223,11399,21230,21928], BigFloat[8,16,3,4,14,5])
        end
        @test isnothing(iter)
    elseif state.instance == 47
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[31799], BigFloat[17], BigInt[31799], BigFloat[17], BigInt[31799], BigFloat[17])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[9460], BigFloat[-11.313708498984761], BigInt[9460], BigFloat[11.313708498984761], BigInt[9460], BigFloat[-8.])
        @checkequals(BigInt[17770], BigFloat[6], BigInt[17770], BigFloat[6], BigInt[], BigFloat[])
        if tri === :F
            @checkequals(BigInt[9460], BigFloat[8.])
            @checkequals(BigInt[17770], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 50
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[31799], BigFloat[17], BigInt[31799], BigFloat[17], BigInt[31799], BigFloat[17])
        @checkequals(BigInt[9278], BigFloat[11.313708498984761], BigInt[9278], BigFloat[11.313708498984761], BigInt[9278], BigFloat[8.])
        @checkequals(BigInt[9280], BigFloat[11.313708498984761], BigInt[9280], BigFloat[-11.313708498984761], BigInt[9280], BigFloat[8.])
        @checkequals(BigInt[17770], BigFloat[6], BigInt[17770], BigFloat[6], BigInt[9278], BigFloat[8.])
        if tri === :F
            @checkequals(BigInt[9280], BigFloat[-8.])
            @checkequals(BigInt[17770], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 53
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[31799], BigFloat[17], BigInt[31799], BigFloat[17], BigInt[31799], BigFloat[17])
        @checkequals(BigInt[9280], BigFloat[11.313708498984761], BigInt[9280], BigFloat[11.313708498984761], BigInt[9280], BigFloat[8.])
        @checkequals(BigInt[9278], BigFloat[-11.313708498984761], BigInt[9278], BigFloat[11.313708498984761], BigInt[9278], BigFloat[-8.])
        @checkequals(BigInt[17770], BigFloat[6], BigInt[17770], BigFloat[6], BigInt[9280], BigFloat[8.])
        if tri === :F
            @checkequals(BigInt[9278], BigFloat[8.])
            @checkequals(BigInt[17770], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 56
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[31799], BigFloat[17], BigInt[31799], BigFloat[17], BigInt[31799], BigFloat[17])
        @checkequals(BigInt[9278,9280], BigFloat[11.313708498984761,2.8284271247461903], BigInt[9278,9280], BigFloat[11.313708498984761,2.8284271247461903], BigInt[9278,9280], BigFloat[8.,2.])
        @checkequals(BigInt[9278,9280], BigFloat[-2.8284271247461903,11.313708498984761], BigInt[9278,9280], BigFloat[2.8284271247461903,-11.313708498984761], BigInt[9278,9280], BigFloat[-2.,8.])
        @checkequals(BigInt[17770], BigFloat[6], BigInt[17770], BigFloat[6], BigInt[9278,9280], BigFloat[8.,2.])
        if tri === :F
            @checkequals(BigInt[9278,9280], BigFloat[2.,-8.])
            @checkequals(BigInt[17770], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 59
        @test dim == 2
        iter = iterate(data)
        @checkequals(BigInt[9460,31799], BigFloat[5,17], BigInt[9460,31799], BigFloat[5,17], BigInt[9460,31799], BigFloat[5,17])
        @checkequals(BigInt[9280,9297], BigFloat[2.8284271247461903,1.4142135623730951], BigInt[9280,9297], BigFloat[2.8284271247461903,1.4142135623730951], BigInt[9280,9297], BigFloat[2.,1.])
        @checkequals(BigInt[5665,9278,9280], BigFloat[4.242640687119286,2.8284271247461903,-22.627416997969522], BigInt[5665,9278,9280], BigFloat[-4.242640687119286,-2.8284271247461903,22.627416997969522], BigInt[5665,9278,9280], BigFloat[3.,2.,-16.])
        @checkequals(BigInt[17770], BigFloat[6], BigInt[17770], BigFloat[6], BigInt[9280,9297], BigFloat[2.,1.])
        if tri === :F
            @checkequals(BigInt[5665,9278,9280], BigFloat[-3.,-2.,16.])
            @checkequals(BigInt[17770], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 65
        @test dim == 12
        iter = iterate(data)
        @checkequals(BigInt[50,51,66,84], BigFloat[-4,-6,5,3], BigInt[50,51,66,84], BigFloat[-4,-6,5,3], BigInt[50,51,66,84], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[60,66], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[60,66], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[60,66], BigFloat[2.,2.])
        @checkequals(BigInt[57,58,60], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[57,58,60], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[57,58,60], BigFloat[6.,2.,-16.])
        @checkequals(BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[57,59], BigFloat[10.,8.])
        @checkequals(BigInt[], BigFloat[], BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[79,80,158,176], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[], BigFloat[], BigInt[79,80,158,176], BigFloat[-4.,-6.,5.,3.])
        @checkequals(BigInt[], BigFloat[], BigInt[74], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[152,158], BigFloat[2.,2.])
        @checkequals(BigInt[92,150,152], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[83], BigFloat[6], BigInt[92,150,152], BigFloat[6.,2.,-16.])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[79,80,158,176], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[92,151], BigFloat[10.,8.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[454,455,1069,1181], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[454,455,1069,1181], BigFloat[-4.,-6.,5.,3.])
        @checkequals(BigInt[], BigFloat[], BigInt[92,150,152], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[1063,1069], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[1063,1069], BigFloat[2.,2.])
        @checkequals(BigInt[522,1061,1063], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[], BigInt[522,1061,1063], BigFloat[6.,2.,-16.])
        @checkequals(BigInt[522,1062], BigFloat[14.142135623730951,11.313708498984761], BigInt[171,172,404,422], BigFloat[-4,-6,5,3], BigInt[522,1062], BigFloat[10.,8.])
        @checkequals(BigInt[], BigFloat[], BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[2170,2171,4545,4683], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[92,150,152], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[2170,2171,4545,4683], BigFloat[-4.,-6.,5.,3.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[4539,4545], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[4539,4545], BigFloat[2.,2.])
        @checkequals(BigInt[2693,4537,4539], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[166], BigFloat[67.88225099390857], BigInt[2693,4537,4539], BigFloat[6.,2.,-16.])
        @checkequals(BigInt[2693,4538], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[2693,4538], BigFloat[10.,8.])
        @checkequals(BigInt[], BigFloat[], BigInt[398,404], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[205,396,398], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[60,66], BigFloat[2.,2.])
        @checkequals(BigInt[74], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[57,58,60], BigFloat[-6.,-2.,16.])
        @checkequals(BigInt[], BigFloat[], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[74], BigFloat[48.])
        @checkequals(BigInt[92,150,152], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[166], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[152,158], BigFloat[2.,2.])
        @checkequals(BigInt[], BigFloat[], BigInt[175], BigFloat[8.485281374238571], BigInt[92,150,152], BigFloat[-6.,-2.,16.])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[1063,1069], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[166], BigFloat[48.])
        @checkequals(BigInt[522,1061,1063], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[412], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[1063,1069], BigFloat[2.,2.])
        @checkequals(BigInt[], BigFloat[], BigInt[421], BigFloat[6], BigInt[522,1061,1063], BigFloat[-6.,-2.,16.])
        @checkequals(BigInt[1107], BigFloat[67.88225099390857], BigInt[454,455,1069,1181], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[4539,4545], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[1063,1069], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[1107], BigFloat[48.])
        @checkequals(BigInt[2693,4537,4539], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[522,1061,1063], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[522,1062], BigFloat[14.142135623730951,11.313708498984761], BigInt[4539,4545], BigFloat[2.,2.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[2693,4537,4539], BigFloat[-6.,-2.,16.])
        @checkequals(BigInt[4553], BigFloat[67.88225099390857], BigInt[1162,1163,2575,2687], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[83], BigFloat[6], BigInt[2569,2575], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[4553], BigFloat[48.])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[1286,2567,2569], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[1286,2568], BigFloat[14.142135623730951,11.313708498984761], BigInt[57,59], BigFloat[10.,8.])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[5813,5814,11406,11860], BigFloat[-4,-6,5,3], BigInt[74], BigFloat[48.])
        @checkequals(BigInt[175], BigFloat[8.485281374238571], BigInt[1063,1069], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[522,1061,1063], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[83], BigFloat[6])
        @checkequals(BigInt[522,1062], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[92,151], BigFloat[10.,8.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[1107], BigFloat[67.88225099390857], BigInt[1107], BigFloat[67.88225099390857], BigInt[166], BigFloat[48.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[1166], BigFloat[8.485281374238571], BigInt[2569,2575], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[175], BigFloat[6.])
        @checkequals(BigInt[], BigFloat[], BigInt[1286,2567,2569], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[2693,4538], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[522,1062], BigFloat[10.,8.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[4553], BigFloat[67.88225099390857], BigInt[2613], BigFloat[67.88225099390857], BigInt[1107], BigFloat[48.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[4682], BigFloat[8.485281374238571], BigInt[11400,11406], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[1166], BigFloat[6.])
        @checkequals(BigInt[], BigFloat[], BigInt[6223,11398,11400], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[], BigFloat[])
        @checkequals(BigInt[171,172,404,422], BigFloat[-4,-6,5,3], BigInt[], BigFloat[], BigInt[2693,4538], BigFloat[10.,8.])
        @checkequals(BigInt[398,404], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[522,1062], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[205,396,398], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[], BigInt[4553], BigFloat[48.])
        @checkequals(BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[1107], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[4682], BigFloat[6.])
        @checkequals(BigInt[1162,1163,2575,2687], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[1166], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[79,80,158,176], BigFloat[-4.,-6.,5.,3.])
        @checkequals(BigInt[2569,2575], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[1286,2568], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[1286,2567,2569], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[], BigInt[152,158], BigFloat[2.,2.])
        @checkequals(BigInt[1286,2568], BigFloat[14.142135623730951,11.313708498984761], BigInt[2613], BigFloat[67.88225099390857], BigInt[92,150,152], BigFloat[6.,2.,-16.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[92,151], BigFloat[10.,8.])
        @checkequals(BigInt[4678,4679,9264,9402], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[2672], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[171,172,404,422], BigFloat[-4,-6,5,3])
        @checkequals(BigInt[9258,9264], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[6223,11399], BigFloat[14.142135623730951,11.313708498984761], BigInt[398,404], BigFloat[2.,2.])
        @checkequals(BigInt[5663,9256,9258], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[], BigFloat[], BigInt[205,396,398], BigFloat[6.,2.,-16.])
        @checkequals(BigInt[5663,9257], BigFloat[14.142135623730951,11.313708498984761], BigInt[11535], BigFloat[67.88225099390857], BigInt[205,397], BigFloat[10.,8.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[11790], BigFloat[6], BigInt[1162,1163,2575,2687], BigFloat[-4.,-6.,5.,3.])
        @checkequals(BigInt[412], BigFloat[67.88225099390857], BigInt[2170,2171,4545,4683], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[2569,2575], BigFloat[2.,2.])
        @checkequals(BigInt[2569,2575], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[4539,4545], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[1286,2567,2569], BigFloat[6.,2.,-16.])
        @checkequals(BigInt[1286,2567,2569], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[2693,4537,4539], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[1286,2568], BigFloat[10.,8.])
        @checkequals(BigInt[], BigFloat[], BigInt[2693,4538], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[4678,4679,9264,9402], BigFloat[-4.,-6.,5.,3.])
        @checkequals(BigInt[2613], BigFloat[67.88225099390857], BigInt[4678,4679,9264,9402], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[9258,9264], BigFloat[2.,2.])
        @checkequals(BigInt[9258,9264], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[9258,9264], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[5663,9256,9258], BigFloat[6.,2.,-16.])
        @checkequals(BigInt[5663,9256,9258], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[5663,9256,9258], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[5663,9257], BigFloat[10.,8.])
        @checkequals(BigInt[], BigFloat[], BigInt[5663,9257], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[152,158], BigFloat[2.,2.])
        @checkequals(BigInt[9272], BigFloat[67.88225099390857], BigInt[20439,20440,36385,36903], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[92,150,152], BigFloat[-6.,-2.,16.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[421], BigFloat[6], BigInt[36379,36385], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[1286,2568], BigFloat[14.142135623730951,11.313708498984761], BigInt[22426,36377,36379], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[166], BigFloat[48.])
        @checkequals(BigInt[], BigFloat[], BigInt[22426,36378], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[2613], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[398,404], BigFloat[2.,2.])
        @checkequals(BigInt[], BigFloat[], BigInt[55253,55254,92466,93270], BigFloat[-4,-6,5,3], BigInt[205,396,398], BigFloat[-6.,-2.,16.])
        @checkequals(BigInt[2672], BigFloat[8.485281374238571], BigInt[4539,4545], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[2693,4537,4539], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[412], BigFloat[48.])
        @checkequals(BigInt[5663,9257], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[2569,2575], BigFloat[2.,2.])
        @checkequals(BigInt[9272], BigFloat[67.88225099390857], BigInt[4553], BigFloat[67.88225099390857], BigInt[1286,2567,2569], BigFloat[-6.,-2.,16.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[9401], BigFloat[8.485281374238571], BigInt[9258,9264], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[5663,9256,9258], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[2613], BigFloat[48.])
        @checkequals(BigInt[5813,5814,11406,11860], BigFloat[-4,-6,5,3], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[11400,11406], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[9258,9264], BigFloat[2.,2.])
        @checkequals(BigInt[6223,11398,11400], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[9272], BigFloat[67.88225099390857], BigInt[5663,9256,9258], BigFloat[-6.,-2.,16.])
        @checkequals(BigInt[6223,11399], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[36379,36385], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[20439,20440,36385,36903], BigFloat[-5.656854249492381,-8.485281374238571,7.0710678118654755,4.242640687119286], BigInt[22426,36377,36379], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[9272], BigFloat[48.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[36379,36385], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[92,151], BigFloat[10.,8.])
        @checkequals(BigInt[22426,36377,36379], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[36423], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[22426,36378], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[166], BigFloat[48.])
        @checkequals(BigInt[], BigFloat[], BigInt[92460,92466], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[63728,92458,92460], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[175], BigFloat[6.])
        @checkequals(BigInt[11535], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[2693,4538], BigFloat[14.142135623730951,11.313708498984761], BigInt[205,397], BigFloat[10.,8.])
        @checkequals(BigInt[36379,36385], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[22426,36377,36379], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[4553], BigFloat[67.88225099390857], BigInt[412], BigFloat[48.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[4682], BigFloat[8.485281374238571], BigInt[421], BigFloat[6])
        @checkequals(BigInt[36423], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[1286,2568], BigFloat[10.,8.])
        @checkequals(BigInt[], BigFloat[], BigInt[5663,9257], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[11790], BigFloat[6], BigInt[], BigFloat[], BigInt[2613], BigFloat[48.])
        @checkequals(BigInt[22426,36378], BigFloat[14.142135623730951,11.313708498984761], BigInt[9272], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[2672], BigFloat[6.])
        @checkequals(BigInt[36423], BigFloat[67.88225099390857], BigInt[9401], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[5663,9257], BigFloat[10.,8.])
        @checkequals(BigInt[36888], BigFloat[8.485281374238571], BigInt[22426,36378], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[9272], BigFloat[48.])
        @checkequals(BigInt[55253,55254,92466,93270], BigFloat[-4,-6,5,3], BigInt[36423], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[92460,92466], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[9401], BigFloat[6.])
        @checkequals(BigInt[63728,92458,92460], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[36888], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[63728,92459], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[454,455,1069,1181], BigFloat[-4.,-6.,5.,3.])
        @checkequals(BigInt[], BigFloat[], BigInt[63728,92459], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[1063,1069], BigFloat[2.,2.])
        @checkequals(BigInt[92474], BigFloat[67.88225099390857], BigInt[92474], BigFloat[67.88225099390857], BigInt[522,1061,1063], BigFloat[6.,2.,-16.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[522,1062], BigFloat[10.,8.])
        @checkequals(BigInt[93269], BigFloat[6], BigInt[93269], BigFloat[6], BigInt[], BigFloat[])
        if tri === :F
            @checkequals(BigInt[1162,1163,2575,2687], BigFloat[-4.,-6.,5.,3.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2569,2575], BigFloat[2.,2.])
            @checkequals(BigInt[1286,2567,2569], BigFloat[6.,2.,-16.])
            @checkequals(BigInt[1286,2568], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[5813,5814,11406,11860], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[11400,11406], BigFloat[2.,2.])
            @checkequals(BigInt[6223,11398,11400], BigFloat[6.,2.,-16.])
            @checkequals(BigInt[6223,11399], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[20439,20440,36385,36903], BigFloat[-4.,-6.,5.,3.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[36379,36385], BigFloat[2.,2.])
            @checkequals(BigInt[22426,36377,36379], BigFloat[6.,2.,-16.])
            @checkequals(BigInt[22426,36378], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1063,1069], BigFloat[2.,2.])
            @checkequals(BigInt[522,1061,1063], BigFloat[-6.,-2.,16.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1107], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2569,2575], BigFloat[2.,2.])
            @checkequals(BigInt[1286,2567,2569], BigFloat[-6.,-2.,16.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2613], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[11400,11406], BigFloat[2.,2.])
            @checkequals(BigInt[6223,11398,11400], BigFloat[-6.,-2.,16.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[11535], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[36379,36385], BigFloat[2.,2.])
            @checkequals(BigInt[22426,36377,36379], BigFloat[-6.,-2.,16.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[36423], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[522,1062], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1107], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1166], BigFloat[6.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1286,2568], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2613], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2672], BigFloat[6.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[6223,11399], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[11535], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[11790], BigFloat[6])
            @checkequals(BigInt[22426,36378], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[36423], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[36888], BigFloat[6.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2170,2171,4545,4683], BigFloat[-4.,-6.,5.,3.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[4539,4545], BigFloat[2.,2.])
            @checkequals(BigInt[2693,4537,4539], BigFloat[6.,2.,-16.])
            @checkequals(BigInt[2693,4538], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[4678,4679,9264,9402], BigFloat[-4.,-6.,5.,3.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[9258,9264], BigFloat[2.,2.])
            @checkequals(BigInt[5663,9256,9258], BigFloat[6.,2.,-16.])
            @checkequals(BigInt[5663,9257], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[20439,20440,36385,36903], BigFloat[-4.,-6.,5.,3.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[36379,36385], BigFloat[2.,2.])
            @checkequals(BigInt[22426,36377,36379], BigFloat[6.,2.,-16.])
            @checkequals(BigInt[22426,36378], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[55253,55254,92466,93270], BigFloat[-4,-6,5,3])
            @checkequals(BigInt[92460,92466], BigFloat[2.,2.])
            @checkequals(BigInt[63728,92458,92460], BigFloat[6.,2.,-16.])
            @checkequals(BigInt[63728,92459], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[4539,4545], BigFloat[2.,2.])
            @checkequals(BigInt[2693,4537,4539], BigFloat[-6.,-2.,16.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[4553], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[9258,9264], BigFloat[2.,2.])
            @checkequals(BigInt[5663,9256,9258], BigFloat[-6.,-2.,16.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[9272], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[36379,36385], BigFloat[2.,2.])
            @checkequals(BigInt[22426,36377,36379], BigFloat[-6.,-2.,16.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[36423], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[92460,92466], BigFloat[2.,2.])
            @checkequals(BigInt[63728,92458,92460], BigFloat[-6.,-2.,16.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[92474], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2693,4538], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[4553], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[4682], BigFloat[6.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[5663,9257], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[9272], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[9401], BigFloat[6.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[22426,36378], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[36423], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[36888], BigFloat[6.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[63728,92459], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[92474], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[93269], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 67
        @test dim == 4
        iter = iterate(data)
        @checkequals(BigInt[50,51,66,84], BigFloat[-4,-12,8,4], BigInt[50,51,66,84], BigFloat[-4,-12,8,4], BigInt[50,51,66,84], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[79,80,158,176], BigFloat[-5.656854249492381,-16.970562748477143,11.313708498984761,5.656854249492381], BigInt[79,80,158,176], BigFloat[-5.656854249492381,-16.970562748477143,11.313708498984761,5.656854249492381], BigInt[79,80,158,176], BigFloat[-4.,-12.,8.,4.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[272,273,275,276,650,898], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[171,172,404,422], BigFloat[-4,-12,8,4], BigInt[272,273,275,276,650,898], BigFloat[-2.,-2.,6.,-6.,8.,4.])
        @checkequals(BigInt[272,273,275,276,653,899], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[272,273,275,276,650,898], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[272,273,275,276,653,899], BigFloat[-6.,6.,2.,2.,-8.,-4.])
        @checkequals(BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[272,273,275,276,653,899], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.,-2.,6.,-6.,8.,4.])
        @checkequals(BigInt[1742,1743,1744,1745,3739,4287], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[854,855,857,858,1904,2152], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[-6.,6.,2.,2.,-8.,-4.])
        @checkequals(BigInt[171,172,404,422], BigFloat[-4,-12,8,4], BigInt[854,855,857,858,1907,2153], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[79,80,158,176], BigFloat[-4.,-12.,8.,4.])
        @checkequals(BigInt[854,855,857,858,1904,2152], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4], BigInt[], BigFloat[])
        @checkequals(BigInt[854,855,857,858,1907,2153], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[171,172,404,422], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[854,855,857,858,1904,2152], BigFloat[-2.,-2.,6.,-6.,8.,4.])
        @checkequals(BigInt[4250,4251,4252,4253,8458,9006], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[854,855,857,858,1907,2153], BigFloat[-6.,6.,2.,2.,-8.,-4.])
        @checkequals(BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4], BigInt[4250,4251,4252,4253,8458,9006], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.,-2.,6.,-6.,8.,4.])
        @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[4250,4251,4252,4253,8458,9006], BigFloat[-6.,6.,2.,2.,-8.,-4.])
        @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[14606,14607,14614,14615,26814,29213], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[272,273,275,276,650,898], BigFloat[-2.,-2.,6.,-6.,8.,4.])
        @checkequals(BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4], BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4], BigInt[272,273,275,276,653,899], BigFloat[6.,-6.,-2.,-2.,8.,4.])
        if tri === :F
            @checkequals(BigInt[854,855,857,858,1904,2152], BigFloat[-2.,-2.,6.,-6.,8.,4.])
            @checkequals(BigInt[854,855,857,858,1907,2153], BigFloat[6.,-6.,-2.,-2.,8.,4.])
            @checkequals(BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.,-2.,6.,-6.,8.,4.])
            @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[6.,-6.,-2.,-2.,8.,4.])
            @checkequals(BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.,-2.,6.,-6.,8.,4.])
            @checkequals(BigInt[1742,1743,1744,1745,3739,4287], BigFloat[6.,-6.,-2.,-2.,8.,4.])
            @checkequals(BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.,-2.,6.,-6.,8.,4.])
            @checkequals(BigInt[4250,4251,4252,4253,8458,9006], BigFloat[6.,-6.,-2.,-2.,8.,4.])
            @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.,-2.,6.,-6.,8.,4.])
            @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[-6.,6.,2.,2.,-8.,-4.])
            @checkequals(BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4])
        end
        @test isnothing(iter)
    elseif state.instance == 69
        @test dim == 12
        iter = iterate(data)
        @checkequals(BigInt[50,51,66,84], BigFloat[-4,-12,8,4], BigInt[50,51,66,84], BigFloat[-4,-12,8,4], BigInt[50,51,66,84], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[54], BigFloat[25.455844122715714], BigInt[54], BigFloat[25.455844122715714], BigInt[54], BigFloat[18.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[57,59], BigFloat[10.,8.])
        @checkequals(BigInt[], BigFloat[], BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[79,80,158,176], BigFloat[-5.656854249492381,-16.970562748477143,11.313708498984761,5.656854249492381], BigInt[], BigFloat[], BigInt[79,80,158,176], BigFloat[-4.,-12.,8.,4.])
        @checkequals(BigInt[], BigFloat[], BigInt[74], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[83], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[83], BigFloat[18.])
        @checkequals(BigInt[], BigFloat[], BigInt[83], BigFloat[6], BigInt[], BigFloat[])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[79,80,158,176], BigFloat[-5.656854249492381,-16.970562748477143,11.313708498984761,5.656854249492381], BigInt[92,151], BigFloat[10.,8.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[272,273,275,276,650,898], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[83], BigFloat[25.455844122715714], BigInt[272,273,275,276,650,898], BigFloat[-2.,-2.,6.,-6.,8.,4.])
        @checkequals(BigInt[272,273,275,276,653,899], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[], BigFloat[], BigInt[272,273,275,276,653,899], BigFloat[-6.,6.,2.,2.,-8.,-4.])
        @checkequals(BigInt[281], BigFloat[25.455844122715714], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[281], BigFloat[18.])
        @checkequals(BigInt[282], BigFloat[-25.455844122715714], BigInt[], BigFloat[], BigInt[282], BigFloat[-18.])
        @checkequals(BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[171,172,404,422], BigFloat[-4,-12,8,4], BigInt[456,640], BigFloat[10.,8.])
        @checkequals(BigInt[457,646], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[83], BigFloat[25.455844122715714], BigInt[457,646], BigFloat[-10.,-8.])
        @checkequals(BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[], BigFloat[], BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.,-2.,6.,-6.,8.,4.])
        @checkequals(BigInt[1742,1743,1744,1745,3739,4287], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[], BigFloat[], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[-6.,6.,2.,2.,-8.,-4.])
        @checkequals(BigInt[1762], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[1762], BigFloat[18.])
        @checkequals(BigInt[1764], BigFloat[-25.455844122715714], BigInt[166], BigFloat[67.88225099390857], BigInt[1764], BigFloat[-18.])
        @checkequals(BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[2491,3719], BigFloat[10.,8.])
        @checkequals(BigInt[2493,3721], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[175], BigFloat[25.455844122715714], BigInt[2493,3721], BigFloat[-10.,-8.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[54], BigFloat[18.])
        @checkequals(BigInt[74], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[83], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[74], BigFloat[48.])
        @checkequals(BigInt[], BigFloat[], BigInt[166], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[83], BigFloat[18.])
        @checkequals(BigInt[], BigFloat[], BigInt[175], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[281], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[166], BigFloat[48.])
        @checkequals(BigInt[282], BigFloat[-25.455844122715714], BigInt[412], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[281], BigFloat[18.])
        @checkequals(BigInt[], BigFloat[], BigInt[421], BigFloat[6], BigInt[282], BigFloat[-18.])
        @checkequals(BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[272,273,275,276,650,898], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[728,729], BigFloat[33.941125496954285,-33.941125496954285], BigInt[272,273,275,276,653,899], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[1762], BigFloat[25.455844122715714], BigInt[281], BigFloat[25.455844122715714], BigInt[731,732], BigFloat[-24.,24.])
        @checkequals(BigInt[1764], BigFloat[-25.455844122715714], BigInt[282], BigFloat[25.455844122715714], BigInt[728,729], BigFloat[24.,-24.])
        @checkequals(BigInt[], BigFloat[], BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[1762], BigFloat[18.])
        @checkequals(BigInt[], BigFloat[], BigInt[457,646], BigFloat[14.142135623730951,11.313708498984761], BigInt[1764], BigFloat[-18.])
        @checkequals(BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[854,855,857,858,1904,2152], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[3788,3789], BigFloat[33.941125496954285,-33.941125496954285], BigInt[854,855,857,858,1907,2153], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[83], BigFloat[6], BigInt[863], BigFloat[25.455844122715714], BigInt[3790,3791], BigFloat[-24.,24.])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[864], BigFloat[25.455844122715714], BigInt[3788,3789], BigFloat[24.,-24.])
        @checkequals(BigInt[], BigFloat[], BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[57,59], BigFloat[10.,8.])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[1165,1900], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4], BigInt[74], BigFloat[48.])
        @checkequals(BigInt[175], BigFloat[8.485281374238571], BigInt[281], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[282], BigFloat[25.455844122715714], BigInt[83], BigFloat[6])
        @checkequals(BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[92,151], BigFloat[10.,8.])
        @checkequals(BigInt[457,646], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[166], BigFloat[48.])
        @checkequals(BigInt[728,729], BigFloat[33.941125496954285,-33.941125496954285], BigInt[728,729], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[863], BigFloat[8.485281374238571], BigInt[863], BigFloat[25.455844122715714], BigInt[175], BigFloat[6.])
        @checkequals(BigInt[864], BigFloat[-8.485281374238571], BigInt[864], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[456,640], BigFloat[10.,8.])
        @checkequals(BigInt[2493,3721], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[], BigFloat[], BigInt[457,646], BigFloat[-10.,-8.])
        @checkequals(BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[731,732], BigFloat[-24.,24.])
        @checkequals(BigInt[3788,3789], BigFloat[33.941125496954285,-33.941125496954285], BigInt[1982,1983], BigFloat[-33.941125496954285,33.941125496954285], BigInt[728,729], BigFloat[24.,-24.])
        @checkequals(BigInt[4270], BigFloat[8.485281374238571], BigInt[3375], BigFloat[25.455844122715714], BigInt[863], BigFloat[6.])
        @checkequals(BigInt[4272], BigFloat[-8.485281374238571], BigInt[], BigFloat[], BigInt[864], BigFloat[-6.])
        @checkequals(BigInt[171,172,404,422], BigFloat[-4,-12,8,4], BigInt[], BigFloat[], BigInt[2491,3719], BigFloat[10.,8.])
        @checkequals(BigInt[175], BigFloat[25.455844122715714], BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[2493,3721], BigFloat[-10.,-8.])
        @checkequals(BigInt[], BigFloat[], BigInt[457,646], BigFloat[14.142135623730951,11.313708498984761], BigInt[3790,3791], BigFloat[-24.,24.])
        @checkequals(BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[3788,3789], BigFloat[24.,-24.])
        @checkequals(BigInt[], BigFloat[], BigInt[728,729], BigFloat[-33.941125496954285,33.941125496954285], BigInt[4270], BigFloat[6.])
        @checkequals(BigInt[854,855,857,858,1904,2152], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[863], BigFloat[8.485281374238571], BigInt[4272], BigFloat[-6.])
        @checkequals(BigInt[854,855,857,858,1907,2153], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[864], BigFloat[8.485281374238571], BigInt[79,80,158,176], BigFloat[-4.,-12.,8.,4.])
        @checkequals(BigInt[863], BigFloat[25.455844122715714], BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[864], BigFloat[-25.455844122715714], BigInt[1165,1900], BigFloat[14.142135623730951,11.313708498984761], BigInt[83], BigFloat[18.])
        @checkequals(BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[1165,1900], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[1982,1983], BigFloat[-33.941125496954285,33.941125496954285], BigInt[92,151], BigFloat[10.,8.])
        @checkequals(BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[2117], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[4250,4251,4252,4253,8458,9006], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[2118], BigFloat[8.485281374238571], BigInt[171,172,404,422], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[4270], BigFloat[25.455844122715714], BigInt[4971,6929], BigFloat[14.142135623730951,11.313708498984761], BigInt[175], BigFloat[18.])
        @checkequals(BigInt[4272], BigFloat[-25.455844122715714], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[7288], BigFloat[67.88225099390857], BigInt[205,397], BigFloat[10.,8.])
        @checkequals(BigInt[5463,8440], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[8094], BigFloat[6], BigInt[854,855,857,858,1904,2152], BigFloat[-2.,-2.,6.,-6.,8.,4.])
        @checkequals(BigInt[412], BigFloat[67.88225099390857], BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[854,855,857,858,1907,2153], BigFloat[-6.,6.,2.,2.,-8.,-4.])
        @checkequals(BigInt[], BigFloat[], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[863], BigFloat[18.])
        @checkequals(BigInt[863], BigFloat[25.455844122715714], BigInt[1762], BigFloat[25.455844122715714], BigInt[864], BigFloat[-18.])
        @checkequals(BigInt[864], BigFloat[-25.455844122715714], BigInt[1764], BigFloat[25.455844122715714], BigInt[1164,1894], BigFloat[10.,8.])
        @checkequals(BigInt[], BigFloat[], BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[1165,1900], BigFloat[-10.,-8.])
        @checkequals(BigInt[], BigFloat[], BigInt[2493,3721], BigFloat[14.142135623730951,11.313708498984761], BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.,-2.,6.,-6.,8.,4.])
        @checkequals(BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[4250,4251,4252,4253,8458,9006], BigFloat[-6.,6.,2.,2.,-8.,-4.])
        @checkequals(BigInt[1982,1983], BigFloat[33.941125496954285,-33.941125496954285], BigInt[4250,4251,4252,4253,8458,9006], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[4270], BigFloat[18.])
        @checkequals(BigInt[4270], BigFloat[25.455844122715714], BigInt[4270], BigFloat[25.455844122715714], BigInt[4272], BigFloat[-18.])
        @checkequals(BigInt[4272], BigFloat[-25.455844122715714], BigInt[4272], BigFloat[25.455844122715714], BigInt[5461,8438], BigFloat[10.,8.])
        @checkequals(BigInt[], BigFloat[], BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[5463,8440], BigFloat[-10.,-8.])
        @checkequals(BigInt[], BigFloat[], BigInt[5463,8440], BigFloat[14.142135623730951,11.313708498984761], BigInt[83], BigFloat[18.])
        @checkequals(BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[8507,8508], BigFloat[33.941125496954285,-33.941125496954285], BigInt[14606,14607,14614,14615,26814,29213], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[421], BigFloat[6], BigInt[14640], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[14644], BigFloat[-25.455844122715714], BigInt[166], BigFloat[48.])
        @checkequals(BigInt[1165,1900], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[19060,26796], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[175], BigFloat[18.])
        @checkequals(BigInt[1982,1983], BigFloat[33.941125496954285,-33.941125496954285], BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4], BigInt[], BigFloat[])
        @checkequals(BigInt[2117], BigFloat[8.485281374238571], BigInt[1762], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[2118], BigFloat[-8.485281374238571], BigInt[1764], BigFloat[25.455844122715714], BigInt[412], BigFloat[48.])
        @checkequals(BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[5463,8440], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[], BigFloat[], BigInt[863], BigFloat[18.])
        @checkequals(BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[864], BigFloat[-18.])
        @checkequals(BigInt[8507,8508], BigFloat[33.941125496954285,-33.941125496954285], BigInt[3788,3789], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[8989], BigFloat[8.485281374238571], BigInt[4270], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[8991], BigFloat[-8.485281374238571], BigInt[4272], BigFloat[25.455844122715714], BigInt[1985,1986], BigFloat[-24.,24.])
        @checkequals(BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4], BigInt[], BigFloat[], BigInt[1982,1983], BigFloat[24.,-24.])
        @checkequals(BigInt[3375], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[4270], BigFloat[18.])
        @checkequals(BigInt[], BigFloat[], BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[4272], BigFloat[-18.])
        @checkequals(BigInt[4971,6929], BigFloat[14.142135623730951,11.313708498984761], BigInt[8507,8508], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[14640], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[14644], BigFloat[-25.455844122715714], BigInt[8509,8510], BigFloat[-24.,24.])
        @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[], BigFloat[], BigInt[8507,8508], BigFloat[24.,-24.])
        @checkequals(BigInt[14640], BigFloat[25.455844122715714], BigInt[], BigFloat[], BigInt[92,151], BigFloat[10.,8.])
        @checkequals(BigInt[14644], BigFloat[25.455844122715714], BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[27047,27048], BigFloat[33.941125496954285,-33.941125496954285], BigInt[166], BigFloat[48.])
        @checkequals(BigInt[19060,26796], BigFloat[14.142135623730951,11.313708498984761], BigInt[47981], BigFloat[25.455844122715714], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[175], BigFloat[6.])
        @checkequals(BigInt[7288], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[205,397], BigFloat[10.,8.])
        @checkequals(BigInt[14640], BigFloat[25.455844122715714], BigInt[2493,3721], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[14644], BigFloat[25.455844122715714], BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[412], BigFloat[48.])
        @checkequals(BigInt[], BigFloat[], BigInt[3788,3789], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[4270], BigFloat[8.485281374238571], BigInt[421], BigFloat[6])
        @checkequals(BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[4272], BigFloat[8.485281374238571], BigInt[1164,1894], BigFloat[10.,8.])
        @checkequals(BigInt[27047,27048], BigFloat[-33.941125496954285,33.941125496954285], BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[1165,1900], BigFloat[-10.,-8.])
        @checkequals(BigInt[8094], BigFloat[6], BigInt[5463,8440], BigFloat[14.142135623730951,11.313708498984761], BigInt[1985,1986], BigFloat[-24.,24.])
        @checkequals(BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[1982,1983], BigFloat[24.,-24.])
        @checkequals(BigInt[19060,26796], BigFloat[14.142135623730951,11.313708498984761], BigInt[8507,8508], BigFloat[-33.941125496954285,33.941125496954285], BigInt[2117], BigFloat[6.])
        @checkequals(BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[8989], BigFloat[8.485281374238571], BigInt[2118], BigFloat[-6.])
        @checkequals(BigInt[27047,27048], BigFloat[-33.941125496954285,33.941125496954285], BigInt[8991], BigFloat[8.485281374238571], BigInt[5461,8438], BigFloat[10.,8.])
        @checkequals(BigInt[29083], BigFloat[8.485281374238571], BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[5463,8440], BigFloat[-10.,-8.])
        @checkequals(BigInt[29087], BigFloat[8.485281374238571], BigInt[19060,26796], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[8509,8510], BigFloat[-24.,24.])
        @checkequals(BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4], BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[8507,8508], BigFloat[24.,-24.])
        @checkequals(BigInt[47981], BigFloat[25.455844122715714], BigInt[27047,27048], BigFloat[33.941125496954285,-33.941125496954285], BigInt[8989], BigFloat[6.])
        @checkequals(BigInt[], BigFloat[], BigInt[29083], BigFloat[8.485281374238571], BigInt[8991], BigFloat[-6.])
        @checkequals(BigInt[59062,81360], BigFloat[14.142135623730951,11.313708498984761], BigInt[29087], BigFloat[-8.485281374238571], BigInt[272,273,275,276,650,898], BigFloat[-2.,-2.,6.,-6.,8.,4.])
        @checkequals(BigInt[], BigFloat[], BigInt[59062,81360], BigFloat[14.142135623730951,11.313708498984761], BigInt[272,273,275,276,653,899], BigFloat[6.,-6.,-2.,-2.,8.,4.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[281], BigFloat[18.])
        @checkequals(BigInt[81570], BigFloat[67.88225099390857], BigInt[81570], BigFloat[67.88225099390857], BigInt[282], BigFloat[18.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[456,640], BigFloat[10.,8.])
        @checkequals(BigInt[85993], BigFloat[6], BigInt[85993], BigFloat[6], BigInt[457,646], BigFloat[10.,8.])
        if tri === :F
            @checkequals(BigInt[854,855,857,858,1904,2152], BigFloat[-2.,-2.,6.,-6.,8.,4.])
            @checkequals(BigInt[854,855,857,858,1907,2153], BigFloat[6.,-6.,-2.,-2.,8.,4.])
            @checkequals(BigInt[863], BigFloat[18.])
            @checkequals(BigInt[864], BigFloat[18.])
            @checkequals(BigInt[1164,1894], BigFloat[10.,8.])
            @checkequals(BigInt[1165,1900], BigFloat[10.,8.])
            @checkequals(BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[3375], BigFloat[18.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[4971,6929], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.,-2.,6.,-6.,8.,4.])
            @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[6.,-6.,-2.,-2.,8.,4.])
            @checkequals(BigInt[14640], BigFloat[18.])
            @checkequals(BigInt[14644], BigFloat[18.])
            @checkequals(BigInt[19056,26783], BigFloat[10.,8.])
            @checkequals(BigInt[19060,26796], BigFloat[10.,8.])
            @checkequals(BigInt[281], BigFloat[18.])
            @checkequals(BigInt[282], BigFloat[18.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[731,732], BigFloat[-24.,24.])
            @checkequals(BigInt[728,729], BigFloat[-24.,24.])
            @checkequals(BigInt[863], BigFloat[18.])
            @checkequals(BigInt[864], BigFloat[18.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1985,1986], BigFloat[-24.,24.])
            @checkequals(BigInt[1982,1983], BigFloat[-24.,24.])
            @checkequals(BigInt[3375], BigFloat[18.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[7288], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[14640], BigFloat[18.])
            @checkequals(BigInt[14644], BigFloat[18.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[27055,27056], BigFloat[-24.,24.])
            @checkequals(BigInt[27047,27048], BigFloat[-24.,24.])
            @checkequals(BigInt[456,640], BigFloat[10.,8.])
            @checkequals(BigInt[457,646], BigFloat[10.,8.])
            @checkequals(BigInt[731,732], BigFloat[-24.,24.])
            @checkequals(BigInt[728,729], BigFloat[-24.,24.])
            @checkequals(BigInt[863], BigFloat[6.])
            @checkequals(BigInt[864], BigFloat[6.])
            @checkequals(BigInt[1164,1894], BigFloat[10.,8.])
            @checkequals(BigInt[1165,1900], BigFloat[10.,8.])
            @checkequals(BigInt[1985,1986], BigFloat[-24.,24.])
            @checkequals(BigInt[1982,1983], BigFloat[-24.,24.])
            @checkequals(BigInt[2117], BigFloat[6.])
            @checkequals(BigInt[2118], BigFloat[6.])
            @checkequals(BigInt[4971,6929], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[7288], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[8094], BigFloat[6])
            @checkequals(BigInt[19056,26783], BigFloat[10.,8.])
            @checkequals(BigInt[19060,26796], BigFloat[10.,8.])
            @checkequals(BigInt[27055,27056], BigFloat[-24.,24.])
            @checkequals(BigInt[27047,27048], BigFloat[-24.,24.])
            @checkequals(BigInt[29083], BigFloat[6.])
            @checkequals(BigInt[29087], BigFloat[6.])
            @checkequals(BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.,-2.,6.,-6.,8.,4.])
            @checkequals(BigInt[1742,1743,1744,1745,3739,4287], BigFloat[6.,-6.,-2.,-2.,8.,4.])
            @checkequals(BigInt[1762], BigFloat[18.])
            @checkequals(BigInt[1764], BigFloat[18.])
            @checkequals(BigInt[2491,3719], BigFloat[10.,8.])
            @checkequals(BigInt[2493,3721], BigFloat[10.,8.])
            @checkequals(BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.,-2.,6.,-6.,8.,4.])
            @checkequals(BigInt[4250,4251,4252,4253,8458,9006], BigFloat[6.,-6.,-2.,-2.,8.,4.])
            @checkequals(BigInt[4270], BigFloat[18.])
            @checkequals(BigInt[4272], BigFloat[18.])
            @checkequals(BigInt[5461,8438], BigFloat[10.,8.])
            @checkequals(BigInt[5463,8440], BigFloat[10.,8.])
            @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.,-2.,6.,-6.,8.,4.])
            @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[-6.,6.,2.,2.,-8.,-4.])
            @checkequals(BigInt[14640], BigFloat[18.])
            @checkequals(BigInt[14644], BigFloat[-18.])
            @checkequals(BigInt[19056,26783], BigFloat[10.,8.])
            @checkequals(BigInt[19060,26796], BigFloat[-10.,-8.])
            @checkequals(BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[47981], BigFloat[18.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[59062,81360], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1762], BigFloat[18.])
            @checkequals(BigInt[1764], BigFloat[18.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[3790,3791], BigFloat[-24.,24.])
            @checkequals(BigInt[3788,3789], BigFloat[-24.,24.])
            @checkequals(BigInt[4270], BigFloat[18.])
            @checkequals(BigInt[4272], BigFloat[18.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[8509,8510], BigFloat[-24.,24.])
            @checkequals(BigInt[8507,8508], BigFloat[-24.,24.])
            @checkequals(BigInt[14640], BigFloat[18.])
            @checkequals(BigInt[14644], BigFloat[-18.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[27055,27056], BigFloat[-24.,24.])
            @checkequals(BigInt[27047,27048], BigFloat[24.,-24.])
            @checkequals(BigInt[47981], BigFloat[18.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[81570], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2491,3719], BigFloat[10.,8.])
            @checkequals(BigInt[2493,3721], BigFloat[10.,8.])
            @checkequals(BigInt[3790,3791], BigFloat[-24.,24.])
            @checkequals(BigInt[3788,3789], BigFloat[-24.,24.])
            @checkequals(BigInt[4270], BigFloat[6.])
            @checkequals(BigInt[4272], BigFloat[6.])
            @checkequals(BigInt[5461,8438], BigFloat[10.,8.])
            @checkequals(BigInt[5463,8440], BigFloat[10.,8.])
            @checkequals(BigInt[8509,8510], BigFloat[-24.,24.])
            @checkequals(BigInt[8507,8508], BigFloat[-24.,24.])
            @checkequals(BigInt[8989], BigFloat[6.])
            @checkequals(BigInt[8991], BigFloat[6.])
            @checkequals(BigInt[19056,26783], BigFloat[10.,8.])
            @checkequals(BigInt[19060,26796], BigFloat[-10.,-8.])
            @checkequals(BigInt[27055,27056], BigFloat[-24.,24.])
            @checkequals(BigInt[27047,27048], BigFloat[24.,-24.])
            @checkequals(BigInt[29083], BigFloat[6.])
            @checkequals(BigInt[29087], BigFloat[-6.])
            @checkequals(BigInt[59062,81360], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[81570], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[85993], BigFloat[6])
        end
        @test isnothing(iter)
    elseif state.instance == 71
        @test dim == 12
        iter = iterate(data)
        @checkequals(BigInt[50,51,66,84], BigFloat[-4,-12,8,4], BigInt[50,51,66,84], BigFloat[-4,-12,8,4], BigInt[50,51,66,84], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[60,66], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[60,66], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[60,66], BigFloat[2.,2.])
        @checkequals(BigInt[57,58,60], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[57,58,60], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[57,58,60], BigFloat[6.,2.,-16.])
        @checkequals(BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[57,59], BigFloat[10.,8.])
        @checkequals(BigInt[], BigFloat[], BigInt[57,59], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[79,80,158,176], BigFloat[-5.656854249492381,-16.970562748477143,11.313708498984761,5.656854249492381], BigInt[], BigFloat[], BigInt[79,80,158,176], BigFloat[-4.,-12.,8.,4.])
        @checkequals(BigInt[], BigFloat[], BigInt[74], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[152,158], BigFloat[2.,2.])
        @checkequals(BigInt[92,150,152], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[83], BigFloat[6], BigInt[92,150,152], BigFloat[6.,2.,-16.])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[79,80,158,176], BigFloat[-5.656854249492381,-16.970562748477143,11.313708498984761,5.656854249492381], BigInt[92,151], BigFloat[10.,8.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[272,273,275,276,650,898], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[272,273,275,276,650,898], BigFloat[-2.,-2.,6.,-6.,8.,4.])
        @checkequals(BigInt[272,273,275,276,653,899], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[92,150,152], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[272,273,275,276,653,899], BigFloat[-6.,6.,2.,2.,-8.,-4.])
        @checkequals(BigInt[457,639,641,647,650], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[457,639,641,647,650], BigFloat[6.,8.,-8.,2.,2.])
        @checkequals(BigInt[456,639,645,647,653], BigFloat[8.485281374238571,2.8284271247461903,11.313708498984761,-11.313708498984761,-2.8284271247461903], BigInt[], BigFloat[], BigInt[456,639,645,647,653], BigFloat[6.,2.,8.,-8.,-2.])
        @checkequals(BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[171,172,404,422], BigFloat[-4,-12,8,4], BigInt[456,640], BigFloat[10.,8.])
        @checkequals(BigInt[457,646], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[457,646], BigFloat[-10.,-8.])
        @checkequals(BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[92,150,152], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.,-2.,6.,-6.,8.,4.])
        @checkequals(BigInt[1742,1743,1744,1745,3739,4287], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[], BigFloat[], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[-6.,6.,2.,2.,-8.,-4.])
        @checkequals(BigInt[2493,3718,3720,3722,3737], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[2493,3718,3720,3722,3737], BigFloat[6.,8.,-8.,2.,2.])
        @checkequals(BigInt[2491,3718,3722,3739], BigFloat[8.485281374238571,2.8284271247461903,-11.313708498984761,-2.8284271247461903], BigInt[166], BigFloat[67.88225099390857], BigInt[2491,3718,3722,3739], BigFloat[6.,2.,-8.,-2.])
        @checkequals(BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[2491,3719], BigFloat[10.,8.])
        @checkequals(BigInt[2493,3721], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[398,404], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[2493,3721], BigFloat[-10.,-8.])
        @checkequals(BigInt[], BigFloat[], BigInt[205,396,398], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[60,66], BigFloat[2.,2.])
        @checkequals(BigInt[74], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[57,58,60], BigFloat[-6.,-2.,16.])
        @checkequals(BigInt[], BigFloat[], BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[152,158], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[74], BigFloat[48.])
        @checkequals(BigInt[92,150,152], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[166], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[152,158], BigFloat[2.,2.])
        @checkequals(BigInt[], BigFloat[], BigInt[175], BigFloat[8.485281374238571], BigInt[92,150,152], BigFloat[-6.,-2.,16.])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[457,639,641,645,650], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,-2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[166], BigFloat[48.])
        @checkequals(BigInt[456,641,645,647,653], BigFloat[-8.485281374238571,-2.8284271247461903,-11.313708498984761,11.313708498984761,-2.8284271247461903], BigInt[412], BigFloat[67.88225099390857], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[457,639,641,645,650], BigFloat[-6.,-8.,8.,-2.,2.])
        @checkequals(BigInt[], BigFloat[], BigInt[421], BigFloat[6], BigInt[456,641,645,647,653], BigFloat[-6.,-2.,-8.,8.,-2.])
        @checkequals(BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[272,273,275,276,650,898], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[728,729], BigFloat[33.941125496954285,-33.941125496954285], BigInt[272,273,275,276,653,899], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[2493,3718,3720,3737], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[457,639,641,645,650], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,-2.8284271247461903,2.8284271247461903], BigInt[731,732], BigFloat[-24.,24.])
        @checkequals(BigInt[2491,3720,3722,3739], BigFloat[-8.485281374238571,-2.8284271247461903,11.313708498984761,-2.8284271247461903], BigInt[456,641,645,647,653], BigFloat[8.485281374238571,2.8284271247461903,11.313708498984761,-11.313708498984761,2.8284271247461903], BigInt[728,729], BigFloat[24.,-24.])
        @checkequals(BigInt[], BigFloat[], BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[2493,3718,3720,3737], BigFloat[-6.,-8.,8.,2.])
        @checkequals(BigInt[], BigFloat[], BigInt[457,646], BigFloat[14.142135623730951,11.313708498984761], BigInt[2491,3720,3722,3739], BigFloat[-6.,-2.,8.,-2.])
        @checkequals(BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[854,855,857,858,1904,2152], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[3788,3789], BigFloat[33.941125496954285,-33.941125496954285], BigInt[854,855,857,858,1907,2153], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[83], BigFloat[6], BigInt[1165,1893,1895,1899,1904], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,-2.8284271247461903,2.8284271247461903], BigInt[3790,3791], BigFloat[-24.,24.])
        @checkequals(BigInt[92,151], BigFloat[14.142135623730951,11.313708498984761], BigInt[1164,1895,1899,1901,1907], BigFloat[8.485281374238571,2.8284271247461903,11.313708498984761,-11.313708498984761,2.8284271247461903], BigInt[3788,3789], BigFloat[24.,-24.])
        @checkequals(BigInt[], BigFloat[], BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[57,59], BigFloat[10.,8.])
        @checkequals(BigInt[166], BigFloat[67.88225099390857], BigInt[1165,1900], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4], BigInt[74], BigFloat[48.])
        @checkequals(BigInt[175], BigFloat[8.485281374238571], BigInt[457,639,641,647,650], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[456,639,645,647,653], BigFloat[-8.485281374238571,-2.8284271247461903,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[83], BigFloat[6])
        @checkequals(BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[92,151], BigFloat[10.,8.])
        @checkequals(BigInt[457,646], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[166], BigFloat[48.])
        @checkequals(BigInt[728,729], BigFloat[33.941125496954285,-33.941125496954285], BigInt[728,729], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[863], BigFloat[8.485281374238571], BigInt[1165,1893,1895,1901,1904], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[175], BigFloat[6.])
        @checkequals(BigInt[864], BigFloat[-8.485281374238571], BigInt[1164,1893,1899,1901,1907], BigFloat[-8.485281374238571,-2.8284271247461903,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[456,640], BigFloat[10.,8.])
        @checkequals(BigInt[2493,3721], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[], BigFloat[], BigInt[457,646], BigFloat[-10.,-8.])
        @checkequals(BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[731,732], BigFloat[-24.,24.])
        @checkequals(BigInt[3788,3789], BigFloat[33.941125496954285,-33.941125496954285], BigInt[1982,1983], BigFloat[-33.941125496954285,33.941125496954285], BigInt[728,729], BigFloat[24.,-24.])
        @checkequals(BigInt[4270], BigFloat[8.485281374238571], BigInt[6930,6939], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[863], BigFloat[6.])
        @checkequals(BigInt[4272], BigFloat[-8.485281374238571], BigInt[4971,6928,6930], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[864], BigFloat[-6.])
        @checkequals(BigInt[171,172,404,422], BigFloat[-4,-12,8,4], BigInt[], BigFloat[], BigInt[2491,3719], BigFloat[10.,8.])
        @checkequals(BigInt[398,404], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[456,640], BigFloat[14.142135623730951,11.313708498984761], BigInt[2493,3721], BigFloat[-10.,-8.])
        @checkequals(BigInt[205,396,398], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[457,646], BigFloat[14.142135623730951,11.313708498984761], BigInt[3790,3791], BigFloat[-24.,24.])
        @checkequals(BigInt[205,397], BigFloat[14.142135623730951,11.313708498984761], BigInt[731,732], BigFloat[-33.941125496954285,33.941125496954285], BigInt[3788,3789], BigFloat[24.,-24.])
        @checkequals(BigInt[], BigFloat[], BigInt[728,729], BigFloat[-33.941125496954285,33.941125496954285], BigInt[4270], BigFloat[6.])
        @checkequals(BigInt[854,855,857,858,1904,2152], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[863], BigFloat[8.485281374238571], BigInt[4272], BigFloat[-6.])
        @checkequals(BigInt[854,855,857,858,1907,2153], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[864], BigFloat[8.485281374238571], BigInt[79,80,158,176], BigFloat[-4.,-12.,8.,4.])
        @checkequals(BigInt[1165,1893,1895,1901,1904], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[1164,1893,1899,1901,1907], BigFloat[8.485281374238571,2.8284271247461903,11.313708498984761,-11.313708498984761,-2.8284271247461903], BigInt[1165,1900], BigFloat[14.142135623730951,11.313708498984761], BigInt[152,158], BigFloat[2.,2.])
        @checkequals(BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[92,150,152], BigFloat[6.,2.,-16.])
        @checkequals(BigInt[1165,1900], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[1982,1983], BigFloat[-33.941125496954285,33.941125496954285], BigInt[92,151], BigFloat[10.,8.])
        @checkequals(BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[2117], BigFloat[8.485281374238571], BigInt[], BigFloat[])
        @checkequals(BigInt[4250,4251,4252,4253,8458,9006], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[2118], BigFloat[8.485281374238571], BigInt[171,172,404,422], BigFloat[-4,-12,8,4])
        @checkequals(BigInt[5463,8437,8439,8441,8456], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[4971,6929], BigFloat[14.142135623730951,11.313708498984761], BigInt[398,404], BigFloat[2.,2.])
        @checkequals(BigInt[5461,8437,8441,8458], BigFloat[8.485281374238571,2.8284271247461903,-11.313708498984761,-2.8284271247461903], BigInt[], BigFloat[], BigInt[205,396,398], BigFloat[6.,2.,-16.])
        @checkequals(BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[7288], BigFloat[67.88225099390857], BigInt[205,397], BigFloat[10.,8.])
        @checkequals(BigInt[5463,8440], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[8094], BigFloat[6], BigInt[854,855,857,858,1904,2152], BigFloat[-2.,-2.,6.,-6.,8.,4.])
        @checkequals(BigInt[412], BigFloat[67.88225099390857], BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[854,855,857,858,1907,2153], BigFloat[-6.,6.,2.,2.,-8.,-4.])
        @checkequals(BigInt[], BigFloat[], BigInt[1742,1743,1744,1745,3739,4287], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[1165,1893,1895,1901,1904], BigFloat[6.,8.,-8.,2.,2.])
        @checkequals(BigInt[1165,1893,1895,1899,1904], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,-2.8284271247461903,2.8284271247461903], BigInt[2493,3718,3720,3737], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[1164,1893,1899,1901,1907], BigFloat[6.,2.,8.,-8.,-2.])
        @checkequals(BigInt[1164,1895,1899,1901,1907], BigFloat[-8.485281374238571,-2.8284271247461903,-11.313708498984761,11.313708498984761,-2.8284271247461903], BigInt[2491,3720,3722,3739], BigFloat[8.485281374238571,2.8284271247461903,-11.313708498984761,2.8284271247461903], BigInt[1164,1894], BigFloat[10.,8.])
        @checkequals(BigInt[], BigFloat[], BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[1165,1900], BigFloat[-10.,-8.])
        @checkequals(BigInt[], BigFloat[], BigInt[2493,3721], BigFloat[14.142135623730951,11.313708498984761], BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.,-2.,6.,-6.,8.,4.])
        @checkequals(BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[4250,4251,4252,4253,8458,9006], BigFloat[-6.,6.,2.,2.,-8.,-4.])
        @checkequals(BigInt[1982,1983], BigFloat[33.941125496954285,-33.941125496954285], BigInt[4250,4251,4252,4253,8458,9006], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[5463,8437,8439,8441,8456], BigFloat[6.,8.,-8.,2.,2.])
        @checkequals(BigInt[5463,8437,8439,8456], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[5463,8437,8439,8456], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[5461,8437,8441,8458], BigFloat[6.,2.,-8.,-2.])
        @checkequals(BigInt[5461,8439,8441,8458], BigFloat[-8.485281374238571,-2.8284271247461903,11.313708498984761,-2.8284271247461903], BigInt[5461,8439,8441,8458], BigFloat[8.485281374238571,2.8284271247461903,-11.313708498984761,2.8284271247461903], BigInt[5461,8438], BigFloat[10.,8.])
        @checkequals(BigInt[], BigFloat[], BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[5463,8440], BigFloat[-10.,-8.])
        @checkequals(BigInt[], BigFloat[], BigInt[5463,8440], BigFloat[14.142135623730951,11.313708498984761], BigInt[152,158], BigFloat[2.,2.])
        @checkequals(BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[92,150,152], BigFloat[-6.,-2.,16.])
        @checkequals(BigInt[8507,8508], BigFloat[33.941125496954285,-33.941125496954285], BigInt[14606,14607,14614,14615,26814,29213], BigFloat[-8.485281374238571,8.485281374238571,2.8284271247461903,2.8284271247461903,-11.313708498984761,-5.656854249492381], BigInt[], BigFloat[])
        @checkequals(BigInt[421], BigFloat[6], BigInt[19060,26782,26784,26797,26806], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[1164,1894], BigFloat[14.142135623730951,11.313708498984761], BigInt[19056,26782,26795,26797,26814], BigFloat[8.485281374238571,2.8284271247461903,11.313708498984761,-11.313708498984761,-2.8284271247461903], BigInt[166], BigFloat[48.])
        @checkequals(BigInt[1165,1900], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[1985,1986], BigFloat[-33.941125496954285,33.941125496954285], BigInt[19060,26796], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[398,404], BigFloat[2.,2.])
        @checkequals(BigInt[1982,1983], BigFloat[33.941125496954285,-33.941125496954285], BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4], BigInt[205,396,398], BigFloat[-6.,-2.,16.])
        @checkequals(BigInt[2117], BigFloat[8.485281374238571], BigInt[2493,3718,3720,3722,3737], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[2118], BigFloat[-8.485281374238571], BigInt[2491,3718,3722,3739], BigFloat[-8.485281374238571,-2.8284271247461903,11.313708498984761,2.8284271247461903], BigInt[412], BigFloat[48.])
        @checkequals(BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[5463,8440], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[], BigFloat[], BigInt[1165,1893,1895,1899,1904], BigFloat[-6.,-8.,8.,-2.,2.])
        @checkequals(BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[1164,1895,1899,1901,1907], BigFloat[-6.,-2.,-8.,8.,-2.])
        @checkequals(BigInt[8507,8508], BigFloat[33.941125496954285,-33.941125496954285], BigInt[3788,3789], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[8989], BigFloat[8.485281374238571], BigInt[5463,8437,8439,8441,8456], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[8991], BigFloat[-8.485281374238571], BigInt[5461,8437,8441,8458], BigFloat[-8.485281374238571,-2.8284271247461903,11.313708498984761,2.8284271247461903], BigInt[1985,1986], BigFloat[-24.,24.])
        @checkequals(BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4], BigInt[], BigFloat[], BigInt[1982,1983], BigFloat[24.,-24.])
        @checkequals(BigInt[6930,6939], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[5463,8437,8439,8456], BigFloat[-6.,-8.,8.,2.])
        @checkequals(BigInt[4971,6928,6930], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[5461,8439,8441,8458], BigFloat[-6.,-2.,8.,-2.])
        @checkequals(BigInt[4971,6929], BigFloat[14.142135623730951,11.313708498984761], BigInt[8507,8508], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[19060,26782,26784,26795,26806], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,-2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.8284271247461903,-2.8284271247461903,8.485281374238571,-8.485281374238571,11.313708498984761,5.656854249492381], BigInt[19056,26784,26795,26797,26814], BigFloat[-8.485281374238571,-2.8284271247461903,-11.313708498984761,11.313708498984761,-2.8284271247461903], BigInt[8509,8510], BigFloat[-24.,24.])
        @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[8.485281374238571,-8.485281374238571,-2.8284271247461903,-2.8284271247461903,11.313708498984761,5.656854249492381], BigInt[], BigFloat[], BigInt[8507,8508], BigFloat[24.,-24.])
        @checkequals(BigInt[19060,26782,26784,26795,26806], BigFloat[-8.485281374238571,-11.313708498984761,11.313708498984761,-2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[], BigInt[92,151], BigFloat[10.,8.])
        @checkequals(BigInt[19056,26784,26795,26797,26814], BigFloat[8.485281374238571,2.8284271247461903,11.313708498984761,-11.313708498984761,2.8284271247461903], BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[27047,27048], BigFloat[33.941125496954285,-33.941125496954285], BigInt[166], BigFloat[48.])
        @checkequals(BigInt[19060,26796], BigFloat[14.142135623730951,11.313708498984761], BigInt[81361,81393], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[59062,81359,81361], BigFloat[-8.485281374238571,-2.8284271247461903,22.627416997969522], BigInt[175], BigFloat[6.])
        @checkequals(BigInt[7288], BigFloat[67.88225099390857], BigInt[], BigFloat[], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[2491,3719], BigFloat[14.142135623730951,11.313708498984761], BigInt[205,397], BigFloat[10.,8.])
        @checkequals(BigInt[19060,26782,26784,26797,26806], BigFloat[8.485281374238571,11.313708498984761,-11.313708498984761,2.8284271247461903,2.8284271247461903], BigInt[2493,3721], BigFloat[14.142135623730951,11.313708498984761], BigInt[], BigFloat[])
        @checkequals(BigInt[19056,26782,26795,26797,26814], BigFloat[-8.485281374238571,-2.8284271247461903,-11.313708498984761,11.313708498984761,2.8284271247461903], BigInt[3790,3791], BigFloat[-33.941125496954285,33.941125496954285], BigInt[412], BigFloat[48.])
        @checkequals(BigInt[], BigFloat[], BigInt[3788,3789], BigFloat[-33.941125496954285,33.941125496954285], BigInt[], BigFloat[])
        @checkequals(BigInt[], BigFloat[], BigInt[4270], BigFloat[8.485281374238571], BigInt[421], BigFloat[6])
        @checkequals(BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[4272], BigFloat[8.485281374238571], BigInt[1164,1894], BigFloat[10.,8.])
        @checkequals(BigInt[27047,27048], BigFloat[-33.941125496954285,33.941125496954285], BigInt[5461,8438], BigFloat[14.142135623730951,11.313708498984761], BigInt[1165,1900], BigFloat[-10.,-8.])
        @checkequals(BigInt[8094], BigFloat[6], BigInt[5463,8440], BigFloat[14.142135623730951,11.313708498984761], BigInt[1985,1986], BigFloat[-24.,24.])
        @checkequals(BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[8509,8510], BigFloat[-33.941125496954285,33.941125496954285], BigInt[1982,1983], BigFloat[24.,-24.])
        @checkequals(BigInt[19060,26796], BigFloat[14.142135623730951,11.313708498984761], BigInt[8507,8508], BigFloat[-33.941125496954285,33.941125496954285], BigInt[2117], BigFloat[6.])
        @checkequals(BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[8989], BigFloat[8.485281374238571], BigInt[2118], BigFloat[-6.])
        @checkequals(BigInt[27047,27048], BigFloat[-33.941125496954285,33.941125496954285], BigInt[8991], BigFloat[8.485281374238571], BigInt[5461,8438], BigFloat[10.,8.])
        @checkequals(BigInt[29083], BigFloat[8.485281374238571], BigInt[19056,26783], BigFloat[14.142135623730951,11.313708498984761], BigInt[5463,8440], BigFloat[-10.,-8.])
        @checkequals(BigInt[29087], BigFloat[8.485281374238571], BigInt[19060,26796], BigFloat[-14.142135623730951,-11.313708498984761], BigInt[8509,8510], BigFloat[-24.,24.])
        @checkequals(BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4], BigInt[27055,27056], BigFloat[-33.941125496954285,33.941125496954285], BigInt[8507,8508], BigFloat[24.,-24.])
        @checkequals(BigInt[81361,81393], BigFloat[2.8284271247461903,2.8284271247461903], BigInt[27047,27048], BigFloat[33.941125496954285,-33.941125496954285], BigInt[8989], BigFloat[6.])
        @checkequals(BigInt[59062,81359,81361], BigFloat[8.485281374238571,2.8284271247461903,-22.627416997969522], BigInt[29083], BigFloat[8.485281374238571], BigInt[8991], BigFloat[-6.])
        @checkequals(BigInt[59062,81360], BigFloat[14.142135623730951,11.313708498984761], BigInt[29087], BigFloat[-8.485281374238571], BigInt[272,273,275,276,650,898], BigFloat[-2.,-2.,6.,-6.,8.,4.])
        @checkequals(BigInt[], BigFloat[], BigInt[59062,81360], BigFloat[14.142135623730951,11.313708498984761], BigInt[272,273,275,276,653,899], BigFloat[6.,-6.,-2.,-2.,8.,4.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[457,639,641,645,650], BigFloat[-6.,-8.,8.,-2.,2.])
        @checkequals(BigInt[81570], BigFloat[67.88225099390857], BigInt[81570], BigFloat[67.88225099390857], BigInt[456,641,645,647,653], BigFloat[6.,2.,8.,-8.,2.])
        @checkequals(BigInt[], BigFloat[], BigInt[], BigFloat[], BigInt[456,640], BigFloat[10.,8.])
        @checkequals(BigInt[85993], BigFloat[6], BigInt[85993], BigFloat[6], BigInt[457,646], BigFloat[10.,8.])
        if tri === :F
            @checkequals(BigInt[854,855,857,858,1904,2152], BigFloat[-2.,-2.,6.,-6.,8.,4.])
            @checkequals(BigInt[854,855,857,858,1907,2153], BigFloat[6.,-6.,-2.,-2.,8.,4.])
            @checkequals(BigInt[1165,1893,1895,1899,1904], BigFloat[-6.,-8.,8.,-2.,2.])
            @checkequals(BigInt[1164,1895,1899,1901,1907], BigFloat[6.,2.,8.,-8.,2.])
            @checkequals(BigInt[1164,1894], BigFloat[10.,8.])
            @checkequals(BigInt[1165,1900], BigFloat[10.,8.])
            @checkequals(BigInt[3360,3361,6939,8304], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[6930,6939], BigFloat[2.,2.])
            @checkequals(BigInt[4971,6928,6930], BigFloat[6.,2.,-16.])
            @checkequals(BigInt[4971,6929], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.,-2.,6.,-6.,8.,4.])
            @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[6.,-6.,-2.,-2.,8.,4.])
            @checkequals(BigInt[19060,26782,26784,26795,26806], BigFloat[-6.,-8.,8.,-2.,2.])
            @checkequals(BigInt[19056,26784,26795,26797,26814], BigFloat[6.,2.,8.,-8.,2.])
            @checkequals(BigInt[19056,26783], BigFloat[10.,8.])
            @checkequals(BigInt[19060,26796], BigFloat[10.,8.])
            @checkequals(BigInt[457,639,641,647,650], BigFloat[6.,8.,-8.,2.,2.])
            @checkequals(BigInt[456,639,645,647,653], BigFloat[-6.,-2.,-8.,8.,2.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[731,732], BigFloat[-24.,24.])
            @checkequals(BigInt[728,729], BigFloat[-24.,24.])
            @checkequals(BigInt[1165,1893,1895,1901,1904], BigFloat[6.,8.,-8.,2.,2.])
            @checkequals(BigInt[1164,1893,1899,1901,1907], BigFloat[-6.,-2.,-8.,8.,2.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[1985,1986], BigFloat[-24.,24.])
            @checkequals(BigInt[1982,1983], BigFloat[-24.,24.])
            @checkequals(BigInt[6930,6939], BigFloat[2.,2.])
            @checkequals(BigInt[4971,6928,6930], BigFloat[-6.,-2.,16.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[7288], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[19060,26782,26784,26797,26806], BigFloat[6.,8.,-8.,2.,2.])
            @checkequals(BigInt[19056,26782,26795,26797,26814], BigFloat[-6.,-2.,-8.,8.,2.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[27055,27056], BigFloat[-24.,24.])
            @checkequals(BigInt[27047,27048], BigFloat[-24.,24.])
            @checkequals(BigInt[456,640], BigFloat[10.,8.])
            @checkequals(BigInt[457,646], BigFloat[10.,8.])
            @checkequals(BigInt[731,732], BigFloat[-24.,24.])
            @checkequals(BigInt[728,729], BigFloat[-24.,24.])
            @checkequals(BigInt[863], BigFloat[6.])
            @checkequals(BigInt[864], BigFloat[6.])
            @checkequals(BigInt[1164,1894], BigFloat[10.,8.])
            @checkequals(BigInt[1165,1900], BigFloat[10.,8.])
            @checkequals(BigInt[1985,1986], BigFloat[-24.,24.])
            @checkequals(BigInt[1982,1983], BigFloat[-24.,24.])
            @checkequals(BigInt[2117], BigFloat[6.])
            @checkequals(BigInt[2118], BigFloat[6.])
            @checkequals(BigInt[4971,6929], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[7288], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[8094], BigFloat[6])
            @checkequals(BigInt[19056,26783], BigFloat[10.,8.])
            @checkequals(BigInt[19060,26796], BigFloat[10.,8.])
            @checkequals(BigInt[27055,27056], BigFloat[-24.,24.])
            @checkequals(BigInt[27047,27048], BigFloat[-24.,24.])
            @checkequals(BigInt[29083], BigFloat[6.])
            @checkequals(BigInt[29087], BigFloat[6.])
            @checkequals(BigInt[1742,1743,1744,1745,3737,4285], BigFloat[-2.,-2.,6.,-6.,8.,4.])
            @checkequals(BigInt[1742,1743,1744,1745,3739,4287], BigFloat[6.,-6.,-2.,-2.,8.,4.])
            @checkequals(BigInt[2493,3718,3720,3737], BigFloat[-6.,-8.,8.,2.])
            @checkequals(BigInt[2491,3720,3722,3739], BigFloat[6.,2.,-8.,2.])
            @checkequals(BigInt[2491,3719], BigFloat[10.,8.])
            @checkequals(BigInt[2493,3721], BigFloat[10.,8.])
            @checkequals(BigInt[4250,4251,4252,4253,8456,9004], BigFloat[-2.,-2.,6.,-6.,8.,4.])
            @checkequals(BigInt[4250,4251,4252,4253,8458,9006], BigFloat[6.,-6.,-2.,-2.,8.,4.])
            @checkequals(BigInt[5463,8437,8439,8456], BigFloat[-6.,-8.,8.,2.])
            @checkequals(BigInt[5461,8439,8441,8458], BigFloat[6.,2.,-8.,2.])
            @checkequals(BigInt[5461,8438], BigFloat[10.,8.])
            @checkequals(BigInt[5463,8440], BigFloat[10.,8.])
            @checkequals(BigInt[14606,14607,14614,14615,26806,29209], BigFloat[-2.,-2.,6.,-6.,8.,4.])
            @checkequals(BigInt[14606,14607,14614,14615,26814,29213], BigFloat[-6.,6.,2.,2.,-8.,-4.])
            @checkequals(BigInt[19060,26782,26784,26797,26806], BigFloat[6.,8.,-8.,2.,2.])
            @checkequals(BigInt[19056,26782,26795,26797,26814], BigFloat[6.,2.,8.,-8.,-2.])
            @checkequals(BigInt[19056,26783], BigFloat[10.,8.])
            @checkequals(BigInt[19060,26796], BigFloat[-10.,-8.])
            @checkequals(BigInt[47925,47926,81393,86063], BigFloat[-4,-12,8,4])
            @checkequals(BigInt[81361,81393], BigFloat[2.,2.])
            @checkequals(BigInt[59062,81359,81361], BigFloat[6.,2.,-16.])
            @checkequals(BigInt[59062,81360], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2493,3718,3720,3722,3737], BigFloat[6.,8.,-8.,2.,2.])
            @checkequals(BigInt[2491,3718,3722,3739], BigFloat[-6.,-2.,8.,2.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[3790,3791], BigFloat[-24.,24.])
            @checkequals(BigInt[3788,3789], BigFloat[-24.,24.])
            @checkequals(BigInt[5463,8437,8439,8441,8456], BigFloat[6.,8.,-8.,2.,2.])
            @checkequals(BigInt[5461,8437,8441,8458], BigFloat[-6.,-2.,8.,2.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[8509,8510], BigFloat[-24.,24.])
            @checkequals(BigInt[8507,8508], BigFloat[-24.,24.])
            @checkequals(BigInt[19060,26782,26784,26795,26806], BigFloat[-6.,-8.,8.,-2.,2.])
            @checkequals(BigInt[19056,26784,26795,26797,26814], BigFloat[-6.,-2.,-8.,8.,-2.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[27055,27056], BigFloat[-24.,24.])
            @checkequals(BigInt[27047,27048], BigFloat[24.,-24.])
            @checkequals(BigInt[81361,81393], BigFloat[2.,2.])
            @checkequals(BigInt[59062,81359,81361], BigFloat[-6.,-2.,16.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[81570], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[2491,3719], BigFloat[10.,8.])
            @checkequals(BigInt[2493,3721], BigFloat[10.,8.])
            @checkequals(BigInt[3790,3791], BigFloat[-24.,24.])
            @checkequals(BigInt[3788,3789], BigFloat[-24.,24.])
            @checkequals(BigInt[4270], BigFloat[6.])
            @checkequals(BigInt[4272], BigFloat[6.])
            @checkequals(BigInt[5461,8438], BigFloat[10.,8.])
            @checkequals(BigInt[5463,8440], BigFloat[10.,8.])
            @checkequals(BigInt[8509,8510], BigFloat[-24.,24.])
            @checkequals(BigInt[8507,8508], BigFloat[-24.,24.])
            @checkequals(BigInt[8989], BigFloat[6.])
            @checkequals(BigInt[8991], BigFloat[6.])
            @checkequals(BigInt[19056,26783], BigFloat[10.,8.])
            @checkequals(BigInt[19060,26796], BigFloat[-10.,-8.])
            @checkequals(BigInt[27055,27056], BigFloat[-24.,24.])
            @checkequals(BigInt[27047,27048], BigFloat[24.,-24.])
            @checkequals(BigInt[29083], BigFloat[6.])
            @checkequals(BigInt[29087], BigFloat[-6.])
            @checkequals(BigInt[59062,81360], BigFloat[10.,8.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[81570], BigFloat[48.])
            @checkequals(BigInt[], BigFloat[])
            @checkequals(BigInt[85993], BigFloat[6])
        end
        @test isnothing(iter)
    else
        @test false
    end
end

function add_constr_psd_complex_worker!(state::SolverSetup{false,false,<:Any,true,false}, dim::Int, ::PSDIndextypeMatrixCartesian{tri,17}, data::PSDMatrixCartesian{BigInt,Complex{BigFloat}}) where {tri}
    @test state.lastcall === :none
    state.lastcall = :psdc
    if state.instance == 27
        @test dim == 2
        iter = iterate(data)
        @checkequals(20830, [17], [17], Complex{BigFloat}[Complex(BigFloat(17), BigFloat(0))])
        @checkequals(22409, [18], [17], Complex{BigFloat}[Complex(BigFloat(17), BigFloat(0))])
        @checkequals(22410, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(17))])
        @checkequals(23048, [18], [18], Complex{BigFloat}[Complex(BigFloat(17), BigFloat(0))])
        @test isnothing(iter)
    elseif state.instance == 30
        @test dim == 2
        iter = iterate(data)
        @checkequals(17744, [17], [17], Complex{BigFloat}[Complex(BigFloat(24), BigFloat(0))])
        @checkequals(20571, [18], [17], Complex{BigFloat}[Complex(BigFloat(24), BigFloat(0))])
        @checkequals(20574, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(24))])
        @checkequals(21922, [18], [18], Complex{BigFloat}[Complex(BigFloat(24), BigFloat(0))])
        @test isnothing(iter)
    elseif state.instance == 33
        @test dim == 2
        iter = iterate(data)
        @checkequals(5672, [17], [17], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(0))])
        @checkequals(6102, [18], [17], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(0))])
        @checkequals(6103, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(2))])
        @checkequals(6223, [18], [18], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(0))])
        @checkequals(17777, [17], [17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(20588, [18], [17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(20589, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(8))])
        @checkequals(21928, [18], [18], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @test isnothing(iter)
    elseif state.instance == 36
        @test dim == 2
        iter = iterate(data)
        @checkequals(4699, [17], [17], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(5542, [18], [17], Complex{BigFloat}[Complex(BigFloat(3), BigFloat(0))])
        @checkequals(5545, [18], [17], Complex{BigFloat}[Complex(BigFloat(3), BigFloat(0))])
        @checkequals(5546, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(3))])
        @checkequals(5815, [18], [18], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @test isnothing(iter)
    elseif state.instance == 39
        @test dim == 2
        iter = iterate(data)
        @checkequals(17502, [17], [17], Complex{BigFloat}[Complex(BigFloat(14), BigFloat(0))])
        @checkequals(20154, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-7))])
        @checkequals(20162, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(7))])
        @checkequals(20164, [18], [17], Complex{BigFloat}[Complex(BigFloat(-7), BigFloat(0))])
        @checkequals(20168, [18], [17], Complex{BigFloat}[Complex(BigFloat(7), BigFloat(0))])
        @checkequals(21232, [18], [18], Complex{BigFloat}[Complex(BigFloat(14), BigFloat(0))])
        @test isnothing(iter)
    elseif state.instance == 42
        @test dim == 2
        iter = iterate(data)
        @checkequals(4699, [17], [17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(4702, [17], [17], Complex{BigFloat}[Complex(BigFloat(16), BigFloat(0))])
        @checkequals(5542, [18], [17], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(-8))])
        @checkequals(5545, [18], [17], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(8))])
        @checkequals(5546, [18], [17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(4))])
        @checkequals(5672, [17], [17], Complex{BigFloat}[Complex(BigFloat(3), BigFloat(0))])
        @checkequals(5815, [18], [18], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(5816, [18], [18], Complex{BigFloat}[Complex(BigFloat(16), BigFloat(0))])
        @checkequals(6102, [18], [17], Complex{BigFloat}[Complex(BigFloat(3), BigFloat(0))])
        @checkequals(6103, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(3))])
        @checkequals(6223, [18], [18], Complex{BigFloat}[Complex(BigFloat(3), BigFloat(0))])
        @checkequals(9297, [17], [17], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(10837, [18], [17], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(10843, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(4))])
        @checkequals(11399, [18], [18], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(17496, [17], [17], Complex{BigFloat}[Complex(BigFloat(14), BigFloat(0))])
        @checkequals(17777, [17], [17], Complex{BigFloat}[Complex(BigFloat(5), BigFloat(0))])
        @checkequals(20156, [18], [17], Complex{BigFloat}[Complex(BigFloat(7), BigFloat(0))])
        @checkequals(20166, [18], [17], Complex{BigFloat}[Complex(BigFloat(7), BigFloat(0))])
        @checkequals(20171, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-7))])
        @checkequals(20174, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(7))])
        @checkequals(20588, [18], [17], Complex{BigFloat}[Complex(BigFloat(5), BigFloat(0))])
        @checkequals(20589, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(5))])
        @checkequals(21230, [18], [18], Complex{BigFloat}[Complex(BigFloat(14), BigFloat(0))])
        @checkequals(21928, [18], [18], Complex{BigFloat}[Complex(BigFloat(5), BigFloat(0))])
        @test isnothing(iter)
    elseif state.instance == 47
        @test dim == 2
        iter = iterate(data)
        @checkequals(9460, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(17770, [18], [18], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(31799, [17], [17], Complex{BigFloat}[Complex(BigFloat(17), BigFloat(0))])
        @test isnothing(iter)
    elseif state.instance == 50
        @test dim == 2
        iter = iterate(data)
        @checkequals(9278, [18], [17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(9280, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(8))])
        @checkequals(17770, [18], [18], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(31799, [17], [17], Complex{BigFloat}[Complex(BigFloat(17), BigFloat(0))])
        @test isnothing(iter)
    elseif state.instance == 53
        @test dim == 2
        iter = iterate(data)
        @checkequals(9278, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(9280, [18], [17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(17770, [18], [18], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(31799, [17], [17], Complex{BigFloat}[Complex(BigFloat(17), BigFloat(0))])
        @test isnothing(iter)
    elseif state.instance == 56
        @test dim == 2
        iter = iterate(data)
        @checkequals(9278, [18], [17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(-2))])
        @checkequals(9280, [18], [17], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(8))])
        @checkequals(17770, [18], [18], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(31799, [17], [17], Complex{BigFloat}[Complex(BigFloat(17), BigFloat(0))])
        @test isnothing(iter)
    elseif state.instance == 59
        @test dim == 2
        iter = iterate(data)
        @checkequals(5665, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(3))])
        @checkequals(9278, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(2))])
        @checkequals(9280, [18], [17], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(-16))])
        @checkequals(9297, [18], [17], Complex{BigFloat}[Complex(BigFloat(1), BigFloat(0))])
        @checkequals(9460, [17], [17], Complex{BigFloat}[Complex(BigFloat(5), BigFloat(0))])
        @checkequals(17770, [18], [18], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(31799, [17], [17], Complex{BigFloat}[Complex(BigFloat(17), BigFloat(0))])
        @test isnothing(iter)
    elseif state.instance == 65
        @test dim == 12
        iter = iterate(data)
        @checkequals(50, [17], [17], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(51, [17], [17], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(0))])
        @checkequals(57, [18,19], [17,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(58, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(2))])
        @checkequals(59, [19], [17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(60, [18], [17], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(-16))])
        @checkequals(66, [17,18], [17,17], Complex{BigFloat}[Complex(BigFloat(5), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(74, [19], [18], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0))])
        @checkequals(79, [20], [17], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(80, [20], [17], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(0))])
        @checkequals(83, [19], [19], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(84, [17], [17], Complex{BigFloat}[Complex(BigFloat(3), BigFloat(0))])
        @checkequals(92, [20,20,21,22], [18,19,17,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-6)), Complex(BigFloat(10), BigFloat(0)), Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(150, [20,21], [18,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-2)), Complex(BigFloat(0), BigFloat(2))])
        @checkequals(151, [20,22], [19,17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(8), BigFloat(0))])
        @checkequals(152, [20,21], [18,17], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(16)), Complex(BigFloat(2), BigFloat(-16))])
        @checkequals(158, [20,20,21], [17,18,17], Complex{BigFloat}[Complex(BigFloat(5), BigFloat(0)), Complex(BigFloat(2), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(166, [21,22], [19,18], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0)), Complex(BigFloat(48), BigFloat(0))])
        @checkequals(171, [20], [20], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(172, [20], [20], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(0))])
        @checkequals(175, [22], [19], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(176, [20], [17], Complex{BigFloat}[Complex(BigFloat(3), BigFloat(0))])
        @checkequals(205, [21,22], [20,20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(396, [21], [20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(2))])
        @checkequals(397, [22], [20], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(398, [21], [20], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(-16))])
        @checkequals(404, [20,21], [20,20], Complex{BigFloat}[Complex(BigFloat(5), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(412, [22], [21], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0))])
        @checkequals(421, [22], [22], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(422, [20], [20], Complex{BigFloat}[Complex(BigFloat(3), BigFloat(0))])
        @checkequals(454, [23], [17], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(455, [23], [17], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(0))])
        @checkequals(522, [23,23,24,25], [18,19,17,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-6)), Complex(BigFloat(10), BigFloat(0)), Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(1061, [23,24], [18,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-2)), Complex(BigFloat(0), BigFloat(2))])
        @checkequals(1062, [23,25], [19,17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(8), BigFloat(0))])
        @checkequals(1063, [23,24], [18,17], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(16)), Complex(BigFloat(2), BigFloat(-16))])
        @checkequals(1069, [23,23,24], [17,18,17], Complex{BigFloat}[Complex(BigFloat(5), BigFloat(0)), Complex(BigFloat(2), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(1107, [24,25], [19,18], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0)), Complex(BigFloat(48), BigFloat(0))])
        @checkequals(1162, [23], [20], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(1163, [23], [20], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(0))])
        @checkequals(1166, [25], [19], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(1181, [23], [17], Complex{BigFloat}[Complex(BigFloat(3), BigFloat(0))])
        @checkequals(1286, [23,23,24,25], [21,22,20,20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-6)), Complex(BigFloat(10), BigFloat(0)), Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(2170, [26], [17], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(2171, [26], [17], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(0))])
        @checkequals(2567, [23,24], [21,20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-2)), Complex(BigFloat(0), BigFloat(2))])
        @checkequals(2568, [23,25], [22,20], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(8), BigFloat(0))])
        @checkequals(2569, [23,24], [21,20], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(16)), Complex(BigFloat(2), BigFloat(-16))])
        @checkequals(2575, [23,23,24], [20,21,20], Complex{BigFloat}[Complex(BigFloat(5), BigFloat(0)), Complex(BigFloat(2), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(2613, [24,25], [22,21], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0)), Complex(BigFloat(48), BigFloat(0))])
        @checkequals(2672, [25], [22], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(2687, [23], [20], Complex{BigFloat}[Complex(BigFloat(3), BigFloat(0))])
        @checkequals(2693, [26,26,27,28], [18,19,17,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-6)), Complex(BigFloat(10), BigFloat(0)), Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(4537, [26,27], [18,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-2)), Complex(BigFloat(0), BigFloat(2))])
        @checkequals(4538, [26,28], [19,17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(8), BigFloat(0))])
        @checkequals(4539, [26,27], [18,17], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(16)), Complex(BigFloat(2), BigFloat(-16))])
        @checkequals(4545, [26,26,27], [17,18,17], Complex{BigFloat}[Complex(BigFloat(5), BigFloat(0)), Complex(BigFloat(2), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(4553, [27,28], [19,18], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0)), Complex(BigFloat(48), BigFloat(0))])
        @checkequals(4678, [26], [20], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(4679, [26], [20], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(0))])
        @checkequals(4682, [28], [19], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(4683, [26], [17], Complex{BigFloat}[Complex(BigFloat(3), BigFloat(0))])
        @checkequals(5663, [26,26,27,28], [21,22,20,20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-6)), Complex(BigFloat(10), BigFloat(0)), Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(5813, [23], [23], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(5814, [23], [23], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(0))])
        @checkequals(6223, [24,25], [23,23], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(9256, [26,27], [21,20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-2)), Complex(BigFloat(0), BigFloat(2))])
        @checkequals(9257, [26,28], [22,20], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(8), BigFloat(0))])
        @checkequals(9258, [26,27], [21,20], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(16)), Complex(BigFloat(2), BigFloat(-16))])
        @checkequals(9264, [26,26,27], [20,21,20], Complex{BigFloat}[Complex(BigFloat(5), BigFloat(0)), Complex(BigFloat(2), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(9272, [27,28], [22,21], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0)), Complex(BigFloat(48), BigFloat(0))])
        @checkequals(9401, [28], [22], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(9402, [26], [20], Complex{BigFloat}[Complex(BigFloat(3), BigFloat(0))])
        @checkequals(11398, [24], [23], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(2))])
        @checkequals(11399, [25], [23], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(11400, [24], [23], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(-16))])
        @checkequals(11406, [23,24], [23,23], Complex{BigFloat}[Complex(BigFloat(5), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(11535, [25], [24], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0))])
        @checkequals(11790, [25], [25], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(11860, [23], [23], Complex{BigFloat}[Complex(BigFloat(3), BigFloat(0))])
        @checkequals(20439, [26], [23], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(20440, [26], [23], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(0))])
        @checkequals(22426, [26,26,27,28], [24,25,23,23], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-6)), Complex(BigFloat(10), BigFloat(0)), Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(36377, [26,27], [24,23], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-2)), Complex(BigFloat(0), BigFloat(2))])
        @checkequals(36378, [26,28], [25,23], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(8), BigFloat(0))])
        @checkequals(36379, [26,27], [24,23], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(16)), Complex(BigFloat(2), BigFloat(-16))])
        @checkequals(36385, [26,26,27], [23,24,23], Complex{BigFloat}[Complex(BigFloat(5), BigFloat(0)), Complex(BigFloat(2), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(36423, [27,28], [25,24], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0)), Complex(BigFloat(48), BigFloat(0))])
        @checkequals(36888, [28], [25], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(36903, [26], [23], Complex{BigFloat}[Complex(BigFloat(3), BigFloat(0))])
        @checkequals(55253, [26], [26], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(55254, [26], [26], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(0))])
        @checkequals(63728, [27,28], [26,26], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(92458, [27], [26], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(2))])
        @checkequals(92459, [28], [26], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(92460, [27], [26], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(-16))])
        @checkequals(92466, [26,27], [26,26], Complex{BigFloat}[Complex(BigFloat(5), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(92474, [28], [27], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0))])
        @checkequals(93269, [28], [28], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(93270, [26], [26], Complex{BigFloat}[Complex(BigFloat(3), BigFloat(0))])
        @test isnothing(iter)
    elseif state.instance == 67
        @test dim == 4
        iter = iterate(data)
        @checkequals(50, [17], [17], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(51, [17], [17], Complex{BigFloat}[Complex(BigFloat(-12), BigFloat(0))])
        @checkequals(66, [17], [17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(79, [18], [17], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(80, [18], [17], Complex{BigFloat}[Complex(BigFloat(-12), BigFloat(0))])
        @checkequals(84, [17], [17], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(158, [18], [17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(171, [18], [18], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(172, [18], [18], Complex{BigFloat}[Complex(BigFloat(-12), BigFloat(0))])
        @checkequals(176, [18], [17], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(272, [19], [17], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(-6))])
        @checkequals(273, [19], [17], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(6))])
        @checkequals(275, [19], [17], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(2))])
        @checkequals(276, [19], [17], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(2))])
        @checkequals(404, [18], [18], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(422, [18], [18], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(650, [19], [17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(653, [19], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(854, [19], [18], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(-6))])
        @checkequals(855, [19], [18], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(6))])
        @checkequals(857, [19], [18], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(2))])
        @checkequals(858, [19], [18], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(2))])
        @checkequals(898, [19], [17], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(899, [19], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-4))])
        @checkequals(1742, [20], [17], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(-6))])
        @checkequals(1743, [20], [17], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(6))])
        @checkequals(1744, [20], [17], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(2))])
        @checkequals(1745, [20], [17], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(2))])
        @checkequals(1904, [19], [18], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(1907, [19], [18], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(2152, [19], [18], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(2153, [19], [18], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-4))])
        @checkequals(3360, [19], [19], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(3361, [19], [19], Complex{BigFloat}[Complex(BigFloat(-12), BigFloat(0))])
        @checkequals(3737, [20], [17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(3739, [20], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(4250, [20], [18], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(-6))])
        @checkequals(4251, [20], [18], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(6))])
        @checkequals(4252, [20], [18], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(2))])
        @checkequals(4253, [20], [18], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(2))])
        @checkequals(4285, [20], [17], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(4287, [20], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-4))])
        @checkequals(6939, [19], [19], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(8304, [19], [19], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(8456, [20], [18], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(8458, [20], [18], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(9004, [20], [18], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(9006, [20], [18], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-4))])
        @checkequals(14606, [20], [19], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(6))])
        @checkequals(14607, [20], [19], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(-6))])
        @checkequals(14614, [20], [19], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(-2))])
        @checkequals(14615, [20], [19], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(-2))])
        @checkequals(26806, [20], [19], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(26814, [20], [19], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(8))])
        @checkequals(29209, [20], [19], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(29213, [20], [19], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(4))])
        @checkequals(47925, [20], [20], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(47926, [20], [20], Complex{BigFloat}[Complex(BigFloat(-12), BigFloat(0))])
        @checkequals(81393, [20], [20], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(86063, [20], [20], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @test isnothing(iter)
    elseif state.instance == 69
        @test dim == 12
        iter = iterate(data)
        @checkequals(50, [17], [17], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(51, [17], [17], Complex{BigFloat}[Complex(BigFloat(-12), BigFloat(0))])
        @checkequals(54, [18], [17], Complex{BigFloat}[Complex(BigFloat(18), BigFloat(0))])
        @checkequals(57, [19], [17], Complex{BigFloat}[Complex(BigFloat(10), BigFloat(0))])
        @checkequals(59, [19], [17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(66, [17], [17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(74, [19], [18], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0))])
        @checkequals(79, [20], [17], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(80, [20], [17], Complex{BigFloat}[Complex(BigFloat(-12), BigFloat(0))])
        @checkequals(83, [19,20,21], [19,18,17], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0)), Complex(BigFloat(18), BigFloat(0)), Complex(BigFloat(18), BigFloat(0))])
        @checkequals(84, [17], [17], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(92, [20,22], [19,17], Complex{BigFloat}[Complex(BigFloat(10), BigFloat(0)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(151, [20,22], [19,17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(8), BigFloat(0))])
        @checkequals(158, [20], [17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(166, [21,22], [19,18], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0)), Complex(BigFloat(48), BigFloat(0))])
        @checkequals(171, [20], [20], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(172, [20], [20], Complex{BigFloat}[Complex(BigFloat(-12), BigFloat(0))])
        @checkequals(175, [21,22], [20,19], Complex{BigFloat}[Complex(BigFloat(18), BigFloat(0)), Complex(BigFloat(6), BigFloat(0))])
        @checkequals(176, [20], [17], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(205, [22], [20], Complex{BigFloat}[Complex(BigFloat(10), BigFloat(0))])
        @checkequals(272, [23], [17], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(-6))])
        @checkequals(273, [23], [17], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(6))])
        @checkequals(275, [23], [17], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(2))])
        @checkequals(276, [23], [17], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(2))])
        @checkequals(281, [23,24], [18,17], Complex{BigFloat}[Complex(BigFloat(18), BigFloat(0)), Complex(BigFloat(18), BigFloat(0))])
        @checkequals(282, [23,24], [18,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-18)), Complex(BigFloat(0), BigFloat(-18))])
        @checkequals(397, [22], [20], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(404, [20], [20], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(412, [22], [21], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0))])
        @checkequals(421, [22], [22], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(422, [20], [20], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(456, [23,25], [19,17], Complex{BigFloat}[Complex(BigFloat(10), BigFloat(0)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(457, [23,25], [19,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-10)), Complex(BigFloat(0), BigFloat(-10))])
        @checkequals(640, [23,25], [19,17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(8), BigFloat(0))])
        @checkequals(646, [23,25], [19,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8)), Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(650, [23], [17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(653, [23], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(728, [24,25], [19,18], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(24)), Complex(BigFloat(0), BigFloat(24))])
        @checkequals(729, [24,25], [19,18], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-24)), Complex(BigFloat(0), BigFloat(-24))])
        @checkequals(731, [24,25], [19,18], Complex{BigFloat}[Complex(BigFloat(-24), BigFloat(0)), Complex(BigFloat(-24), BigFloat(0))])
        @checkequals(732, [24,25], [19,18], Complex{BigFloat}[Complex(BigFloat(24), BigFloat(0)), Complex(BigFloat(24), BigFloat(0))])
        @checkequals(854, [23], [20], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(-6))])
        @checkequals(855, [23], [20], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(6))])
        @checkequals(857, [23], [20], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(2))])
        @checkequals(858, [23], [20], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(2))])
        @checkequals(863, [23,24,25], [21,20,19], Complex{BigFloat}[Complex(BigFloat(18), BigFloat(0)), Complex(BigFloat(18), BigFloat(0)), Complex(BigFloat(6), BigFloat(0))])
        @checkequals(864, [23,24,25], [21,20,19], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-18)), Complex(BigFloat(0), BigFloat(-18)), Complex(BigFloat(0), BigFloat(-6))])
        @checkequals(898, [23], [17], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(899, [23], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-4))])
        @checkequals(1164, [23,25], [22,20], Complex{BigFloat}[Complex(BigFloat(10), BigFloat(0)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(1165, [23,25], [22,20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-10)), Complex(BigFloat(0), BigFloat(-10))])
        @checkequals(1742, [26], [17], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(-6))])
        @checkequals(1743, [26], [17], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(6))])
        @checkequals(1744, [26], [17], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(2))])
        @checkequals(1745, [26], [17], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(2))])
        @checkequals(1762, [26,27], [18,17], Complex{BigFloat}[Complex(BigFloat(18), BigFloat(0)), Complex(BigFloat(18), BigFloat(0))])
        @checkequals(1764, [26,27], [18,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-18)), Complex(BigFloat(0), BigFloat(-18))])
        @checkequals(1894, [23,25], [22,20], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(8), BigFloat(0))])
        @checkequals(1900, [23,25], [22,20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8)), Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(1904, [23], [20], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(1907, [23], [20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(1982, [24,25], [22,21], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(24)), Complex(BigFloat(0), BigFloat(24))])
        @checkequals(1983, [24,25], [22,21], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-24)), Complex(BigFloat(0), BigFloat(-24))])
        @checkequals(1985, [24,25], [22,21], Complex{BigFloat}[Complex(BigFloat(-24), BigFloat(0)), Complex(BigFloat(-24), BigFloat(0))])
        @checkequals(1986, [24,25], [22,21], Complex{BigFloat}[Complex(BigFloat(24), BigFloat(0)), Complex(BigFloat(24), BigFloat(0))])
        @checkequals(2117, [25], [22], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(2118, [25], [22], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-6))])
        @checkequals(2152, [23], [20], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(2153, [23], [20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-4))])
        @checkequals(2491, [26,28], [19,17], Complex{BigFloat}[Complex(BigFloat(10), BigFloat(0)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(2493, [26,28], [19,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-10)), Complex(BigFloat(0), BigFloat(-10))])
        @checkequals(3360, [23], [23], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(3361, [23], [23], Complex{BigFloat}[Complex(BigFloat(-12), BigFloat(0))])
        @checkequals(3375, [24], [23], Complex{BigFloat}[Complex(BigFloat(18), BigFloat(0))])
        @checkequals(3719, [26,28], [19,17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(8), BigFloat(0))])
        @checkequals(3721, [26,28], [19,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8)), Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(3737, [26], [17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(3739, [26], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(3788, [27,28], [19,18], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(24)), Complex(BigFloat(0), BigFloat(24))])
        @checkequals(3789, [27,28], [19,18], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-24)), Complex(BigFloat(0), BigFloat(-24))])
        @checkequals(3790, [27,28], [19,18], Complex{BigFloat}[Complex(BigFloat(-24), BigFloat(0)), Complex(BigFloat(-24), BigFloat(0))])
        @checkequals(3791, [27,28], [19,18], Complex{BigFloat}[Complex(BigFloat(24), BigFloat(0)), Complex(BigFloat(24), BigFloat(0))])
        @checkequals(4250, [26], [20], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(-6))])
        @checkequals(4251, [26], [20], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(6))])
        @checkequals(4252, [26], [20], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(2))])
        @checkequals(4253, [26], [20], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(2))])
        @checkequals(4270, [26,27,28], [21,20,19], Complex{BigFloat}[Complex(BigFloat(18), BigFloat(0)), Complex(BigFloat(18), BigFloat(0)), Complex(BigFloat(6), BigFloat(0))])
        @checkequals(4272, [26,27,28], [21,20,19], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-18)), Complex(BigFloat(0), BigFloat(-18)), Complex(BigFloat(0), BigFloat(-6))])
        @checkequals(4285, [26], [17], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(4287, [26], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-4))])
        @checkequals(4971, [25], [23], Complex{BigFloat}[Complex(BigFloat(10), BigFloat(0))])
        @checkequals(5461, [26,28], [22,20], Complex{BigFloat}[Complex(BigFloat(10), BigFloat(0)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(5463, [26,28], [22,20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-10)), Complex(BigFloat(0), BigFloat(-10))])
        @checkequals(6929, [25], [23], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(6939, [23], [23], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(7288, [25], [24], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0))])
        @checkequals(8094, [25], [25], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(8304, [23], [23], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(8438, [26,28], [22,20], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(8), BigFloat(0))])
        @checkequals(8440, [26,28], [22,20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8)), Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(8456, [26], [20], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(8458, [26], [20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(8507, [27,28], [22,21], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(24)), Complex(BigFloat(0), BigFloat(24))])
        @checkequals(8508, [27,28], [22,21], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-24)), Complex(BigFloat(0), BigFloat(-24))])
        @checkequals(8509, [27,28], [22,21], Complex{BigFloat}[Complex(BigFloat(-24), BigFloat(0)), Complex(BigFloat(-24), BigFloat(0))])
        @checkequals(8510, [27,28], [22,21], Complex{BigFloat}[Complex(BigFloat(24), BigFloat(0)), Complex(BigFloat(24), BigFloat(0))])
        @checkequals(8989, [28], [22], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(8991, [28], [22], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-6))])
        @checkequals(9004, [26], [20], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(9006, [26], [20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-4))])
        @checkequals(14606, [26], [23], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(6))])
        @checkequals(14607, [26], [23], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(-6))])
        @checkequals(14614, [26], [23], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(-2))])
        @checkequals(14615, [26], [23], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(-2))])
        @checkequals(14640, [26,27], [24,23], Complex{BigFloat}[Complex(BigFloat(18), BigFloat(0)), Complex(BigFloat(18), BigFloat(0))])
        @checkequals(14644, [26,27], [24,23], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(18)), Complex(BigFloat(0), BigFloat(18))])
        @checkequals(19056, [26,28], [25,23], Complex{BigFloat}[Complex(BigFloat(10), BigFloat(0)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(19060, [26,28], [25,23], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(10)), Complex(BigFloat(0), BigFloat(10))])
        @checkequals(26783, [26,28], [25,23], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(8), BigFloat(0))])
        @checkequals(26796, [26,28], [25,23], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(8)), Complex(BigFloat(0), BigFloat(8))])
        @checkequals(26806, [26], [23], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(26814, [26], [23], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(8))])
        @checkequals(27047, [27,28], [25,24], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-24)), Complex(BigFloat(0), BigFloat(-24))])
        @checkequals(27048, [27,28], [25,24], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(24)), Complex(BigFloat(0), BigFloat(24))])
        @checkequals(27055, [27,28], [25,24], Complex{BigFloat}[Complex(BigFloat(-24), BigFloat(0)), Complex(BigFloat(-24), BigFloat(0))])
        @checkequals(27056, [27,28], [25,24], Complex{BigFloat}[Complex(BigFloat(24), BigFloat(0)), Complex(BigFloat(24), BigFloat(0))])
        @checkequals(29083, [28], [25], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(29087, [28], [25], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(6))])
        @checkequals(29209, [26], [23], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(29213, [26], [23], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(4))])
        @checkequals(47925, [26], [26], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(47926, [26], [26], Complex{BigFloat}[Complex(BigFloat(-12), BigFloat(0))])
        @checkequals(47981, [27], [26], Complex{BigFloat}[Complex(BigFloat(18), BigFloat(0))])
        @checkequals(59062, [28], [26], Complex{BigFloat}[Complex(BigFloat(10), BigFloat(0))])
        @checkequals(81360, [28], [26], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(81393, [26], [26], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(81570, [28], [27], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0))])
        @checkequals(85993, [28], [28], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(86063, [26], [26], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @test isnothing(iter)
    elseif state.instance == 71
        @test dim == 12
        iter = iterate(data)
        @checkequals(50, [17], [17], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(51, [17], [17], Complex{BigFloat}[Complex(BigFloat(-12), BigFloat(0))])
        @checkequals(57, [18,19], [17,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(58, [18], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(2))])
        @checkequals(59, [19], [17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(60, [18], [17], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(-16))])
        @checkequals(66, [17,18], [17,17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(74, [19], [18], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0))])
        @checkequals(79, [20], [17], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(80, [20], [17], Complex{BigFloat}[Complex(BigFloat(-12), BigFloat(0))])
        @checkequals(83, [19], [19], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(84, [17], [17], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(92, [20,20,21,22], [18,19,17,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-6)), Complex(BigFloat(10), BigFloat(0)), Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(150, [20,21], [18,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-2)), Complex(BigFloat(0), BigFloat(2))])
        @checkequals(151, [20,22], [19,17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(8), BigFloat(0))])
        @checkequals(152, [20,21], [18,17], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(16)), Complex(BigFloat(2), BigFloat(-16))])
        @checkequals(158, [20,20,21], [17,18,17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(2), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(166, [21,22], [19,18], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0)), Complex(BigFloat(48), BigFloat(0))])
        @checkequals(171, [20], [20], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(172, [20], [20], Complex{BigFloat}[Complex(BigFloat(-12), BigFloat(0))])
        @checkequals(175, [22], [19], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(176, [20], [17], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(205, [21,22], [20,20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(272, [23], [17], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(-6))])
        @checkequals(273, [23], [17], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(6))])
        @checkequals(275, [23], [17], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(2))])
        @checkequals(276, [23], [17], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(2))])
        @checkequals(396, [21], [20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(2))])
        @checkequals(397, [22], [20], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(398, [21], [20], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(-16))])
        @checkequals(404, [20,21], [20,20], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(412, [22], [21], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0))])
        @checkequals(421, [22], [22], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(422, [20], [20], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(456, [23,23,24,25], [18,19,17,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-6)), Complex(BigFloat(10), BigFloat(0)), Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(457, [23,23,24,25], [18,19,17,17], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(0)), Complex(BigFloat(0), BigFloat(-10)), Complex(BigFloat(6), BigFloat(0)), Complex(BigFloat(0), BigFloat(-10))])
        @checkequals(639, [23,24], [18,17], Complex{BigFloat}[Complex(BigFloat(-8), BigFloat(0)), Complex(BigFloat(8), BigFloat(2))])
        @checkequals(640, [23,25], [19,17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(8), BigFloat(0))])
        @checkequals(641, [23,24], [18,17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(-2)), Complex(BigFloat(-8), BigFloat(0))])
        @checkequals(645, [23,24], [18,17], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(-8)), Complex(BigFloat(0), BigFloat(8))])
        @checkequals(646, [23,25], [19,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8)), Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(647, [23,24], [18,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(8)), Complex(BigFloat(2), BigFloat(-8))])
        @checkequals(650, [23,23,24], [17,18,17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(2), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(653, [23,23,24], [17,18,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8)), Complex(BigFloat(0), BigFloat(-2)), Complex(BigFloat(0), BigFloat(-2))])
        @checkequals(728, [24,25], [19,18], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(24)), Complex(BigFloat(0), BigFloat(24))])
        @checkequals(729, [24,25], [19,18], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-24)), Complex(BigFloat(0), BigFloat(-24))])
        @checkequals(731, [24,25], [19,18], Complex{BigFloat}[Complex(BigFloat(-24), BigFloat(0)), Complex(BigFloat(-24), BigFloat(0))])
        @checkequals(732, [24,25], [19,18], Complex{BigFloat}[Complex(BigFloat(24), BigFloat(0)), Complex(BigFloat(24), BigFloat(0))])
        @checkequals(854, [23], [20], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(-6))])
        @checkequals(855, [23], [20], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(6))])
        @checkequals(857, [23], [20], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(2))])
        @checkequals(858, [23], [20], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(2))])
        @checkequals(863, [25], [19], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(864, [25], [19], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-6))])
        @checkequals(898, [23], [17], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(899, [23], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-4))])
        @checkequals(1164, [23,23,24,25], [21,22,20,20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-6)), Complex(BigFloat(10), BigFloat(0)), Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(1165, [23,23,24,25], [21,22,20,20], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(0)), Complex(BigFloat(0), BigFloat(-10)), Complex(BigFloat(6), BigFloat(0)), Complex(BigFloat(0), BigFloat(-10))])
        @checkequals(1742, [26], [17], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(-6))])
        @checkequals(1743, [26], [17], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(6))])
        @checkequals(1744, [26], [17], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(2))])
        @checkequals(1745, [26], [17], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(2))])
        @checkequals(1893, [23,24], [21,20], Complex{BigFloat}[Complex(BigFloat(-8), BigFloat(0)), Complex(BigFloat(8), BigFloat(2))])
        @checkequals(1894, [23,25], [22,20], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(8), BigFloat(0))])
        @checkequals(1895, [23,24], [21,20], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(-2)), Complex(BigFloat(-8), BigFloat(0))])
        @checkequals(1899, [23,24], [21,20], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(-8)), Complex(BigFloat(0), BigFloat(8))])
        @checkequals(1900, [23,25], [22,20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8)), Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(1901, [23,24], [21,20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(8)), Complex(BigFloat(2), BigFloat(-8))])
        @checkequals(1904, [23,23,24], [20,21,20], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(2), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(1907, [23,23,24], [20,21,20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8)), Complex(BigFloat(0), BigFloat(-2)), Complex(BigFloat(0), BigFloat(-2))])
        @checkequals(1982, [24,25], [22,21], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(24)), Complex(BigFloat(0), BigFloat(24))])
        @checkequals(1983, [24,25], [22,21], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-24)), Complex(BigFloat(0), BigFloat(-24))])
        @checkequals(1985, [24,25], [22,21], Complex{BigFloat}[Complex(BigFloat(-24), BigFloat(0)), Complex(BigFloat(-24), BigFloat(0))])
        @checkequals(1986, [24,25], [22,21], Complex{BigFloat}[Complex(BigFloat(24), BigFloat(0)), Complex(BigFloat(24), BigFloat(0))])
        @checkequals(2117, [25], [22], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(2118, [25], [22], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-6))])
        @checkequals(2152, [23], [20], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(2153, [23], [20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-4))])
        @checkequals(2491, [26,26,27,28], [18,19,17,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-6)), Complex(BigFloat(10), BigFloat(0)), Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(2493, [26,26,27,28], [18,19,17,17], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(0)), Complex(BigFloat(0), BigFloat(-10)), Complex(BigFloat(6), BigFloat(0)), Complex(BigFloat(0), BigFloat(-10))])
        @checkequals(3360, [23], [23], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(3361, [23], [23], Complex{BigFloat}[Complex(BigFloat(-12), BigFloat(0))])
        @checkequals(3718, [26,27], [18,17], Complex{BigFloat}[Complex(BigFloat(-8), BigFloat(0)), Complex(BigFloat(8), BigFloat(2))])
        @checkequals(3719, [26,28], [19,17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(8), BigFloat(0))])
        @checkequals(3720, [26,27], [18,17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(-2)), Complex(BigFloat(-8), BigFloat(0))])
        @checkequals(3721, [26,28], [19,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8)), Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(3722, [26,27], [18,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(8)), Complex(BigFloat(2), BigFloat(-8))])
        @checkequals(3737, [26,26,27], [17,18,17], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(2), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(3739, [26,26,27], [17,18,17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8)), Complex(BigFloat(0), BigFloat(-2)), Complex(BigFloat(0), BigFloat(-2))])
        @checkequals(3788, [27,28], [19,18], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(24)), Complex(BigFloat(0), BigFloat(24))])
        @checkequals(3789, [27,28], [19,18], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-24)), Complex(BigFloat(0), BigFloat(-24))])
        @checkequals(3790, [27,28], [19,18], Complex{BigFloat}[Complex(BigFloat(-24), BigFloat(0)), Complex(BigFloat(-24), BigFloat(0))])
        @checkequals(3791, [27,28], [19,18], Complex{BigFloat}[Complex(BigFloat(24), BigFloat(0)), Complex(BigFloat(24), BigFloat(0))])
        @checkequals(4250, [26], [20], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(-6))])
        @checkequals(4251, [26], [20], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(6))])
        @checkequals(4252, [26], [20], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(2))])
        @checkequals(4253, [26], [20], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(2))])
        @checkequals(4270, [28], [19], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(4272, [28], [19], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-6))])
        @checkequals(4285, [26], [17], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(4287, [26], [17], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-4))])
        @checkequals(4971, [24,25], [23,23], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(5461, [26,26,27,28], [21,22,20,20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-6)), Complex(BigFloat(10), BigFloat(0)), Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(5463, [26,26,27,28], [21,22,20,20], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(0)), Complex(BigFloat(0), BigFloat(-10)), Complex(BigFloat(6), BigFloat(0)), Complex(BigFloat(0), BigFloat(-10))])
        @checkequals(6928, [24], [23], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(2))])
        @checkequals(6929, [25], [23], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(6930, [24], [23], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(-16))])
        @checkequals(6939, [23,24], [23,23], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(7288, [25], [24], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0))])
        @checkequals(8094, [25], [25], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(8304, [23], [23], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(8437, [26,27], [21,20], Complex{BigFloat}[Complex(BigFloat(-8), BigFloat(0)), Complex(BigFloat(8), BigFloat(2))])
        @checkequals(8438, [26,28], [22,20], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(8), BigFloat(0))])
        @checkequals(8439, [26,27], [21,20], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(-2)), Complex(BigFloat(-8), BigFloat(0))])
        @checkequals(8440, [26,28], [22,20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8)), Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(8441, [26,27], [21,20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(8)), Complex(BigFloat(2), BigFloat(-8))])
        @checkequals(8456, [26,26,27], [20,21,20], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(2), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(8458, [26,26,27], [20,21,20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8)), Complex(BigFloat(0), BigFloat(-2)), Complex(BigFloat(0), BigFloat(-2))])
        @checkequals(8507, [27,28], [22,21], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(24)), Complex(BigFloat(0), BigFloat(24))])
        @checkequals(8508, [27,28], [22,21], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-24)), Complex(BigFloat(0), BigFloat(-24))])
        @checkequals(8509, [27,28], [22,21], Complex{BigFloat}[Complex(BigFloat(-24), BigFloat(0)), Complex(BigFloat(-24), BigFloat(0))])
        @checkequals(8510, [27,28], [22,21], Complex{BigFloat}[Complex(BigFloat(24), BigFloat(0)), Complex(BigFloat(24), BigFloat(0))])
        @checkequals(8989, [28], [22], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(8991, [28], [22], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-6))])
        @checkequals(9004, [26], [20], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(9006, [26], [20], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-4))])
        @checkequals(14606, [26], [23], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(6))])
        @checkequals(14607, [26], [23], Complex{BigFloat}[Complex(BigFloat(-2), BigFloat(-6))])
        @checkequals(14614, [26], [23], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(-2))])
        @checkequals(14615, [26], [23], Complex{BigFloat}[Complex(BigFloat(-6), BigFloat(-2))])
        @checkequals(19056, [26,26,27,28], [24,25,23,23], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-6)), Complex(BigFloat(10), BigFloat(0)), Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(19060, [26,26,27,28], [24,25,23,23], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0)), Complex(BigFloat(0), BigFloat(10)), Complex(BigFloat(-6), BigFloat(0)), Complex(BigFloat(0), BigFloat(10))])
        @checkequals(26782, [26,27], [24,23], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(-2)), Complex(BigFloat(-8), BigFloat(0))])
        @checkequals(26783, [26,28], [25,23], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(8), BigFloat(0))])
        @checkequals(26784, [26,27], [24,23], Complex{BigFloat}[Complex(BigFloat(-8), BigFloat(0)), Complex(BigFloat(8), BigFloat(2))])
        @checkequals(26795, [26,27], [24,23], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-8)), Complex(BigFloat(-2), BigFloat(8))])
        @checkequals(26796, [26,28], [25,23], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(8)), Complex(BigFloat(0), BigFloat(8))])
        @checkequals(26797, [26,27], [24,23], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(8)), Complex(BigFloat(0), BigFloat(-8))])
        @checkequals(26806, [26,26,27], [23,24,23], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(2), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(26814, [26,26,27], [23,24,23], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(8)), Complex(BigFloat(0), BigFloat(2)), Complex(BigFloat(0), BigFloat(2))])
        @checkequals(27047, [27,28], [25,24], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(-24)), Complex(BigFloat(0), BigFloat(-24))])
        @checkequals(27048, [27,28], [25,24], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(24)), Complex(BigFloat(0), BigFloat(24))])
        @checkequals(27055, [27,28], [25,24], Complex{BigFloat}[Complex(BigFloat(-24), BigFloat(0)), Complex(BigFloat(-24), BigFloat(0))])
        @checkequals(27056, [27,28], [25,24], Complex{BigFloat}[Complex(BigFloat(24), BigFloat(0)), Complex(BigFloat(24), BigFloat(0))])
        @checkequals(29083, [28], [25], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(29087, [28], [25], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(6))])
        @checkequals(29209, [26], [23], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @checkequals(29213, [26], [23], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(4))])
        @checkequals(47925, [26], [26], Complex{BigFloat}[Complex(BigFloat(-4), BigFloat(0))])
        @checkequals(47926, [26], [26], Complex{BigFloat}[Complex(BigFloat(-12), BigFloat(0))])
        @checkequals(59062, [27,28], [26,26], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(6)), Complex(BigFloat(10), BigFloat(0))])
        @checkequals(81359, [27], [26], Complex{BigFloat}[Complex(BigFloat(0), BigFloat(2))])
        @checkequals(81360, [28], [26], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0))])
        @checkequals(81361, [27], [26], Complex{BigFloat}[Complex(BigFloat(2), BigFloat(-16))])
        @checkequals(81393, [26,27], [26,26], Complex{BigFloat}[Complex(BigFloat(8), BigFloat(0)), Complex(BigFloat(2), BigFloat(0))])
        @checkequals(81570, [28], [27], Complex{BigFloat}[Complex(BigFloat(48), BigFloat(0))])
        @checkequals(85993, [28], [28], Complex{BigFloat}[Complex(BigFloat(6), BigFloat(0))])
        @checkequals(86063, [26], [26], Complex{BigFloat}[Complex(BigFloat(4), BigFloat(0))])
        @test isnothing(iter)
    else
        @test false
    end
end

function Solver.add_constr_fix_prepare!(state::SolverSetup{false,false,false,false,true}, num::Int)
    @test state.lastcall === :none
    @test isempty(state.fixed_available)
    state.lastcall = :add_constr_fix_prepare
    union!(state.fixed_available, UInt(1):UInt(num))
    return UInt(num)
end

function Solver.add_constr_fix_finalize!(state::SolverSetup{false,false,false,false,true}, constrstate::UInt)
    @test state.lastcall === :add_constr_fix
    state.lastcall = :add_constr_fix_finalize
    @test iszero(constrstate)
    @test isempty(state.fixed_available)
end

Solver.add_constr_fix!(state::SolverSetup{false,false,false,false,true}, constrstate::UInt, indvals::AbstractIndvals{BigInt,BigFloat}, rhs::BigFloat) =
    @interpret add_constr_fix_helper!(state, constrstate, indvals, rhs)

function add_constr_fix_helper!(state::SolverSetup{false,false,false,false,true}, constrstate::UInt, indvals::AbstractIndvals{BigInt,BigFloat}, rhs::BigFloat)
    @test in(state.lastcall, (:add_constr_fix_prepare, :add_constr_fix))
    state.lastcall = :add_constr_fix
    @test iszero(rhs)
    if state.instance == 72
        if checkequality(indvals, BigInt[57], BigFloat[5], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[93], BigFloat[5], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[213], BigFloat[5], true)
            pop!(state.fixed_available, UInt(3))
        end
    elseif state.instance == 73
        if checkequality(indvals, BigInt[57], BigFloat[5], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[88], BigFloat[5], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[89], BigFloat[5], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[186], BigFloat[5], true)
            pop!(state.fixed_available, UInt(4))
        end
    elseif state.instance == 74
        if checkequality(indvals, BigInt[52,53], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[88,89], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[208,209], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(3))
        end
    elseif state.instance == 75
        if checkequality(indvals, BigInt[52,53], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[63,66,67], BigFloat[6,6,-8], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[63,66,67], BigFloat[8,-8,6], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[109,112], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(4))
        end
    elseif state.instance == 76
        if checkequality(indvals, BigInt[52,53], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[61,62,64,65], BigFloat[6,6,-8,-8], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[61,62,64,65], BigFloat[8,-8,-6,6], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[99,105], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(4))
        end
    elseif state.instance == 77
        if checkequality(indvals, BigInt[52,53], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[52,53], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[88,89], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[88,89], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(4))
        elseif checkequality(indvals, BigInt[208,209], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(5))
        elseif checkequality(indvals, BigInt[208,209], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(6))
        end
    elseif state.instance == 78
        if checkequality(indvals, BigInt[52,53], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[52,53], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[63,67], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[63,67], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(4))
        elseif checkequality(indvals, BigInt[66], BigFloat[6], true)
            pop!(state.fixed_available, UInt(5))
        elseif checkequality(indvals, BigInt[66], BigFloat[8], true)
            pop!(state.fixed_available, UInt(6))
        elseif checkequality(indvals, BigInt[109,112], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(7))
        elseif checkequality(indvals, BigInt[109,112], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(8))
        end
    elseif state.instance == 79
        if checkequality(indvals, BigInt[52,53], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[52,53], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[61,65], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[61,65], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(4))
        elseif checkequality(indvals, BigInt[62,64], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(5))
        elseif checkequality(indvals, BigInt[62,64], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(6))
        elseif checkequality(indvals, BigInt[99,105], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(7))
        elseif checkequality(indvals, BigInt[99,105], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(8))
        end
    elseif state.instance == 80
        if checkequality(indvals, BigInt[57], BigFloat[6], true)
            pop!(state.fixed_available, UInt(1))
        end
    elseif state.instance == 81
        if checkequality(indvals, BigInt[52,53], BigFloat[12,8], true)
            pop!(state.fixed_available, UInt(1))
        end
    elseif state.instance == 82
        if checkequality(indvals, BigInt[52,53], BigFloat[6,4], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[52,53], BigFloat[4,-6], true)
            pop!(state.fixed_available, UInt(2))
        end
    elseif state.instance == 83
        if checkequality(indvals, BigInt[52,53], BigFloat[14,4], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[52,53,55], BigFloat[4,2,2], true)
            pop!(state.fixed_available, UInt(2))
        end
    elseif state.instance == 84
        if checkequality(indvals, BigInt[49,58,59], BigFloat[-10,-4,8], true)
            pop!(state.fixed_available, UInt(1))
        end
    elseif state.instance == 85
        if checkequality(indvals, BigInt[57], BigFloat[6], true)
            pop!(state.fixed_available, UInt(1))
        end
    elseif state.instance == 86
        if checkequality(indvals, BigInt[52,53], BigFloat[12,8], true)
            pop!(state.fixed_available, UInt(1))
        end
    elseif state.instance == 87
        if checkequality(indvals, BigInt[52,53], BigFloat[6,4], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[52,53], BigFloat[4,-6], true)
            pop!(state.fixed_available, UInt(2))
        end
    elseif state.instance == 88
        if checkequality(indvals, BigInt[52,53], BigFloat[14,4], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[52,53,55], BigFloat[4,2,2], true)
            pop!(state.fixed_available, UInt(2))
        end
    elseif state.instance == 89
        if checkequality(indvals, BigInt[49,58,59], BigFloat[-10,-4,8], true)
            pop!(state.fixed_available, UInt(1))
        end
    elseif state.instance == 90
        if checkequality(indvals, BigInt[57], BigFloat[6], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[93], BigFloat[6], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[205], BigFloat[6], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[213], BigFloat[6], true)
            pop!(state.fixed_available, UInt(4))
        elseif checkequality(indvals, BigInt[535], BigFloat[6], true)
            pop!(state.fixed_available, UInt(5))
        elseif checkequality(indvals, BigInt[1215], BigFloat[6], true)
            pop!(state.fixed_available, UInt(6))
        end
    elseif state.instance == 91
        if checkequality(indvals, BigInt[52,53], BigFloat[12,8], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[88,89], BigFloat[12,8], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[173,174], BigFloat[12,8], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[208,209], BigFloat[12,8], true)
            pop!(state.fixed_available, UInt(4))
        elseif checkequality(indvals, BigInt[503,504], BigFloat[12,8], true)
            pop!(state.fixed_available, UInt(5))
        elseif checkequality(indvals, BigInt[1001,1002], BigFloat[12,8], true)
            pop!(state.fixed_available, UInt(6))
        end
    elseif state.instance == 92
        if checkequality(indvals, BigInt[52,53], BigFloat[6,4], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[52,53], BigFloat[4,-6], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[88,89], BigFloat[6,4], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[88,89], BigFloat[4,-6], true)
            pop!(state.fixed_available, UInt(4))
        elseif checkequality(indvals, BigInt[173,174], BigFloat[6,4], true)
            pop!(state.fixed_available, UInt(5))
        elseif checkequality(indvals, BigInt[173,174], BigFloat[4,-6], true)
            pop!(state.fixed_available, UInt(6))
        elseif checkequality(indvals, BigInt[208,209], BigFloat[6,4], true)
            pop!(state.fixed_available, UInt(7))
        elseif checkequality(indvals, BigInt[208,209], BigFloat[4,-6], true)
            pop!(state.fixed_available, UInt(8))
        elseif checkequality(indvals, BigInt[503,504], BigFloat[6,4], true)
            pop!(state.fixed_available, UInt(9))
        elseif checkequality(indvals, BigInt[503,504], BigFloat[4,-6], true)
            pop!(state.fixed_available, UInt(10))
        elseif checkequality(indvals, BigInt[1001,1002], BigFloat[6,4], true)
            pop!(state.fixed_available, UInt(11))
        elseif checkequality(indvals, BigInt[1001,1002], BigFloat[4,-6], true)
            pop!(state.fixed_available, UInt(12))
        end
    elseif state.instance == 93
        if checkequality(indvals, BigInt[52,53], BigFloat[14,4], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[52,53,55], BigFloat[4,2,2], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[88,89], BigFloat[14,4], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[88,89,91], BigFloat[4,2,2], true)
            pop!(state.fixed_available, UInt(4))
        elseif checkequality(indvals, BigInt[173,174], BigFloat[14,4], true)
            pop!(state.fixed_available, UInt(5))
        elseif checkequality(indvals, BigInt[173,174,176], BigFloat[4,2,2], true)
            pop!(state.fixed_available, UInt(6))
        elseif checkequality(indvals, BigInt[208,209], BigFloat[14,4], true)
            pop!(state.fixed_available, UInt(7))
        elseif checkequality(indvals, BigInt[208,209,211], BigFloat[4,2,2], true)
            pop!(state.fixed_available, UInt(8))
        elseif checkequality(indvals, BigInt[503,504], BigFloat[14,4], true)
            pop!(state.fixed_available, UInt(9))
        elseif checkequality(indvals, BigInt[503,504,506], BigFloat[4,2,2], true)
            pop!(state.fixed_available, UInt(10))
        elseif checkequality(indvals, BigInt[1001,1002], BigFloat[14,4], true)
            pop!(state.fixed_available, UInt(11))
        elseif checkequality(indvals, BigInt[1001,1002,1004], BigFloat[4,2,2], true)
            pop!(state.fixed_available, UInt(12))
        end
    elseif state.instance == 94
        if checkequality(indvals, BigInt[49,58,59], BigFloat[-10,-4,8], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[57,178,179], BigFloat[-10,-4,8], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[85,396,397], BigFloat[-10,-4,8], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[93,508,509], BigFloat[-10,-4,8], true)
            pop!(state.fixed_available, UInt(4))
        elseif checkequality(indvals, BigInt[205,1188,1189], BigFloat[-10,-4,8], true)
            pop!(state.fixed_available, UInt(5))
        elseif checkequality(indvals, BigInt[423,2232,2233], BigFloat[-10,-4,8], true)
            pop!(state.fixed_available, UInt(6))
        end
    elseif state.instance == 95
        if checkequality(indvals, BigInt[57], BigFloat[6], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[93], BigFloat[6], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[178], BigFloat[6], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[180], BigFloat[6], true)
            pop!(state.fixed_available, UInt(4))
        elseif checkequality(indvals, BigInt[213], BigFloat[6], true)
            pop!(state.fixed_available, UInt(5))
        elseif checkequality(indvals, BigInt[508], BigFloat[6], true)
            pop!(state.fixed_available, UInt(6))
        elseif checkequality(indvals, BigInt[510], BigFloat[6], true)
            pop!(state.fixed_available, UInt(7))
        elseif checkequality(indvals, BigInt[1008], BigFloat[6], true)
            pop!(state.fixed_available, UInt(8))
        end
    elseif state.instance == 96
        if checkequality(indvals, BigInt[52,53], BigFloat[12,8], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[88,89], BigFloat[12,8], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[98,100,104,106], BigFloat[6,6,4,4], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[98,100,104,106], BigFloat[-4,4,-6,6], true)
            pop!(state.fixed_available, UInt(4))
        elseif checkequality(indvals, BigInt[208,209], BigFloat[12,8], true)
            pop!(state.fixed_available, UInt(5))
        elseif checkequality(indvals, BigInt[428,430,434,436], BigFloat[6,6,4,4], true)
            pop!(state.fixed_available, UInt(6))
        elseif checkequality(indvals, BigInt[428,430,434,436], BigFloat[-4,4,-6,6], true)
            pop!(state.fixed_available, UInt(7))
        elseif checkequality(indvals, BigInt[552,567], BigFloat[12,8], true)
            pop!(state.fixed_available, UInt(8))
        end
    elseif state.instance == 97
        if checkequality(indvals, BigInt[52,53], BigFloat[6,4], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[52,53], BigFloat[4,-6], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[88,89], BigFloat[6,4], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[88,89], BigFloat[4,-6], true)
            pop!(state.fixed_available, UInt(4))
        elseif checkequality(indvals, BigInt[100,104], BigFloat[6,4], true)
            pop!(state.fixed_available, UInt(5))
        elseif checkequality(indvals, BigInt[100,104], BigFloat[4,-6], true)
            pop!(state.fixed_available, UInt(6))
        elseif checkequality(indvals, BigInt[98,106], BigFloat[6,4], true)
            pop!(state.fixed_available, UInt(7))
        elseif checkequality(indvals, BigInt[98,106], BigFloat[4,-6], true)
            pop!(state.fixed_available, UInt(8))
        elseif checkequality(indvals, BigInt[208,209], BigFloat[6,4], true)
            pop!(state.fixed_available, UInt(9))
        elseif checkequality(indvals, BigInt[208,209], BigFloat[4,-6], true)
            pop!(state.fixed_available, UInt(10))
        elseif checkequality(indvals, BigInt[430,434], BigFloat[6,4], true)
            pop!(state.fixed_available, UInt(11))
        elseif checkequality(indvals, BigInt[430,434], BigFloat[4,-6], true)
            pop!(state.fixed_available, UInt(12))
        elseif checkequality(indvals, BigInt[428,436], BigFloat[6,4], true)
            pop!(state.fixed_available, UInt(13))
        elseif checkequality(indvals, BigInt[428,436], BigFloat[4,-6], true)
            pop!(state.fixed_available, UInt(14))
        elseif checkequality(indvals, BigInt[552,567], BigFloat[6,4], true)
            pop!(state.fixed_available, UInt(15))
        elseif checkequality(indvals, BigInt[552,567], BigFloat[4,-6], true)
            pop!(state.fixed_available, UInt(16))
        end
    elseif state.instance == 98
        if checkequality(indvals, BigInt[52,53], BigFloat[14,4], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[52,53,55], BigFloat[4,2,2], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[88,89], BigFloat[14,4], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[88,89,91], BigFloat[4,2,2], true)
            pop!(state.fixed_available, UInt(4))
        elseif checkequality(indvals, BigInt[98,100,104,131], BigFloat[8,6,4,-2], true)
            pop!(state.fixed_available, UInt(5))
        elseif checkequality(indvals, BigInt[100,104,106,129], BigFloat[4,-6,8,2], true)
            pop!(state.fixed_available, UInt(6))
        elseif checkequality(indvals, BigInt[98,100,106,131], BigFloat[6,8,4,2], true)
            pop!(state.fixed_available, UInt(7))
        elseif checkequality(indvals, BigInt[98,104,106,129], BigFloat[4,8,-6,2], true)
            pop!(state.fixed_available, UInt(8))
        elseif checkequality(indvals, BigInt[208,209], BigFloat[14,4], true)
            pop!(state.fixed_available, UInt(9))
        elseif checkequality(indvals, BigInt[208,209,211], BigFloat[4,2,2], true)
            pop!(state.fixed_available, UInt(10))
        elseif checkequality(indvals, BigInt[428,430,434,461], BigFloat[8,6,4,-2], true)
            pop!(state.fixed_available, UInt(11))
        elseif checkequality(indvals, BigInt[430,434,436,459], BigFloat[4,-6,8,2], true)
            pop!(state.fixed_available, UInt(12))
        elseif checkequality(indvals, BigInt[428,430,436,461], BigFloat[6,8,4,2], true)
            pop!(state.fixed_available, UInt(13))
        elseif checkequality(indvals, BigInt[428,434,436,459], BigFloat[4,8,-6,2], true)
            pop!(state.fixed_available, UInt(14))
        elseif checkequality(indvals, BigInt[552,567], BigFloat[14,4], true)
            pop!(state.fixed_available, UInt(15))
        elseif checkequality(indvals, BigInt[552,567,672], BigFloat[4,2,2], true)
            pop!(state.fixed_available, UInt(16))
        end
    elseif state.instance == 99
        if checkequality(indvals, BigInt[49,58,59], BigFloat[-10,-4,8], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[57,178,179], BigFloat[-10,-4,8], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[58,214,215,216], BigFloat[-10,-2,8,-2], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[60,217,218], BigFloat[-10,8,-2], true)
            pop!(state.fixed_available, UInt(4))
        elseif checkequality(indvals, BigInt[93,508,509], BigFloat[-10,-4,8], true)
            pop!(state.fixed_available, UInt(5))
        elseif checkequality(indvals, BigInt[178,1006,1007,1008], BigFloat[-10,-2,8,-2], true)
            pop!(state.fixed_available, UInt(6))
        elseif checkequality(indvals, BigInt[180,1009,1010], BigFloat[-10,8,-2], true)
            pop!(state.fixed_available, UInt(7))
        elseif checkequality(indvals, BigInt[216,1338,1339], BigFloat[-10,-4,8], true)
            pop!(state.fixed_available, UInt(8))
        end
    elseif state.instance == 100
        if checkequality(indvals, BigInt[57], BigFloat[5], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[92], BigFloat[5], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[93], BigFloat[5], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[205], BigFloat[5], true)
            pop!(state.fixed_available, UInt(4))
        elseif checkequality(indvals, BigInt[212], BigFloat[5], true)
            pop!(state.fixed_available, UInt(5))
        elseif checkequality(indvals, BigInt[213], BigFloat[5], true)
            pop!(state.fixed_available, UInt(6))
        elseif checkequality(indvals, BigInt[507], BigFloat[5], true)
            pop!(state.fixed_available, UInt(7))
        elseif checkequality(indvals, BigInt[535], BigFloat[5], true)
            pop!(state.fixed_available, UInt(8))
        elseif checkequality(indvals, BigInt[542], BigFloat[5], true)
            pop!(state.fixed_available, UInt(9))
        elseif checkequality(indvals, BigInt[543], BigFloat[5], true)
            pop!(state.fixed_available, UInt(10))
        elseif checkequality(indvals, BigInt[1215], BigFloat[5], true)
            pop!(state.fixed_available, UInt(11))
        elseif checkequality(indvals, BigInt[1299], BigFloat[5], true)
            pop!(state.fixed_available, UInt(12))
        elseif checkequality(indvals, BigInt[1327], BigFloat[5], true)
            pop!(state.fixed_available, UInt(13))
        elseif checkequality(indvals, BigInt[1334], BigFloat[5], true)
            pop!(state.fixed_available, UInt(14))
        elseif checkequality(indvals, BigInt[1335], BigFloat[5], true)
            pop!(state.fixed_available, UInt(15))
        end
    elseif state.instance == 101
        if checkequality(indvals, BigInt[52,53], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[81,82], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[88,89], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[173,174], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(4))
        elseif checkequality(indvals, BigInt[201,202], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(5))
        elseif checkequality(indvals, BigInt[208,209], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(6))
        elseif checkequality(indvals, BigInt[419,420], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(7))
        elseif checkequality(indvals, BigInt[503,504], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(8))
        elseif checkequality(indvals, BigInt[531,532], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(9))
        elseif checkequality(indvals, BigInt[538,539], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(10))
        elseif checkequality(indvals, BigInt[1001,1002], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(11))
        elseif checkequality(indvals, BigInt[1211,1212], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(12))
        elseif checkequality(indvals, BigInt[1295,1296], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(13))
        elseif checkequality(indvals, BigInt[1323,1324], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(14))
        elseif checkequality(indvals, BigInt[1330,1331], BigFloat[12,-16], true)
            pop!(state.fixed_available, UInt(15))
        end
    elseif state.instance == 102
        if checkequality(indvals, BigInt[52,53], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(1))
        elseif checkequality(indvals, BigInt[52,53], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(2))
        elseif checkequality(indvals, BigInt[81,82], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(3))
        elseif checkequality(indvals, BigInt[81,82], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(4))
        elseif checkequality(indvals, BigInt[88,89], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(5))
        elseif checkequality(indvals, BigInt[88,89], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(6))
        elseif checkequality(indvals, BigInt[173,174], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(7))
        elseif checkequality(indvals, BigInt[173,174], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(8))
        elseif checkequality(indvals, BigInt[201,202], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(9))
        elseif checkequality(indvals, BigInt[201,202], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(10))
        elseif checkequality(indvals, BigInt[208,209], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(11))
        elseif checkequality(indvals, BigInt[208,209], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(12))
        elseif checkequality(indvals, BigInt[419,420], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(13))
        elseif checkequality(indvals, BigInt[419,420], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(14))
        elseif checkequality(indvals, BigInt[503,504], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(15))
        elseif checkequality(indvals, BigInt[503,504], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(16))
        elseif checkequality(indvals, BigInt[531,532], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(17))
        elseif checkequality(indvals, BigInt[531,532], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(18))
        elseif checkequality(indvals, BigInt[538,539], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(19))
        elseif checkequality(indvals, BigInt[538,539], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(20))
        elseif checkequality(indvals, BigInt[1001,1002], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(21))
        elseif checkequality(indvals, BigInt[1001,1002], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(22))
        elseif checkequality(indvals, BigInt[1211,1212], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(23))
        elseif checkequality(indvals, BigInt[1211,1212], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(24))
        elseif checkequality(indvals, BigInt[1295,1296], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(25))
        elseif checkequality(indvals, BigInt[1295,1296], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(26))
        elseif checkequality(indvals, BigInt[1323,1324], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(27))
        elseif checkequality(indvals, BigInt[1323,1324], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(28))
        elseif checkequality(indvals, BigInt[1330,1331], BigFloat[6,-8], true)
            pop!(state.fixed_available, UInt(29))
        elseif checkequality(indvals, BigInt[1330,1331], BigFloat[8,6], true)
            pop!(state.fixed_available, UInt(30))
        end
    end
    constrstate -= one(UInt)
    @test constrstate == length(state.fixed_available)
    return constrstate
end

@testset failfast=true verbose=true "Moment helpers" begin
    # the grouping is {1}
    @testset let grouping=SimpleMonomialVector{4,2}(UInt[1])
        # the constraint is 6x₁
        @testset let constraint=SimplePolynomial(BigFloat[6], SimpleMonomialVector{4,2}(UInt[9]))
            momenttest(80, grouping, constraint, :equality)
            momenttest(85, grouping, constraint, :equality)
        end
        # the constraint is (6 + 4I)z₁
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[6+4im], SimpleMonomialVector{4,2}(UInt[5]))
            momenttest(82, grouping, constraint, :equality)
            momenttest(87, grouping, constraint, :equality)
        end
        # the constraint is (6 + 4I)z₁ + (6 - 4I)z̄₁
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[6-4im,6+4im], SimpleMonomialVector{4,2}(UInt[4, 5]))
            momenttest(81, grouping, constraint, :equality)
            momenttest(86, grouping, constraint, :equality)
        end
        # the constraint is (2I)x₃ + (6 + 4I)z₁ + 8z̄₁
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[8,6+4im,2im], SimpleMonomialVector{4,2}(UInt[4, 5, 7]))
            momenttest(83, grouping, constraint, :equality)
            momenttest(88, grouping, constraint, :equality)
        end
        # the constraint is -10 - 2z₂² + 8z₂z̄₂ - 2z̄₂²
        @testset let constraint=SimplePolynomial(BigFloat[-10,-2,8,-2], SimpleMonomialVector{4,2}(UInt[1, 10, 11, 12]))
            momenttest(84, grouping, constraint, :equality)
            momenttest(89, grouping, constraint, :equality)
        end
    end

    # the grouping is {x₂²x₃}
    @testset let grouping=SimpleMonomialVector{4,2}(UInt[128])
        # the constraint is 2x₁ + 8x₂x₄²
        @testset let constraint=SimplePolynomial(BigFloat[2,8], SimpleMonomialVector{4,2}(UInt[9, 116]))
            momenttest(3, grouping, constraint, :linear)
        end
        # the constraint is 3(z₁ + z̄₁)
        @testset let constraint=SimplePolynomial(BigFloat[3,3], SimpleMonomialVector{4,2}(UInt[4, 5]))
            momenttest(4, grouping, constraint, :linear)
        end
        # the constraint is (7I)(-(z₂²z̄₁) + z₁z̄₂²)
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[-7im,7im], SimpleMonomialVector{4,2}(UInt[52, 56]))
            momenttest(5, grouping, constraint, :linear)
        end
        # the constraint is 17x₁x₃²
        @testset let constraint=SimplePolynomial(BigFloat[17], SimpleMonomialVector{4,2}(UInt[150]))
            momenttest(1, grouping, constraint, :linear)
        end
        # the constraint is 24x₂z₁z̄₁
        @testset let constraint=SimplePolynomial(BigFloat[24], SimpleMonomialVector{4,2}(UInt[110]))
            momenttest(2, grouping, constraint, :linear)
        end
        # the constraint is 3x₁ + 5x₂x₄² + (4 + 8I)z₁ + (4 - 8I)z̄₁ + 4z₂z̄₂ + 7(z₂z̄₁² + z₁²z̄₂)
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[4-8im,4+8im,3,4,7,7,5], SimpleMonomialVector{4,2}(UInt[4, 5, 9, 11, 54, 62, 116]))
            momenttest(6, grouping, constraint, :linear)
        end
    end

    # the grouping is {x₂²z₁}
    @testset let grouping=SimpleMonomialVector{4,2}(UInt[126])
        # the constraint is 2x₁ + 8x₂x₄²
        @testset let constraint=SimplePolynomial(BigFloat[2,8], SimpleMonomialVector{4,2}(UInt[9, 116]))
            momenttest(9, grouping, constraint, :linear)
        end
        # the constraint is 3(z₁ + z̄₁)
        @testset let constraint=SimplePolynomial(BigFloat[3,3], SimpleMonomialVector{4,2}(UInt[4, 5]))
            momenttest(10, grouping, constraint, :linear)
        end
        # the constraint is (7I)(-(z₂²z̄₁) + z₁z̄₂²)
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[-7im,7im], SimpleMonomialVector{4,2}(UInt[52, 56]))
            momenttest(11, grouping, constraint, :linear)
        end
        # the constraint is 17x₁x₃²
        @testset let constraint=SimplePolynomial(BigFloat[17], SimpleMonomialVector{4,2}(UInt[150]))
            momenttest(7, grouping, constraint, :linear)
        end
        # the constraint is 24x₂z₁z̄₁
        @testset let constraint=SimplePolynomial(BigFloat[24], SimpleMonomialVector{4,2}(UInt[110]))
            momenttest(8, grouping, constraint, :linear)
        end
        # the constraint is 3x₁ + 5x₂x₄² + (4 + 8I)z₁ + (4 - 8I)z̄₁ + 4z₂z̄₂ + 7(z₂z̄₁² + z₁²z̄₂)
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[4-8im,4+8im,3,4,7,7,5], SimpleMonomialVector{4,2}(UInt[4, 5, 9, 11, 54, 62, 116]))
            momenttest(12, grouping, constraint, :linear)
        end
    end

    # the grouping is {x₂²z₂}
    @testset let grouping=SimpleMonomialVector{4,2}(UInt[124])
        # the constraint is {{17x₃²z₁z̄₁, (8I)x₂²}, {(-8I)x₂², 6x₂x₄²}}
        @testset let constraint=[SimplePolynomial(Complex{BigFloat}[17], SimpleMonomialVector{4,2}(UInt[279])) SimplePolynomial(Complex{BigFloat}[8im], SimpleMonomialVector{4,2}(UInt[37])); SimplePolynomial(Complex{BigFloat}[-8im], SimpleMonomialVector{4,2}(UInt[37])) SimplePolynomial(Complex{BigFloat}[6], SimpleMonomialVector{4,2}(UInt[116]))]
            momenttest(45, grouping, constraint, :quadratic)
            momenttest(46, grouping, constraint, :psdr)
            momenttest(47, grouping, constraint, :psdc)
        end
        # the constraint is {{17x₃²z₁z̄₁, 8x₂²}, {8x₂², 6x₂x₄²}}
        @testset let constraint=[SimplePolynomial(BigFloat[17], SimpleMonomialVector{4,2}(UInt[279])) SimplePolynomial(BigFloat[8], SimpleMonomialVector{4,2}(UInt[37])); SimplePolynomial(BigFloat[8], SimpleMonomialVector{4,2}(UInt[37])) SimplePolynomial(BigFloat[6], SimpleMonomialVector{4,2}(UInt[116]))]
            momenttest(43, grouping, constraint, :quadratic)
            momenttest(44, grouping, constraint, :psdr)
        end
        # the constraint is {{17x₃²z₁z̄₁, (8I)z₂²}, {(-8I)z̄₂², 6x₂x₄²}}
        @testset let constraint=[SimplePolynomial(Complex{BigFloat}[17], SimpleMonomialVector{4,2}(UInt[279])) SimplePolynomial(Complex{BigFloat}[8im], SimpleMonomialVector{4,2}(UInt[12])); SimplePolynomial(Complex{BigFloat}[-8im], SimpleMonomialVector{4,2}(UInt[10])) SimplePolynomial(Complex{BigFloat}[6], SimpleMonomialVector{4,2}(UInt[116]))]
            momenttest(51, grouping, constraint, :quadratic)
            momenttest(52, grouping, constraint, :psdr)
            momenttest(53, grouping, constraint, :psdc)
        end
        # the constraint is {{17x₃²z₁z̄₁, 8z₂²}, {8z̄₂², 6x₂x₄²}}
        @testset let constraint=[SimplePolynomial(BigFloat[17], SimpleMonomialVector{4,2}(UInt[279])) SimplePolynomial(BigFloat[8], SimpleMonomialVector{4,2}(UInt[12])); SimplePolynomial(BigFloat[8], SimpleMonomialVector{4,2}(UInt[10])) SimplePolynomial(BigFloat[6], SimpleMonomialVector{4,2}(UInt[116]))]
            momenttest(48, grouping, constraint, :quadratic)
            momenttest(49, grouping, constraint, :psdr)
            momenttest(50, grouping, constraint, :psdc)
        end
        # the constraint is {{17x₃²z₁z̄₁, (8 + 2I)z₂²}, {(8 - 2I)z̄₂², 6x₂x₄²}}
        @testset let constraint=[SimplePolynomial(Complex{BigFloat}[17], SimpleMonomialVector{4,2}(UInt[279])) SimplePolynomial(Complex{BigFloat}[8+2im], SimpleMonomialVector{4,2}(UInt[12])); SimplePolynomial(Complex{BigFloat}[8-2im], SimpleMonomialVector{4,2}(UInt[10])) SimplePolynomial(Complex{BigFloat}[6], SimpleMonomialVector{4,2}(UInt[116]))]
            momenttest(54, grouping, constraint, :quadratic)
            momenttest(55, grouping, constraint, :psdr)
            momenttest(56, grouping, constraint, :psdc)
        end
        # the constraint is {{5x₂²z₁ - (17I)x₃²z₁ + 5x₂²z̄₁ + (17I)x₃²z̄₁, (8 + 2I)z₂² + (8 - 2I)z̄₂²}, {(8 + 2I)z₂² + (8 - 2I)z̄₂², 6x₂x₄²}}
        @testset let constraint=[SimplePolynomial(Complex{BigFloat}[17im,-17im,5,5], SimpleMonomialVector{4,2}(UInt[98, 99, 125, 126])) SimplePolynomial(Complex{BigFloat}[8-2im,8+2im], SimpleMonomialVector{4,2}(UInt[10, 12])); SimplePolynomial(Complex{BigFloat}[8-2im,8+2im], SimpleMonomialVector{4,2}(UInt[10, 12])) SimplePolynomial(Complex{BigFloat}[6], SimpleMonomialVector{4,2}(UInt[116]))]
            momenttest(60, grouping, constraint, :quadratic)
            momenttest(61, grouping, constraint, :psdr)
        end
        # the constraint is {{5x₂² + 17x₃²z₁z̄₁, (-3I)x₁ - 8z₂² + z₁z̄₁ + (8 - 2I)z̄₂²}, {(3I)x₁ + (8 + 2I)z₂² + z₁z̄₁ - 8z̄₂², 6x₂x₄²}}
        @testset let constraint=[SimplePolynomial(Complex{BigFloat}[5,17], SimpleMonomialVector{4,2}(UInt[37, 279])) SimplePolynomial(Complex{BigFloat}[-3im,8-2im,-8,1], SimpleMonomialVector{4,2}(UInt[9, 10, 12, 18])); SimplePolynomial(Complex{BigFloat}[3im,-8,8+2im,1], SimpleMonomialVector{4,2}(UInt[9, 10, 12, 18])) SimplePolynomial(Complex{BigFloat}[6], SimpleMonomialVector{4,2}(UInt[116]))]
            momenttest(57, grouping, constraint, :quadratic)
            momenttest(58, grouping, constraint, :psdr)
            momenttest(59, grouping, constraint, :psdc)
        end
    end

    # the grouping is {1, x₁}
    @testset let grouping=SimpleMonomialVector{4,2}(UInt[1, 9])
        # the constraint is 5x₁
        @testset let constraint=SimplePolynomial(BigFloat[5], SimpleMonomialVector{4,2}(UInt[9]))
            momenttest(72, grouping, constraint, :equality)
        end
        # the constraint is (6 + 8I)z̄₁
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[6+8im], SimpleMonomialVector{4,2}(UInt[4]))
            momenttest(77, grouping, constraint, :equality)
        end
        # the constraint is (6 - 8I)z₁ + (6 + 8I)z̄₁
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[6+8im,6-8im], SimpleMonomialVector{4,2}(UInt[4, 5]))
            momenttest(74, grouping, constraint, :equality)
        end
    end

    # the grouping is {1, z₁}
    @testset let grouping=SimpleMonomialVector{4,2}(UInt[1, 5])
        # the constraint is 5x₁
        @testset let constraint=SimplePolynomial(BigFloat[5], SimpleMonomialVector{4,2}(UInt[9]))
            momenttest(73, grouping, constraint, :equality)
        end
        # the constraint is (6 + 8I)z̄₁
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[6+8im], SimpleMonomialVector{4,2}(UInt[4]))
            momenttest(78, grouping, constraint, :equality)
        end
        # the constraint is (6 - 8I)z₁ + (6 + 8I)z̄₁
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[6+8im,6-8im], SimpleMonomialVector{4,2}(UInt[4, 5]))
            momenttest(75, grouping, constraint, :equality)
        end
    end

    # the grouping is {1, z₂}
    @testset let grouping=SimpleMonomialVector{4,2}(UInt[1, 3])
        # the constraint is (6 + 8I)z̄₁
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[6+8im], SimpleMonomialVector{4,2}(UInt[4]))
            momenttest(79, grouping, constraint, :equality)
        end
        # the constraint is (6 - 8I)z₁ + (6 + 8I)z̄₁
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[6+8im,6-8im], SimpleMonomialVector{4,2}(UInt[4, 5]))
            momenttest(76, grouping, constraint, :equality)
        end
    end

    # the grouping is {x₁x₄², x₂²x₃³}
    @testset let grouping=SimpleMonomialVector{4,2}(UInt[144, 929])
        # the constraint is 2x₁ + 8x₂x₄²
        @testset let constraint=SimplePolynomial(BigFloat[2,8], SimpleMonomialVector{4,2}(UInt[9, 116]))
            momenttest(17, grouping, constraint, :quadratic)
            momenttest(18, grouping, constraint, :psdr)
        end
        # the constraint is 3(z₁ + z̄₁)
        @testset let constraint=SimplePolynomial(BigFloat[3,3], SimpleMonomialVector{4,2}(UInt[4, 5]))
            momenttest(19, grouping, constraint, :quadratic)
            momenttest(20, grouping, constraint, :psdr)
        end
        # the constraint is (7I)(-(z₂²z̄₁) + z₁z̄₂²)
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[-7im,7im], SimpleMonomialVector{4,2}(UInt[52, 56]))
            momenttest(21, grouping, constraint, :quadratic)
            momenttest(22, grouping, constraint, :psdr)
        end
        # the constraint is 17x₁x₃²
        @testset let constraint=SimplePolynomial(BigFloat[17], SimpleMonomialVector{4,2}(UInt[150]))
            momenttest(13, grouping, constraint, :quadratic)
            momenttest(14, grouping, constraint, :psdr)
        end
        # the constraint is 24x₂z₁z̄₁
        @testset let constraint=SimplePolynomial(BigFloat[24], SimpleMonomialVector{4,2}(UInt[110]))
            momenttest(15, grouping, constraint, :quadratic)
            momenttest(16, grouping, constraint, :psdr)
        end
        # the constraint is 3x₁ + 5x₂x₄² + (4 + 8I)z₁ + (4 - 8I)z̄₁ + 4z₂z̄₂ + 7(z₂z̄₁² + z₁²z̄₂)
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[4-8im,4+8im,3,4,7,7,5], SimpleMonomialVector{4,2}(UInt[4, 5, 9, 11, 54, 62, 116]))
            momenttest(23, grouping, constraint, :quadratic)
            momenttest(24, grouping, constraint, :psdr)
        end
    end

    # the grouping is {x₂²z₁, x₁x₄²}
    @testset let grouping=SimpleMonomialVector{4,2}(UInt[126, 144])
        # the constraint is 2x₁ + 8x₂x₄²
        @testset let constraint=SimplePolynomial(BigFloat[2,8], SimpleMonomialVector{4,2}(UInt[9, 116]))
            momenttest(31, grouping, constraint, :quadratic)
            momenttest(32, grouping, constraint, :psdr)
            momenttest(33, grouping, constraint, :psdc)
        end
        # the constraint is 3(z₁ + z̄₁)
        @testset let constraint=SimplePolynomial(BigFloat[3,3], SimpleMonomialVector{4,2}(UInt[4, 5]))
            momenttest(34, grouping, constraint, :quadratic)
            momenttest(35, grouping, constraint, :psdr)
            momenttest(36, grouping, constraint, :psdc)
        end
        # the constraint is (7I)(-(z₂²z̄₁) + z₁z̄₂²)
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[-7im,7im], SimpleMonomialVector{4,2}(UInt[52, 56]))
            momenttest(37, grouping, constraint, :quadratic)
            momenttest(38, grouping, constraint, :psdr)
            momenttest(39, grouping, constraint, :psdc)
        end
        # the constraint is 17x₁x₃²
        @testset let constraint=SimplePolynomial(BigFloat[17], SimpleMonomialVector{4,2}(UInt[150]))
            momenttest(25, grouping, constraint, :quadratic)
            momenttest(26, grouping, constraint, :psdr)
            momenttest(27, grouping, constraint, :psdc)
        end
        # the constraint is 24x₂z₁z̄₁
        @testset let constraint=SimplePolynomial(BigFloat[24], SimpleMonomialVector{4,2}(UInt[110]))
            momenttest(28, grouping, constraint, :quadratic)
            momenttest(29, grouping, constraint, :psdr)
            momenttest(30, grouping, constraint, :psdc)
        end
        # the constraint is 3x₁ + 5x₂x₄² + (4 + 8I)z₁ + (4 - 8I)z̄₁ + 4z₂z̄₂ + 7(z₂z̄₁² + z₁²z̄₂)
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[4-8im,4+8im,3,4,7,7,5], SimpleMonomialVector{4,2}(UInt[4, 5, 9, 11, 54, 62, 116]))
            momenttest(40, grouping, constraint, :quadratic)
            momenttest(41, grouping, constraint, :psdr)
            momenttest(42, grouping, constraint, :psdc)
        end
    end

    # the grouping is {1, x₁, x₂²}
    @testset let grouping=SimpleMonomialVector{4,2}(UInt[1, 9, 37])
        # the constraint is 6x₁
        @testset let constraint=SimplePolynomial(BigFloat[6], SimpleMonomialVector{4,2}(UInt[9]))
            momenttest(90, grouping, constraint, :equality)
        end
        # the constraint is (6 + 4I)z₁
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[6+4im], SimpleMonomialVector{4,2}(UInt[5]))
            momenttest(92, grouping, constraint, :equality)
        end
        # the constraint is (6 + 4I)z₁ + (6 - 4I)z̄₁
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[6-4im,6+4im], SimpleMonomialVector{4,2}(UInt[4, 5]))
            momenttest(91, grouping, constraint, :equality)
        end
        # the constraint is (2I)x₃ + (6 + 4I)z₁ + 8z̄₁
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[8,6+4im,2im], SimpleMonomialVector{4,2}(UInt[4, 5, 7]))
            momenttest(93, grouping, constraint, :equality)
        end
        # the constraint is -10 - 2z₂² + 8z₂z̄₂ - 2z̄₂²
        @testset let constraint=SimplePolynomial(BigFloat[-10,-2,8,-2], SimpleMonomialVector{4,2}(UInt[1, 10, 11, 12]))
            momenttest(94, grouping, constraint, :equality)
        end
    end

    # the grouping is {1, x₁, z₂²}
    @testset let grouping=SimpleMonomialVector{4,2}(UInt[1, 9, 12])
        # the constraint is 6x₁
        @testset let constraint=SimplePolynomial(BigFloat[6], SimpleMonomialVector{4,2}(UInt[9]))
            momenttest(95, grouping, constraint, :equality)
        end
        # the constraint is (6 + 4I)z₁
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[6+4im], SimpleMonomialVector{4,2}(UInt[5]))
            momenttest(97, grouping, constraint, :equality)
        end
        # the constraint is (6 + 4I)z₁ + (6 - 4I)z̄₁
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[6-4im,6+4im], SimpleMonomialVector{4,2}(UInt[4, 5]))
            momenttest(96, grouping, constraint, :equality)
        end
        # the constraint is (2I)x₃ + (6 + 4I)z₁ + 8z̄₁
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[8,6+4im,2im], SimpleMonomialVector{4,2}(UInt[4, 5, 7]))
            momenttest(98, grouping, constraint, :equality)
        end
        # the constraint is -10 - 2z₂² + 8z₂z̄₂ - 2z̄₂²
        @testset let constraint=SimplePolynomial(BigFloat[-10,-2,8,-2], SimpleMonomialVector{4,2}(UInt[1, 10, 11, 12]))
            momenttest(99, grouping, constraint, :equality)
        end
    end

    # the grouping is {1, x₂, x₁x₄², x₂²x₃³}
    @testset let grouping=SimpleMonomialVector{4,2}(UInt[1, 8, 144, 929])
        # the constraint is {{3x₂x₃ - (2 + 3I)z₂ + 5z₁z̄₁ - (2 - 3I)z̄₂, 17x₄, 10x₁ + 8z₂z̄₂}, {17x₄, 0, (24I)x₃z₂ - (24I)x₃z̄₂}, {10x₁ + 8z₂z̄₂, (24I)x₃z₂ - (24I)x₃z̄₂, 6x₂x₄}}
        @testset let constraint=[SimplePolynomial(Complex{BigFloat}[-2+3im,-2-3im,5,3], SimpleMonomialVector{4,2}(UInt[2, 3, 18, 36])) SimplePolynomial(Complex{BigFloat}[17], SimpleMonomialVector{4,2}(UInt[6])) SimplePolynomial(Complex{BigFloat}[10,8], SimpleMonomialVector{4,2}(UInt[9, 11])); SimplePolynomial(Complex{BigFloat}[17], SimpleMonomialVector{4,2}(UInt[6])) SimplePolynomial(Complex{BigFloat}[0], SimpleMonomialVector{4,2}(UInt[1])) SimplePolynomial(Complex{BigFloat}[-24im,24im], SimpleMonomialVector{4,2}(UInt[25, 26])); SimplePolynomial(Complex{BigFloat}[10,8], SimpleMonomialVector{4,2}(UInt[9, 11])) SimplePolynomial(Complex{BigFloat}[-24im,24im], SimpleMonomialVector{4,2}(UInt[25, 26])) SimplePolynomial(Complex{BigFloat}[6], SimpleMonomialVector{4,2}(UInt[35]))]
            momenttest(63, grouping, constraint, :psdr)
        end
        # the constraint is {{3x₂x₃ - (2 + 3I)z₂ + 5z₁z̄₁ - (2 - 3I)z̄₂, (-6I)x₁ - 8z₂² + 2z₁z̄₁ + (8 - 2I)z̄₂², 10x₁ + 8z₂z̄₂}, {(6I)x₁ + (8 + 2I)z₂² + 2z₁z̄₁ - 8z̄₂², 0, (24I)x₃z₂ - (24I)x₃z̄₂}, {10x₁ + 8z₂z̄₂, (24I)x₃z₂ - (24I)x₃z̄₂, 6x₂x₄}}
        @testset let constraint=[SimplePolynomial(Complex{BigFloat}[-2+3im,-2-3im,5,3], SimpleMonomialVector{4,2}(UInt[2, 3, 18, 36])) SimplePolynomial(Complex{BigFloat}[-6im,8-2im,-8,2], SimpleMonomialVector{4,2}(UInt[9, 10, 12, 18])) SimplePolynomial(Complex{BigFloat}[10,8], SimpleMonomialVector{4,2}(UInt[9, 11])); SimplePolynomial(Complex{BigFloat}[6im,-8,8+2im,2], SimpleMonomialVector{4,2}(UInt[9, 10, 12, 18])) SimplePolynomial(Complex{BigFloat}[0], SimpleMonomialVector{4,2}(UInt[1])) SimplePolynomial(Complex{BigFloat}[-24im,24im], SimpleMonomialVector{4,2}(UInt[25, 26])); SimplePolynomial(Complex{BigFloat}[10,8], SimpleMonomialVector{4,2}(UInt[9, 11])) SimplePolynomial(Complex{BigFloat}[-24im,24im], SimpleMonomialVector{4,2}(UInt[25, 26])) SimplePolynomial(Complex{BigFloat}[6], SimpleMonomialVector{4,2}(UInt[35]))]
            momenttest(64, grouping, constraint, :psdr)
            momenttest(65, grouping, constraint, :psdc)
        end
        # the constraint is 3x₂x₃ - (2 + 3I)z₂ + 5z₁z̄₁ - (2 - 3I)z̄₂
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[-2+3im,-2-3im,5,3], SimpleMonomialVector{4,2}(UInt[2, 3, 18, 36]))
            momenttest(62, grouping, constraint, :psdr)
        end
    end

    # the grouping is {1, x₂, x₄²z₁, x₃³z₂²}
    @testset let grouping=SimpleMonomialVector{4,2}(UInt[1, 8, 79, 729])
        # the constraint is {{4x₂x₃ - (2 + 6I)z₂ + 8z₁z̄₁ - (2 - 6I)z̄₂, 18x₄, 10x₁ + 8z₂z̄₂}, {18x₄, 0, (24I)x₃z₂ - (24I)x₃z̄₂}, {10x₁ + 8z₂z̄₂, (24I)x₃z₂ - (24I)x₃z̄₂, 6x₂x₄}}
        @testset let constraint=[SimplePolynomial(Complex{BigFloat}[-2+6im,-2-6im,8,4], SimpleMonomialVector{4,2}(UInt[2, 3, 18, 36])) SimplePolynomial(Complex{BigFloat}[18], SimpleMonomialVector{4,2}(UInt[6])) SimplePolynomial(Complex{BigFloat}[10,8], SimpleMonomialVector{4,2}(UInt[9, 11])); SimplePolynomial(Complex{BigFloat}[18], SimpleMonomialVector{4,2}(UInt[6])) SimplePolynomial(Complex{BigFloat}[0], SimpleMonomialVector{4,2}(UInt[1])) SimplePolynomial(Complex{BigFloat}[-24im,24im], SimpleMonomialVector{4,2}(UInt[25, 26])); SimplePolynomial(Complex{BigFloat}[10,8], SimpleMonomialVector{4,2}(UInt[9, 11])) SimplePolynomial(Complex{BigFloat}[-24im,24im], SimpleMonomialVector{4,2}(UInt[25, 26])) SimplePolynomial(Complex{BigFloat}[6], SimpleMonomialVector{4,2}(UInt[35]))]
            momenttest(68, grouping, constraint, :psdr)
            momenttest(69, grouping, constraint, :psdc)
        end
        # the constraint is {{4x₂x₃ - (2 + 6I)z₂ + 8z₁z̄₁ - (2 - 6I)z̄₂, (-6I)x₁ - 8z₂² + 2z₁z̄₁ + (8 - 2I)z̄₂², 10x₁ + 8z₂z̄₂}, {(6I)x₁ + (8 + 2I)z₂² + 2z₁z̄₁ - 8z̄₂², 0, (24I)x₃z₂ - (24I)x₃z̄₂}, {10x₁ + 8z₂z̄₂, (24I)x₃z₂ - (24I)x₃z̄₂, 6x₂x₄}}
        @testset let constraint=[SimplePolynomial(Complex{BigFloat}[-2+6im,-2-6im,8,4], SimpleMonomialVector{4,2}(UInt[2, 3, 18, 36])) SimplePolynomial(Complex{BigFloat}[-6im,8-2im,-8,2], SimpleMonomialVector{4,2}(UInt[9, 10, 12, 18])) SimplePolynomial(Complex{BigFloat}[10,8], SimpleMonomialVector{4,2}(UInt[9, 11])); SimplePolynomial(Complex{BigFloat}[6im,-8,8+2im,2], SimpleMonomialVector{4,2}(UInt[9, 10, 12, 18])) SimplePolynomial(Complex{BigFloat}[0], SimpleMonomialVector{4,2}(UInt[1])) SimplePolynomial(Complex{BigFloat}[-24im,24im], SimpleMonomialVector{4,2}(UInt[25, 26])); SimplePolynomial(Complex{BigFloat}[10,8], SimpleMonomialVector{4,2}(UInt[9, 11])) SimplePolynomial(Complex{BigFloat}[-24im,24im], SimpleMonomialVector{4,2}(UInt[25, 26])) SimplePolynomial(Complex{BigFloat}[6], SimpleMonomialVector{4,2}(UInt[35]))]
            momenttest(70, grouping, constraint, :psdr)
            momenttest(71, grouping, constraint, :psdc)
        end
        # the constraint is 4x₂x₃ - (2 + 6I)z₂ + 8z₁z̄₁ - (2 - 6I)z̄₂
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[-2+6im,-2-6im,8,4], SimpleMonomialVector{4,2}(UInt[2, 3, 18, 36]))
            momenttest(66, grouping, constraint, :psdr)
            momenttest(67, grouping, constraint, :psdc)
        end
    end

    # the grouping is {1, x₂, x₁, x₂², x₁x₂, x₁²}
    @testset let grouping=SimpleMonomialVector{4,2}(UInt[1, 8, 9, 37, 44, 45])
        # the constraint is 5x₁
        @testset let constraint=SimplePolynomial(BigFloat[5], SimpleMonomialVector{4,2}(UInt[9]))
            momenttest(100, grouping, constraint, :equality)
        end
        # the constraint is (6 + 8I)z̄₁
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[6+8im], SimpleMonomialVector{4,2}(UInt[4]))
            momenttest(102, grouping, constraint, :equality)
        end
        # the constraint is (6 - 8I)z₁ + (6 + 8I)z̄₁
        @testset let constraint=SimplePolynomial(Complex{BigFloat}[6+8im,6-8im], SimpleMonomialVector{4,2}(UInt[4, 5]))
            momenttest(101, grouping, constraint, :equality)
        end
    end
end