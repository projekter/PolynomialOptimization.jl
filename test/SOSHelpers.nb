(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    789112,      16179]
NotebookOptionsPosition[    765086,      15765]
NotebookOutlinePosition[    765521,      15782]
CellTagsIndexPosition[    765478,      15779]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Monomial basis", "Subsubsection",
 InitializationGroup->
  True,ExpressionUUID->"d2adc66b-9332-4297-80c4-829a104f5939"],

Cell["\<\
Copy over the monomial basis:
clipboard(transpose(stack(exponents.(monomials(4, 2, 0:12))));
Then import it. We just give the result.\
\>", "Text",
 InitializationGroup->
  True,ExpressionUUID->"7bcd1241-d3de-4dbb-9e28-a1d9ac19d3ba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mbe", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", "ListIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox[
             RowBox[{"{", 
               RowBox[{"125970", ",", "8"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["30232880", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    CompressedData["
1:eJycne2V5MiOZAFnZr/Zv6vBqrQijAKr+AixJ2l2ATCcjIzsnlNTLxgsd9I/
AIPB4PF//vv//d//XhHxv/8n479i+y//5V/8t3w1rx9923ZZ15+/5s9vt3HP
p7fz5V//GVf//M/573Azvrzyetm3J91wmxvdbtf96d76n/tZtmZ0/bm5s4H0
04/m/YpbN7r+3B1t/tYt99Akj+Fh3R6HL58ei3/02+PR6KePyZe0yWPzKK+P
z8M+vQb/8rfX4eqnr8W//uvrcZVGeV2e4vW1eaqn1+fSb8NAy58OBw/412Hh
45+Hh/++3IwvLzd75PVr/7OkO4aVf+bHWQwzzbjzrTm1l3789NN1N34dRqW6
9Vhs3ev+5dHsx/EYbI+l68+Pdz5IenjTozce28OcLBdew1O8vY7uZ3b79TzF
22vq+vPr8ifz+vqe+m0YdP15OHjn34aFe3hEmma4vOySbcLweRNsw6j706u9
h9U7ZhteOnkaZsaEPwy7d9Q2/Dzs0zTwEr9NB3NAn0wPr/g6TQzK03QxWL9N
G4P56fTxJe9C20wrQ8uQMM086ut08zLMGNPPiL8uA0bkaTnQEy2wPPi/12XC
1aflwt2/LRsmgTXCMqKX1+VEr0/Liqf5bXnxtJ8uMxYJnbHseNvX5cfbPy1D
RuW35ciofbosGd2/Lk+u8vI0zrLlaRhLljHP/LqceWomheXNlL0uc4boablz
icll+bNaXrcBf562AzP227bgzXhitgk9vm4XrjxtG4bgt+3DQvt0GzFhTBDb
isZftxdj8rTNeOHfthsdfrrt+PjX7ccqpzW2I4P2ui1p/ml70u1v25TH+nS7
8vh/3ba87p+3L/99uxlfXm72cC9feb3N/zzpluHFDNCMH28x7JgHmvfLH5gL
uvPDbt2q3/Trpkch/Vb9WB4GVgujWo/r6WfV1+N70rbXUHvLy2V5tvr1POfs
nnpdz9n22rr/8BroYfBcbcOh68/Dcr54ehmkV0d6tseweVkkyxszy3B6+S/M
LsPrRbwNs9pjN7Jqe/i9fbAiNR3e4tu06H6sT0+T99w2Xbr+PG3ngyxv5+Vd
NqbTWzpxH0yvt+g2zbofa9jT7i26Tb+uPy8DnjHzuiy8dbfloevPy4S18Nty
4R6GkEelC5aTzUdi7nCjLDObw4VbZdnZ2G3LT+2lzWfauvWytDnFu9QytS/Z
lqvuX/ZKvXxtm7dlzEs9LWfmIm3Oz+cby9xmPoEHLHt7uG356368ZG8He7pt
WzDYT9uDtcwzsl3ssrZtw6Q9bR8m87dtxNqkT7YC24up4JXZbvaM27bjS93f
29AectuOLLanbUknzBnb1B50264s2qdty2L+bfvyUqwRtjNL/XVbszmetjeb
5rdtzqb6dLvzJXPMO9EH5oCtwRJk6WAmmAKGDrPBK72aD16aHczOxKywc9gR
mBlW9Ku5YfGwUjA/zPSrGWImnswRT06PtISZMlxLYDlmi29fzReLOg2NMWe0
8mrWaPXJvLE5sD2YO57i1ezxVE/mj6f9zQyyOLEp7CHMI31j2jCXjEK+mE2m
jKHBjHIpX8wpo5cPZhUjwT/GzDLa+WJuGf18MLvMSv5ifjFKPCzmmNnMF7PM
7OaDeWbW8xczzarID801RoXOsH2YcdYMY4RZZ9Xli3lnqzE5mHumMl/MPrfk
g/nHkjDJuANWd764BVZcPrgH3ih/cRNcZVHhNtg9+eI+2E354EbYZfmLO2EX
5oduhadm0eNm2MX54m7Y1fngdtjt+Yv7wRrkh24Iq5F/dEdcZfEyCHSCu+Kp
2IvsDdwYs8qY49Z4t1f3xtux+ZhE3B6rAxOBG2TrvrpDVhFLEvfIUnl1k0zN
k7vkEkaBxYUbZbVi03Cr7JFX98qqxljibrGQr24XC/bkftkd7HjcMTv21S3z
DE/umZX8m5tmJpkBRhb3zZvzRrhznujVrXMFp4GbxyW9untM3ZPbZ8oZWmAA
Tb7CAebkCRbgYH6DB1gjDDlwgc5eYQNr4Ak+sAV+gxEYpk/hBBubDcyGBWbQ
CRsP2MHGeoUfrCXGDjjC4L7CEhbsEzxhQbGAgCtMUr7AFrrIB/jChOQvMIaB
4MWBNbxYvsAbHjAfYA4N5djcd3CHjxmfwR68Ga0Ag1i0+QKHaDYfYBHd5S/w
iMfJD2ESj51/hEt4NVrDeQOjWPyMHrAKDPIKr7BxjDJwizXyCrsYvif4hQth
toBjGIlXWMawP8Ezuv4NpuFRWR3ANozSK3xjOp9gHNP8G5xjhD+FdQAIVi8w
D6P5CvdYTk+wj2X2G/xjGX4KA1lgf4WDfGRXAg9xBq8wkeX/BBfZFr/BRrbN
p/CR7fVXGMl2/DOc5L9/3IwvLzd7ePi+3Nt3Xm93M0n3DDPmAJhKs37cxTRg
LoCxdOtpOzAjwFsex4P25cGox/NLbo+p50wPU3o5pEcxPSr9Oh5GrCGrjtmp
1/Uywrqzi2oYvBnx3jUsXhzb8Kjf5WW5vOqXV0cPn5cr3oRdW8PqPQZaqGH2
HtmGW+0dtiGHrUJPg9c0qKOmxWtymx7d/+U13tPltbhNm64/T985Mellnt7O
6V2QXtVjmr38k22MOyF8YRl4uy/cDGENy8NG9LCRquXiTb0tG/WL98RKsZt7
Wdms4P2xsrXc7O5AdbX87Ey2Zaj2QBVY716e9lmgw1quttXbstX9oMtexrZ9
23LW9edlfb74slldtubLVm8se5vZxJ0THrId7AqXXV5tD7u2bZuoPdAVXqy3
j10WKLm2k13Qtq10P+i6t5ld0LbddP152/En7VqWXQjb0S4n7Vpqe9qFbNtU
94P2e9vahWzbV9eftzFzl3YlbGu7lm176/rzNmcv/7bduYelxVDyyHSFWbCb
S9wycA86ALNh972AgdAEmBODpcNgpMyLnfdmZtRvGg6k0Ujaa7cZMkwA1YOe
yjwZjhKVlblSv7vZUnvL8HUZlbU5MzYluivzpvZ2M6f7D2PLNnu6fzd/DPqT
GWTNpGHRMqw+x2WYScOmBG5Dt2A+DceXg7kyp5rs3ayqPaIm0GmbW8N5otwy
v2pvN8O6n+i4zbLu380zi/DJTLPX+XM+3zDfDjPSIUiZcy3q3azrfqL1NvO6
fzf3bI4ns4+NZu5wA9pMuztgkz25BTbfb+4B20KfmFpMGu6DpcrUMAS4FYdn
yxFbuRlt/t3dqL10OJeOYtoNOTKD/Si3pPZ298RD6P52V7p/d1sYJV3f3Rc+
gbXCH9yaI7J0BFZuTkZud3cMju5v96f7dzeIsdT13R0yyOxx3KOM6+4mMbq6
vrtLjLFtvr6/cZv4SPYOY4I7xURiEnCvTHl2E704ZKkvblf37+4XZ6Hruxtm
sWHzcMtyLrt7xuno+u6mcUYZ7901ixsbi/vGVWVc3TjOTdd3d47Ty3jv1nGK
GZ+5d77EJjDXvBt9AQNwNZhWTBimB5jAVmLJstSAD0wZQw2cYAiyXmEMzvDE
eFA8I7ADj4QnwUMAR7DgWGbgCZY1y1KOxTgsDRYE+MIOZ+cCZ9h5WTtpGLmx
ooE5rMisFcZKGS9/A3sYMd6AnmkRWGS6I6G1SBsAl2R8TfoM+MS/1uA3jGKT
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
UHSOnjOpxkQlWzSPnjM5NaFoHz3nTv+o32VZz7Kqb1lN0fSQ+l1WsC9UuUUb
qd9lcWjTSOp3p5PUnvzRsiZl0kxq77Dms2kntbfTT0y27m86SvfvtJSuP9NT
xH7s2XP+Uv7odAMZFxrLafVEBmU1ZFqFUjRX6HvNHyLEQX9psVoMMuiw0OeN
FlO/afkVKkzUL02bqV9XICTFok2nqV9EvU2vqd+dZlN7Vu4n6uym39SeNbuD
jlN7Oy3HJtX9TdPp/p2u0/Vn2g5OA1/En3NcVtN6oe81LlajT7pPRkNDPem/
0OeNBlR78kenW8640INqz8rkQReqvZ02xGjp/qYRdf9OJ+r6M60IVwfGYm0f
+l7PxyETg34Mfd5oSIyp7m9aUvfv9KSuP9OUGGViFPsGtXdDX+r6M415fv8B
nQnHg29mTKDyoK6gPQn5gNZANCAJtCimji3DEvFUHHI+2u/HoE8j72lU9ZuW
U6YVp2mVW9Osajyt+EyqI4p+Vb9ppWbTsep3p2V5WLWn/T7pWt2yrHBs+lbt
7TQuTlf3N62r+3d6V9efaV64SzAne50/0MAabO33Ezbq+6KHBQK03yddHPq8
0cZMntqzYnTQyWrPys9BL6u9nWYGhOj+pp11/04/6/ozDc2iIpbCh3lt6/ms
tJ90dejzRlsDjnR/09i6f6ezdf2Z1gZkwUUsXVd7N3S3rj/T3uf3H9DfcNzE
JvgE1gr0OJQSoTshoEOeglC4Yrue2qrZXfWmDq2XE/7nlWZXe2klX9Puam+n
3wGnur/peN2/0/K6/kzPY3SIucE6toF6vtR6mTR+5D2dD2jW/U3v6/6d5tf1
Z7of8A1ntXRd7d2kAXT9OR1wfq9heZsWwAjDQYD97BOKIoWKWlEhwG0ageBB
93daQffv6QVdf04znO2lxmWmHSLv0w+6/pyGOL9Xt2/TET8tmiu8pCci79MU
uv6crji/121v0xY/3/wlfcGXxKRgAWwEc8+70jdpD6hVKCyoEEJ/QmxCY9Ik
hBhAVaAZEAjoQjoFF4dJx3Ri8ki3sIXZKixxL+VaKkyxp7KGPmvoxqREZwBg
2GG8YaphoEnnwMjCeMJAwhzCCJL2gVmD6YKhgnkiLQTjA1MDA2PGpRgSmI9l
ZiLMXGQxEWOzjUiYyJSIkkiRdBMRFxEQkQsRCekoIgEQPMjcSLyQM4jYCLgQ
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
OS+4RjgIx5blE1gF/uNpgd3ViFX1Xk+XXFlNm516UGLmaYQVJpkelqwKAZPi
ntNNirBIElalqdqitrS1CNEbMrJ67WrLNGUPbS8b2GmS/Io3qypxLCu1V8tL
60X1WWO5wW4bU8/js1iOqc/63pqfeYxWHHVoz1y257iYLJrLOMXtsZzDbLrG
xTnnuczhAguT2VaL0mT5K95skYPizarKHNtD7dU2UcOmRnvbyJPcHtvFtsp4
f3zXT79j25399vZTvxIej+2oePP2eC+2a8b7Y77YzhmfHfeFmpBDTyhGQ7SO
mJVjwQi+GRTOOLK5qGPDwlUFuS5mpI4Ti3UxK3W8mM3QdswYuWI4erg7OBmO
IQNTsWnYQ14zrsYtcyUqsczWfmxZuBoi18WsCQJCgraZk00qc7cfcxbrYgbF
cZc5rNIPPSvmsSXiqet9DBoSLaQwSCqQEHBMGmQVRsRmltRJUeF4P1OsRe1l
UUXpkDMdulzMM9C4oA5e1La6/mSZAobsYs41LmXWHUyN49kw97pukdI4pi1c
rZLr4g70fHrT6R7o1G4inE1TRBAy+NN96J+UG0mwo9eY3UpXHOv5xrFv4cpF
UMRykGh3pPbGcXC4pRxcxzwWDneV+qzvb46HQ0mK4hJFIwpDjo+D1MTZ2O2h
zCqlEuhHk4U7JLuIoiRLsUDu0O4SrrhiPFCUJ7/Wiv84I7gqUwXaWjHdrIPs
yig0M67rMMdmSjUAZo4u7hkmppgJUJ0XZUXIWZFjUUDTnRMhFMLOYYMmksoe
6jWPw8OSYtlskWpHZ630AQ96xP1mWi/ABrK3iPXujs2Lo/7VhBnnuMgQX2AH
m9TwQ+MiwzdOI2hYErofeJLEXLbNhivy7y0mlH+vUw0GnFF7BWs0LlowA+bI
v98e0wcMynh/XF+sC0w6+224pH4P+feGT/Lvt8f5RX52rF/k3473o8qEw+Mo
6qf4j+P/SF6wOlh8h888iHWBd2vFhHlk68M1VVlaNVaZYSA5oeJyiHJs1Msn
eK/7zxKl2rBRVFTBR5Nk2u8NJ1ELhEWl4ZIz7fda9QN2hiV+er6GoTgbw9HQ
81WKLYvyJTpbMeFqEkobazQkySl2Zci10Sa8VXsFc0PtaYM07NXCvz3uMAyL
c4hplUjLy7GHcZQVmPD5HJfURE44jfM1rNa4pCYAbeiE22LUA9idcCrGXobh
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
MWQ6am+X6+h++aMp39H9u4xH15/lPBg1uGRiANtePZ+PSpqyn9BnPd+Q/+h+
+aMpB9L9uyxI15/lQWd7zlFNuVDos9obsiFdf5YPnd9/ICNCawL3BWZhrSDh
QW5E6pEUBlQxlKMptgpJgf5ASEOmMsFsZS/dc2F/3ciX+FL9ar+fNF1e5U3q
N32SQPrkgJY9qd/0CQAtg1IXuxwKJ6j2tN+nTErtLVfOt2xK7e3yKd2v/T7l
VLp/l1Xp+rO8isGCeyZmwFZ7DjUuqf1+0pD6vmRZoesalyHTCn3e5FqAArXn
kwiyZVxqzycKDFmX2tvlXbrfJwFky710/y770vVn+RdghZwRsb4xlp7PJ7hM
mVjos55vyMV0v/b7lI/p/l1GpuvPcrKzvUP7fcrLQp/V3pCZ6fqz3Oz8Xsvl
reyMTUWOgtgSn+69XlIIUqqkro4oSgzq4SJfAwJmm5YGi6H1ctLJeZW3qb10
hXjL3dTeLnvT/VovUwan+3c5nK4/y+IAs+QW4YSMxfV8qfUy5XOR9zI63a/1
MmV1un+X1+n6s8zubG9pvUzZXeS9/E7Xn2V45/calrdyPMA9uVY4MscmJQnK
vMr2Iu/le7pf4zLlfLp/l/Xp+rO872wvNS5T7hd5L/vT9Wf53/m9un0rA/xp
0ZqRiyww8l4eqOvPMsHze932Vi74881fZIN8SY6D2BRMgK1gDfDOPAOyQyQ3
pO5JkZJqI7VECofUC3JFKFqoMCgVKARCdUJs5I2EKkBeIB5QCgiEDBJXiWvA
BGM6bSLLFLDl2CreErXkWCpeEjWFWVMwJjdaOYfCDAUXiiqUUCickGOi2EHZ
gnIEJQcKDJQVyDdRGpDJJ7NORpxMNzJPMsZkcMm8klF1BrUymWQgySxqfDrz
R0ZP49MZOQ1Ky0bZ/GRayGSQWSAjANOPzBTmG2YZpheGFuYVOSoMJowiTCAM
nxm9YtZgxGC6zGwVEwXDpPdrhkjv1/JWnByMAwwAkTsROTJYIlsiTSJEIj9H
ehVxESkRATniqQiFyMORRkUOWZHAz9+NsEG8IFUQqBFnIT8QG0jMyKuQEgjI
iKcQTBYi+fm7kQEeHU9tz1yeFA9pj1geLstj/fzdHgbPYU9Rlj/LkkdOy5xl
aX/+btkvO5sVzEwzkrwZT0RPyIV9HEly7AzHenHMMD8/6VNcSl4sUKSUQkg3
eP7tUwiXT38qGbKCIFEGkT68L3043pApi4TzYUrpw4qGfDl0Xft3yJl5m9Tn
kjXjtNPH6SwfU6b34/QkTqlpGbTeL/l1ck7x53RFTrUqubTejx9D4UcSOGy/
5dR6Pw615HDEllnr/TikqmXXzJLer+XXgNP0cWt6Tk6D5BSulmnrOX3cdC5+
BYTTWUvGrefkR234sYuWd+s5OZS05d6sIj1ny74JgtUvv0bCKbEtC1e/PkM0
fabnkIurX350qeXjrFr12zJySF21x6+Gtbxc7fmsryE3Z/WrvZadh0UDur9l
6Lp/l6Pr+rMsHTCJVoUcA9wOMR9YHhm7gpFIjtXjGG+f+pk+ba3k7iIflFIM
6QbPvw/dV3J4kd+iCmP5EM8hkw9d1/ocsvnQ500+T9CUPvZPz8nppJwK1zJ7
PWf6OPLkV2k4Lbhk+HrO9I8t8SMsLc/Xc3JYbsv19Zy7bB9yRv0urc/FacUt
61e/S+tz+TeZhtxf/fJjYC3/V797GQDJBrXHr9Z1eYDa89m8o1xA7e1lA7rf
ZyeOMgLdv5cT6PpzWQHBLtoycoJwsXA0lB+I3ArNn3SDqQRHXMoTQt9r/qQb
vJQthK5r/kYZQ+jzVs4AqaZ+NZUi5uNS7qB+00fEp4927zII9Zs+2rzLItTv
Xh4RThKpvaX5G2UTas8/1TPKKNTeXk6h+w/N3yiv0P17mYWuP5dbQDKi6SQX
Tw7E3GjNXep7jcso0whd17iMso3Q5618I5w0U3syAbOsQ+2lxmWUeai9vdxD
9y+Nyyj/0P17GYiuO3i5KQcJJ/NStlTPN8pEsLGp63q+Qh+h5xvlI7o/9Xyj
nET372Uluu6g6qa85GzPNR2z3CT0We2NshNdT7V3U35yfv9BGQpBPtpEcspw
+XB8cDdwFZSv8GxI65EwI4VF+onEknIXpFNIVJA6kNonhU5ZDKlDUlCkXEht
OCVRlDUULVSoKcyi4qC8TFUV1ZNRVEmTPdEQAFPLlmWJshQoy9H7ZXKcLT+D
4VO5OQ21ynf0fumfz0h+hY3T8au8R++XPhw9+fXSKvvR+6UPO+0yIL3fXg4E
qZk+blfPKTwpx6+/KRvScy7/nMfiV+I4vb/KivScyz+KuPxjaV1upOdcPtS+
y4/0nHsZEkkT9Ss8KYehv9Wv8KQMvf5Wv12+pH6FJ2c5k/rdy5rCyX+1Jzw5
y53UnvDkLH9Se3sZlO7/rkWi+4lG9vIoXX8uk4KMRPOMVoUcIbkDOGHKqrB1
6WOVl+7X+kzhSS2cUJZE92l9CvmkJjAu5Vmh77U+5REvZVuh61qfo4wr9Hkr
54Js13MKOqlh/a3n7LIvPWf652OSXy3k1ySqLEzPmf6xTn7Er8vF9Jz82EKX
j+k59zIyknnqV3jSv86Rs8xM/QpPZvq3PUf5mfr1bwCOcjT1u5elqT3hSf+W
S85yNbXn33gY5Wtqby9j0/02WqOsTffv5W26/lzmRpKEGgW0ZeT0yfVRDgcm
Sd2n+VvCkwp7Q2oIfa/5k27wUkYXuq75G2V1oc9beR1JWPUrPOlfU7mU36lf
TXVKN3gpy1O/wpOzTE/97uV6ak94kp++nGV8ak94cpb1qb29vE/329mMcj/d
v5f96fpz+R9JaWqD0HSipXGOvWIA5m7pe42Lf4oo/RNCOcoIQ581LqOcUO2l
xkW6wUuZodqTaZhlh2pvLz/U/Xa+oxxR9+9libpuUvumPPF8PukGS3s9yxaJ
1bGxS9f1fDfljLrfoGCUN+p+mfhZ5qjrwpN35Y5newYXs/wx9DmN2dQeLNOb
csjz+w/KIkmKUXuDZhKtCjlscpOUUYK5GStK6yjRoiSJcsv4Kqn0+TfSW6Sm
lnSWhC1XSX5ytcSmJBOZlYIfLNtevgk1DMVEKE9ISAhEmSfQARPNVmdpewnx
s2T+0ej0j8l2eaieM/2jP10uqufcy0YRkahf+SP/+lPOslL1K3+0pBvMWW6q
fuWPZvmp+t3LUNXeUS+l9ro8Ve3JH81yVbW3l63qfoPj6DJW3b+Xs+r6c1kr
SXpq5dA4oy1Dc0L5K7ExNm3pPs1fdnls6HvNn5ijS9ls6LrmL7uMNvR5K6dF
/KN+5Y/8a12Xclv1K3+0hDAuZbjqV03Nslz1u5fnqr1Vi1Htddmu2pM/mmW8
am8v59X9Dmqyy3t1/17mq+tOEt6U+yKGSnFNVVuAptNar+KiwBDM3aHvNS7S
DV7KhkOfNS6jfFjtZW1OtSd/5F9qTv8y86XMWO1pyc1yY93vIG91+bHu38uQ
dV3+6K4c+Xw+GwtqgGaZMpwxWN82Vs93U76s++WPZjmz7pc/mmXNui5/dFfe
fLbnIHaWO4c+p7kDtUc24U358/n9B2XQiHGoiaWWAQ0p2jLKpeHAwC6sGVGN
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
VFathG1yz8qaGBmMmqx3pP1j69MG4F7sN+pFX+os72sZRz20xsvBemf7rRWV
zXrvRXda8YpQnvUO2rG+0qByn/X+jQ7V1dfXMdp6mB6vC+ud7bxWdDjrXZlo
vDPomx90qpRnRHrRqnKf9f6NXrXi7XnqQyJZUeisd7EjE5XOSvhKv/o8R9/8
Kw1r/QwYU6OGk02uy7Vb1cRSYfRmvqDtjU1YW9GKlp81/UO72fWK+TLGc4Wa
8XIxXziWdtQ984XjaXnD0DcPSAJ9U9O4JrMTrV8jymSLY764Gz9q2nWM+gpb
13jdmC8cczv6n/mi7DzeOfTND5pZyjNfOAYXawD65lfa2bpO8CrH42YZYL5w
TC7WAfTNr7S0z3Mk9r/S03pK9TVOjg/a2rom1vODxrb6O51tXSv4thgXBLnv
NLfcZ1zikvugu63rBPFy8Gw2BcaFjXyxK6BvfqXDfZ6jb/6VFreuCRr+oMmt
/k6Xy33aTaj9B23u87xpV+64b/S5v8uFNOtf0ehKJik4VCOLk1/u1HBiDsdD
38ZCiJEW+7qlleNz0BZ51/Y2nzMje0HYKt70vfWzwOHVY2z1EPypLR01sZ11
QjXv2t7tEzJzBTJegdT3QIKXlFUH8nL1Uqo43+O60lWjaVtTria65U2vo4JE
5B4RpWeL9ZW4cl/m3DCi8mvA8sX5PsKAf3SkxJqY1yuxRnds+HUd313Fpl/R
rZS5/DYjbXK+H2emSuagBJpx4Xxf7CLNuCx64wqqoBMhdyXiqRJx1RPpU4nI
qERIVCIC6mcQ35GCi/N9nKwqvzWohRqE1RXfeQWx08u2gVWsTrA/5/tiQxkP
J/1bnpcei3990ClrgdHCEYvDaMy9sJ+1JOseia4+6JZdmT0zor7SLnvX4Aqd
FAqPmWStFtHXxKIZo7LQHTW+3qs268vI6FnLzJfmfD/Obs73hRJhvjBNN3sM
84XputAknO8HtMj5rstbV9hhnakxUfTa2kY7as73ccJrHGnO9+EoYNpvFhvm
C9N/oVs43z9opSnPfGFZLPYbzvevNNN1HTIJlstmy2G+sGwWew7n+1ca6uc5
5/tf6ajVGvsaUMIHTXVdw9nwQVtd/Z2+uq5FhsH5vlh9GBeW42L54Xz/Sm9d
1yHVYJluViDGheW6WII437/SXz/POd//SoNd15B4fNBiV3+nx+Y+7bK8P2my
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
59TH+b6iuRmXMatzvh8SOc73Mbcj4B5yOQTAJpylJrv3Nss/7R7zPO1ygCxz
Pef7IavjfB8zPgvvkNgxMZuwlxozv1HnktzJfSqlLeEvJTu/X9Mkyh9ugt/r
PUFEW0s4ylI21d9Dv90J11XbrfCsd8JpamWPUtuocTvUXSuok/V+jFas9+jW
nsG4J+r6cFPUVdtd8XxRwnJquS9Y74TnTMoZtJ+6jxbEtJSa7ASbMk2PMa3G
/VH0j/UeiPiHW4T+te6Rpn8s9OMuYQHHJKLo1JMNfrlTqI+Fs1gDivp0szDx
D8khE3rcL8UEHfLDYuIlo89k+VIr3O6aZ1yaD7ndNx0j4zMuzQcJU9zKYs9A
GpO+3DyMSzMgx+3DiyYie1LSSpm73ULURwOLHYFxad1FFDgkj6z3cSM1633I
H1uLVyTji/W+3U1Pu/zZZl+gXapZbAysd8KV6rinMJgdkkkMNk3YUo37ShYH
SSjlMpa6mvClMjub2vyH2+v390vQ9Icb7PcrL3fY8/0Idyq5ET/cZHXVdpc9
IxufyXKf8f0OWSbfL1THH+416uP7LTaKoj6+32Gn4PvFhXXcccWHGDLOYoCT
GVnm7g+33dMuw7/ZLmiXz7HYL+hIGCyOm6+pYEg/mwfx3I0bUNYMSUHlnJZy
nDArQOa/+7ndhr/7udyHTz8Jv6rlTqSfh2yUfo6bsejnkJAW/SQcq8YNKXuH
JKVyYUuJTlhW6a6U5UMyUzmzpU6Xub0Jz6KxYYe3NpNgm5zMJCYmN5AkPyT0
Exzm6Kr8eki6ePwIecnL7AyuZpT5kzvdXOHJ3T05UJWCzHlnjrfkXJvcSlrP
4p41Z8vk1mDPmdwOk5uAOSUXfw9nn7PGGHdjX41pNIYvMXWDbXaX0lihUONm
l0UzvgClO20/2jpiexgdQ9lRWSmyy5wx7qnZ42aNtnORQ63MiuEuSj+vSU5o
EqMkN5lgUKVPjV0KxTksk31Sa+W4s7ERPYEDXOnnhWy5UtLTT1O732X2IqVd
UwSbFDTJw9rga62kGpejhGJiPG5zTHArNSHtmuLvp0zpprU17vVKii9UmuNu
7zj1EJlPCiNEzzqpbig/qWA4ck8KlIvyJ0UH9011kVQSvxf0P2cXe/bvUMlK
SSoFp1SXoaicIFNPTY1oCtsewtnMh8JFLUPqCykmQg0x1AFapQMjMJR8QqIR
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
y3k0aXiYZpORQiZwGdqMZDB84iNtT4Utrk3I0kNSvtL50E+m4eTSOGl+WLgh
8pYQelLBTBogpqUEbBJ5SfAzGXFMF5SACwMaBMYLmBVYo8EzqBvNoWaBlW0g
qJxO+Egn/VCHJe+S5LYF59YKK3kmzmLReyYM195k7s9ECTe2nGVi++uEpzA/
Dxsf85NrL1J45idX7nfvHCbMz6T2kFJdqjtDQmrCYfhcPex/fLakT+pDQs9n
TDol7tMu8/OkV2J+/kP3nivtMjEn/RLdNFOKDPUyBxphU4brfKRrqrAUdtI4
/e4n3a+Vxol+8hqT0+Wkd+JF/+F1nmvXSU006Z94LX439ylHATM1mSYqiZpM
aGTiGAn7JVI04Cgsi4YjJb1UhX2xk3bqv02F/L9W2qmn4//hsblq6qSj4v3+
Q7Hn2jUpl2rSVVGc3819yvF+yUBVprXi2vxu7jfPKc+fmfCqkgYr6bCa3839
5nlTjr/7Py71/9THf/9vqsntK9XeGb6fLPNfET//yer/T0b5/9Kb/6c/q0sz
bff8DG4XirG6TwwTM51Xejvdyutefka3G8Vg3S+GmZkOLKM7r5VpcbtNKT7r
tjE8zTRiWSUzHNn2fhS3dfMYzmbasZzeM3wR33/pDjLsLUrBrwj7M8wRAv7J
YfJPNut/sgnPZ8hi/k8Wy3+yCObzZJL9XybPfK5Mitdn47t1plVn+XS2+Y76
0TkFOqutMys7s+x8/kxLs7sZRai3TS3I08dV7mqY6ZNlazY7oyb1Lqr1edq6
q820y3FkNkOjZvUuq/Urbc00jTpl1lOj60WhaB2c6Rwjo1nQZdsRlTrTPcJg
NrmWBXaWQTbzLPqzLLK5vJYH43xlW7ty7F5RA69onVdO+yu76pXd5yyvbIdm
CzQqVe+tWrXSjKfGLMsc72aLNCpZ771WFaXZWcZRS80qK3uBKB+tr7PcGefL
LPOyGYn6ne0gxuYIb5csu7NNRBnIoXS2jRzir+2D8bkjvtxRo++4a+9YIe5I
f3dO2bPtRNwxi6bR2qIatDYp5c82FfXcbLuyOoh+0io92xnjcwfcdcvyJBp6
trtgCmKku2Ufnm2Q8bkjdJ9tkfF5b4+830/MCD9xU/8EzfETK9tPtJuzncbc
YBZh2SpEdWltn203NtdgWn5krxLlPdtybFjBMPzIqjzbdWw4Md6e7Zv3e2/j
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
Q7OhRKckpoQViWokICWbSDIjmfRIGr+vRzLwxM8JPyd2zwn8+3pO1J4T8vf1
0Ha4g7rCncl+cUfUN7RntijtR9KytOl3TG9muuVk/etkW+pktRm6EIRboHBF
PPpzvfm7K9kZr2TFGnoRlFpcSkU8+nO9Kc8+uWhIMK5iMqpOEsROksFFU1I8
Z5/sJH1a9CXFffbJRWfiaDS/h9ZEoa2TluhKujfGx6yIZqMy68+hQ2F8uk0P
Z5pqxqfNWmm2sKFPYXw6aa6bfZJ49OfK+ByaFcan2SeJR3+ujM+hYWF8TC5q
kspDz8L4mCzs0LU4SxifQ9uictNJe8f7XeyTbXZOs6Idmhfe70q67ot9knj0
58r7HToY3u9inyQe/bnyfocuhve72CeJR+9aNDK8n0llD61MZfbzfodeRuML
/bzZJ59ARK7089DQ0M+bfZJ49Cbwjyv9vNkniUdvAvS40s+bfZJ49K5FZ0M/
37Q2Oh9oN7mnO7mgF+0N7SZXbSd37KLDod3kJF30OLT7psmpgGCoL7n/Fn0O
9SWn3KLTob43rQ7lk+Nr0exQ/k23w/0/0+6obBlDJaZLX5w2UG0j6rzS9aC0
V5vG0bTxN3/XyTbbyfI39D4Y64AcF/Hoz/WmPOt30QDhNMJlX8SjP9ebckMT
VDxn/V5JNrvog4r7rN9FJ1T8ftEKaZTopKfk/Zr1e5lN1yyGh4aI92vWL/Ho
z5X3a7NcD10R79esX+LRG+A4V96vWb/EozcAb668Xyfpu8mgD+0R7/emP9Jo
Sj8v1u8DaOZKPw9NEv28WL/EozcAYq7082L9Eo/eAH250s+L9Us8eteiW6Kf
b9olnYa0e7N+iUfvTctEuzfrl3j03nRNtHuzfhd9E+2+aZwq4DXqI+f9pnei
vuTIXnRP1PemfaJ8cpguGijKv+mguP9nWiiNZcaEilEVW6BPR1uvNFIYyYv5
+QDmuN6UZ37eh24KZ20xP4lHf6435YaOqnjO/CQe/YOmqrjP/Fy0VcXvF32V
xnz6yRQAIMWVfh6aK/rZzE/i0RtAElf62cxP4tEb4BBX+tnMT+LRuxZdFv18
02bpzKbdi/lJPHpvWi3avZifxKP3ptui3Yv5uei3aPdNw0V9N/OTePTe9FzU
dzM/F10X9b1puyj/w/xcNF6Uf9N5cf/PtF46YYw1F/suZklfcXxI868px/cj
Hv2DHqx4zvcjHv2DNqy4z/dbNGLF7xedWAWEQLtsiTie64NujHab70c8+gcN
Ge0232/RktHum56M+i6+H/HoH7Rl1Hfx/RaNGfW96cwof/P9Fr0Z5d80Z9yP
0egL3VkFlNHsGWVMjVjIYFBmT2meMy6LJq24z7gs2rTiN+Oy6NOorxkX4tE/
aNWorxmXRbNGfW+6NcpfjMuiX6P8m4aN+zGifaFje/oXLh5jAzdNm7JRc5/+
jXZV9G/Rt1G+6d+ic6M8Ye2b1o37GLW+0bs99YVLbdO9Fb+pb9G+cb+p7wv9
2/P8X9DAacQ25l0Mvtgpfdb6svRRaJOXRs4+Sr0khYtUGVIuSDFgKL/0c4aO
GoJmqI8hI4ZIGIogXZ0QY6GcQgKFwAk1C0RsIDZCNYQmCAGI635cu7oydRnG
1TcuK11DcemMS6RrXArHKVJHFVCkcOt2C3DKO7Wk12N8uk2jzvigd3ehd3e1
2biHjo/xQe9u4tGfK+OD3t11aPsYH/TuJh79uTI+h9aP8UHvbuLRnyvj00mq
3knOfej/GJ83DaDOw056eN4PvRvFgCvvd2gDeT/0bgRwrrwfejcC9XO9eD/0
bgRdrrzfoR/k/dC7EUC58n7o3QiSXHk/rSlvukJBDfQTvRuBiyv9PLSG9BO9
G4GHK/08tIf0E70bQYQr/UTvRqDgSj+19rxpEitgPtpF7+Zg5kq76N0cqFxp
99Ar0i5696ZbpN037SL1oXdz8HClPvRuc7lvekbqe9M0Uv6fWTyU15r1pm/k
/p9pHHVqylliDJXYVzFHYhH0MUv/6NnS/B3rt9G7WUBcf/F3QxcJCAa9m4nK
9aY867cPrWRRjvWLhNpMAK4/lGP9IgE1H4rrzXPWLyd396KnLH6/aCp1+vN+
qGA0zJX3Q0SgogJVQnnWb6N3P2ENlGf99qG/5P3Qu5t4dP6MckOPyfuhdzfx
6N2LNpP3Q+/uRaPJ+73pNAUj0U/07ie84uJKPw/tJv1E727i0ek25Vi/xKM/
V/qJ3r3pOuknevem76SfbxrPCgiXdtG7m3j03jSftIve3cSj96b/pF307k0H
SrtvWlDqQ+9u4tF704VSH3r3pg+lvjeNKOVz2C1aUcq/6UW5/2eaUcEocjAZ
EyqWXwyl2CppSZWRm/LMzwu9+5kOlB/60qIc85N4dKYL5YbetHjO/CQevXvR
nhb3mZ+LBrX4/aJDFSRHP9G7nzCciyv9PLSp9JOp0sSjM10px/wkHv250k/0
7k23Sj/Ru3vRr9LPNw1rBRxOu+jdTTx6b5pW2kXvbuLRe9O30i5696Zzpd03
rSv1oXc38ei96V6pD717079S35sGlvIRwhYtLOXf9LDc/zNNrOBGud2MNTdG
SGx2MJujc/vvohzf70bvbuLRn2vznO+3aGiL+3y/RUtb/Ob7LXpa2m2+343e
/WwnXR/0tbTLltnEo3/Q2tIuevemuaXdN90t9aF3N/HoHzS41IfevWlxqe9N
j0v5CM+LLpfyb9pc7gds8YU+9xmXJ5CjhrvCmENjPbTduZc82yXPGRfi0dk+
uc+4jJcLvbsXHS/1NeNCPPoHTS/1cTRv2l7qQ+/e9L2UjzKx6Hwp/6b15T56
9zd636d/xKMPF8+m/dUXoWx0cZ/+faEDpjxKxKYHpnzTv0UTzH307m90wU99
UZY2fXDxu6PTUp/ewr/QCT/P/wWtsOA4ue+MxTeGSuy6mFaxitIRa6NwzKRg
lepSykQpAqUvrlA+SR0jRYdUD1IbhEJgQoINvTSEz5C1n5oQmOfa14QO9HWg
+gO97h4oL8dsD1Szr0WbLFRBV5wmfU2nmuA0OUmzrAqhKOKW79bhUsmUvHg/
5MmrkCefY55yQ9fM+yFPXsSjP1feD3nyIh79ufJ+epHf9M6C2Okn8uQT7nlx
pZ+HBpp+Ik9exKMjZlCu6Sfy5EU8OuIHzy/6iTx5EY/euO+qj5f7TStNu8iT
T7jpxZV2D+007SJPXkQA96ajpl3kyU1PTbtvmmrq+5mPRH2Hvpr6kCc3nTX1
vWmtKR9jSB2aa8q/6a65/2faa8HMcnnKLWJMqLE4YvSlydbW6t5/UZ752ciT
uC+LKCTKMT/x1CHeUW7otovnzE88F43bs9BGuM/87EPLXfx+0XMbXEE/kSef
sOCLK/08NN70E3nyQrNBvKQc8xPJ97nST+RJ3K2FtsR95mcfOnD6+aYFp13k
yYsVgNjaXGkXefKiB4izPGd+Eo+OeMt95uegON4049SXTaORJzf9OPUhT246
cup705JTPka6PjTllH/TlXM/YM4vtOUGxTQ+meEsMtbcGL/E/ozvRlnSfzfl
+H7Eoz9XNkvkSdzQhTbLfb7fokkvfvP9Fl067SJPPmHgF1faRZ68iEd/rrSL
PLlp1mmXKbtp12n3Tb9OfdnsL+TJTctOfciTm6ad+t507ZSPcfU69O2Uf9O4
cx958hud+zMuvztz13CgyV1hzLA+YHVS9xLc7oX1gPuMy6KFL34zLosenvpy
+BGP/kEbT33Ik5tGnvrYEjedPOWRJze9POWRJzfNPPeRJ7/RzT/9y6Esp+Om
oS/utza2yEb07ws9PeWRJzddPeWRJzdtPfeRJ7/R1z/1xZi+6eyL39S3aO25
jzz5jd7+ef4vaO4NqpFTWo4ruQmMCTVWTFp8fX7qIM4dXOOH8huXYg1VKSam
Gmo5VMJDr4/IcKhCWOKHdr+uCfltYA8bnfam4xcyKyRMaIkufF3BcX2OCVtT
mCYHVdeoaiPaeIS4FWXp3fST8+iuQ/9PP99pAGj3mj+mXc6jnSaAdjmPbuLR
e6cPoArOo51OgHbfaQWoL0JqcR7tdAPUx3m00w9Q3zsNAeXjDKqTloDy7/QE
3E+wwJc0BQZlNtiA4c6T88RY88SgDoag73MG3X3+/VCO79ecRzeIp480CMV9
vh/Ij4Vq5Dy6V3oE2u356LTLebTTJ9Au59GNxbd3WgXa5TzaaRZol6HY6Rao
L8oFEn/vNAzUx3m00zJQ3zs9A+U5j3a6Bsq/0zZwn/PoW/qGZ1wy+Z9t/arh
UJK7QiyStlFlWveSm3h0zDfcZ1wGPcp5dK90ENTHefSYebo+0kRQH+fRThtB
fZxHO30E5TmPdjoJynMe7bQS3Oc8+pZe4ulflEC5hXfaieJ+6+uJjk7/vqSj
oDzn0U5PQXnOo52mgvucR9/SVTz1xWm701cUv6lvpbHgPufRt3QWz/ME+/wt
rYXB1/0z3JhyGsklYYy5GCFtlsqarvH+qfk3lN4o3TUUrJhOayjeUF2Gkilo
4qHESKh8T8iIm7rQSiFsgUKN65Z2j6k9JttR5VWZInrPkdVnKHrI6zQaFOt9
p+2gPtb7TuNBfe90HpRnve/0HpR/p/ngPuv9W7qPZ1xyuD1i0lXDlSZHjZhD
fSDqrsoMjzjFfcalWe8Htc16B65Vh8xPI0qz3ndaEepjve80I9THet/pRijP
et/pRyjPet9pSLjPev+WjuTpX4w7cojvNCV1HV/uTltS/KZ/K30J5VnvO50J
5VnvO60J91nv39KbPPXhNP9Id1L8pr6V9oT7rPdv6U+e5z+s97+lQfk9XyIE
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
fxfrXeMJ5untLWC9G4urr1YbG2br5VW4WO87HTvlWe87LTv3We/f0rM/9d2s
952uvfhNfTfrfVg3wQ1+Td/+PAc3+Nc07r/nS4IYFErMsfuR5r3u4c4w5tFY
k+VVqbFtRKa8MQEyXzCnr+TLxXwZI1YxX453hvkSqpDFKsp8SYjN8eLUNS5s
yl9jgoypJyI28+Vvaeaf/jXzReMaZvvtLWK+GLOtT19bLOb85VVq5stOU095
5stOV8995su3tPVPfRfzZaexr66v6ey5z3z5ltb+eX4zX/6W3v73uCQ4WWPj
R9r7uoYLyRj2xeLKuOBGWF61YlwGhANuUIonQ/MP+2sxLjG9X7gZjndO8i/B
PIctlnERizbssc244Ib4fWVcZJU1uYM5VHBH/Pd6My7xBko2JnhosdHSbrBv
h522aDeUf0L4hrXWJBLmbMFt8d/rRbthtTXJhDldTE1z4b6oC/cFg2TSH8GW
Dp45Ys3NZ84uczEl99BwMMoJYSyfMRRiq8XMBiM6viB1eGUn91TXSubGpD7v
pJhGWTqpeTEd1KT8ROQ+qRIR5fTOnpRqbPknZRZL2lRMPSkZBBe7WUgRK9Wo
1JqhsByqtA7l0hVqGylSpAQJ9caE0ndClq+Evt4J9fxJCEslhKwTinQl9OYO
5L3ife5A9K9AmysQ7B5IL8KG0CwhHgohumR1QcbVN6Z7TaRXTG2almLCGZVV
1UdR/y5FI0UBj1y3erdUt5DiT5LktRNcp7JMuzeeBn4hNvIci3FNxvKr4o2n
3cmEjQXuZIDGQkWt95Au6ESxM+PNPxlRqe9kAqU+M2XG6y/5oGDClUmQ8mba
OxnjuG9GtWQQ65oMSYLePcTM6GLGFDOYJPPIcMd2uGyu/4+qd9F2HceVZQHJ
c/U+9/8/+JYZGSA8esxiW9aSaL7wSiSSg2zulzkhwfpP7Fqfo7aeOmBk+zBY
N98PYzOTJ9rhMgE/XB8G3OZzGGJ7mD9NplE5lmlR5sMwFg6TXodxjn5CicR2
LLysYfyin6S412WmChrjMifRzx7GIPopo84zjCudpE+dOLx3GDQYIeIXp+W9
w2DA+lwZ9rwXU6ZuRjjrk3+FeQJqhPXpJlkZmZ0MSZ53MwN5nplzN6Ork2HF
/TeziPvNvLkZJFw3wyIZBcdRSSvSWKNGxKsI1CBHB9Eo8g8n2EW6BaE2mBdj
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
V5jfK4zQFwVQyPdJqmc6a7F4FP1Dvq+q5EX/kO+X7QP5fkngkO/JSK9kNtet
Zo58T4ZZJfOkhjWkkO9DJlfI96kNXYM4ap6HfE/EtxIJqqmSXtfDwvdq8Nnp
nAJDnm8ynEFljf2FnmC9NPLdmgmL7YT1wrLbVdpZLyy/hcJAvl9yA+T7Yk1h
vbBMd7V31gvLdbGrIN8vCR/yXWoDU0pvlXjku1ANXWiDDmnk+5AusMw3iwvr
hWW/q86zXlj+i+0F+X7JAZHvf2yL09I/5Psf2+O09A/5PqwxjXwfksFGvk8N
cbbNqnaPfP9j+3xb1ksj3//YRqfle+T7H9to0DIWrZKEQjDnYrFhXNhuw8kn
l4qY5Mt2g3y/JInId0sbW5JOylGpC6WcEbo9rDkP8n3IFh/k+9RUZ7sWdMJN
y3XGhW1b0Aw3bfOZ75Hvf2zfYemxGLTkjtAS99Rwl5MVmuKm5TrvZXsX9MVN
23zme+T7H9u8oDdu2uZzc5372O71x3bXirdIhkmvgkd06m001Nl4qdFlbZTN
RnQ2VnKfxbSKJdLHu1BV7PdLWsJ+X6xGZyOkFK4l9ixlZgmZxX7Efr8kmuz3
UJiYOi5kXWiwkCxd5RftVez3IVOh25tlqegf+304Jvk5F2Nf7PdbDJz9norc
Vq62QrCVFa1AaKU3K+xcVqdivw9JaLHfw2h5uX6L/R5mIhlgzLw3o0Hkvwhr
kW1GHAb9ZjE6yWUEaS+WKcaF4RvOTbmSzDm4bFTs90tyyn63hLmlJ6UWlqJU
ailTNIbVqtnvQ5ba7Pd/DP/lPm72+z+m4bQ8j/0OfXbTNp/5nv3+j+kYFi2L
uUvOCt02n897maaCfrtpuc57ma6Clrtpm898z37/x7QVtN1N23xurnMf01f/
mD5RixYRlBRIcP1mATsDn1qYcqXKcWWuyGILY/4uGS3zl9LzlgyVElpqWSnB
TK25rGPF/A2pbTF//+M1l6u6mL//8brT8jzmL8zeMljLhCuDmZlAw3IGXXkP
iS605Xw+76U7BY1503Kd99Ktgt68aZvPfM/8/Y/uFfTnTdt8bq5zH92s/9FN
Wdho/3tUSH4L2nQ+f98Q7u6CRr1puX46EOrzgl69aZvPfE8/w7Be0K83bfO5
uc593F7/x+0FTXvTNp+b68333P//aOr/q/yDfVXSd5O4DIZqpCrMXOQOlp3J
S9reWwPX2mXWjLGWhDUC5MSXoz4c9MOFJ4eJuePmlJoraG6cuWrJRRvssJgt
sRzG6I1JGyNODHh87vri9LHoU9DGjw0/Or26mrqJukJ0gTnbPcs8W3J2zB5x
zWZNztpo57LWqvguoJD+m8RnMFwnhcqMh5ybJYux3YWMc0+pckteW+LZUsqW
QE6p4ymVaklKSxtays+SeZa6S0m7KRlm6SlLLVnSyFJEKTk0JWss0cI43xIm
jPMtycE435IVjPMt/cA4T2mGKaXAOFsS4RmKb6mCTfoUPKFTS+VXoZjDdSjh
pN6SwknKIqmBpPQJdc9Qo0ixIaWE1A1SLoRaYVLzTUU35dtU7aRkT+qxKb6m
5jI+N8WV8ZkU1EkZZXxM/XwnZczUHFM8BAXprNWoi7I30GkhuEJOhXYKyQz0
cqB7QtWEhAnlCmRroElCgITuBKIzEBihK4GoDKSE3yc05IbcDd0aqjQkaFAn
zp8J+RjiMJRgCCCu/nFp6zrW5RvX7rhOdXnGtTmuyLgc41K8rihdL7o4dE3E
BTGmtiatpmhMzjHpNMVico2JFFMops5V5VWZVXWj0o7KqKoXlW5UsFaFiqqg
iqJqERViRH4rsiM6FbGtiFT0Rch6yaIoJjkLFtKJq7GnEqgyEWHdaifWhLeW
pzXUrK1kzRxrxKRmy3DCyuUlh4rcCubMmyOenO3JnRGzLJZRjJqYrGCkJtZs
DMrYgr70+LbHh6VvQls8tvHYMOrs0aFHB4xOFp2nS63NIjomxQsu0+mvc0Cj
Icpna8UwPs05+Q048u84J8/XtIyP3rDmnGxK8H5bxofSrkescX+i4JRG/LaM
DyX3jtjjvmQJUTqsmhJdRxzyfdh0KcV0xCPXOSeb0kFHTJ42Vtl39ac4lGQP
giYNZun0ijE8lbqthG1laitKWyk6laET3X+mAjK/71Yk5veZ/XQr+PL7phJv
WIJvRVx+361oy++zUm28kE0q55DBCKo22K1TfNAH71TGpJ+3UiX9NDvrVnak
n1OhkXNyVUqkn7fSIf20gmHQDg1kZ0jGTNa5FfI4J1eFOd47leI4J1fFNt57
K67xXiupJatsVSDjeVNJjHNyVfTiebciF8+z0tatiMX9U9mKc/JWpuKcXJWk
eh+GVoCKlXXstlTckcxCUKjBOp16GvsxGqfShxUxrDhhBQgrN1iRIRUYhqtb
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
yWSYmuPXisDunqqL0TGmuLpK01gb2N2Ih77Wh0FfEMhTvRHx0VOkXeXrWivY
3cZMx3oxeAzCkfLU3WPVGFQW+9Mg1ETDAcMDvTnk45J4mFwlCFtwZkB+LeqT
MeDo+baQtTBliDtaQLg1NVatjWVNEmsVyEEfzvXhoJT7S04guV4gIbi52uZw
mpuXXLTJ/ege7HoF67usP7GS16fiHEuiLxmNSYImEwRk3GY3WGjeQvIWjLdA
fArDJ/u4p5A7v+8WaOf3ddgTewqr8/umgHqqft6C6Py+W/Cc32dhc/TJh39x
WotrSFJl8nCSjJId/UwpQvp5S7jRT9kdnykxRD+ndA2ctnVLb9DPW1qBfkrZ
jz55TtmXVipa3jsUp817LzUg7x3KuaEQ471DTfXy3qEe+vDeS9nB8y7VQSgF
mufdlGied1NeeZ6plDfljPsnlam5f1JVHu6/UHuuC+EOFLgvZMaQsKElXfi6
gnV9xsU4pqwqsaqHIswjO0fj/NTmvqmZ9HKfNTKGG7f5frjKXr4f7ojmurnC
k4PWfE7OQY8PV5li0RfJ00xqT/JbsvR7CoTSz1v4k36iTx6tju9Znz2FOVmf
q9Am/byFNOmnBTPRJ4+0f2l5b8g3O6QojT65C03y3ikoyfpcBSJ5L/rkKvzI
+mz0yV2gkeeFFN3JavTJVVCR9XkLJrI+V+FD7p8Ch6zPW8CQ9bkKEnI9YCUL
DD7ok0dKf2gt1iPpnWQESVoMq0JNQb2H+5i/pyyQx/w9NQXuHr631tJwZjfX
5TAcLpnmc3JRe2I36pL+8V70ycs6iz6JWUDLe9Enn1VQjfeiT15vn4XR0Cd3
QTOehz65C5PxvClAxvzdAmPM34M+uQuDcX+cNbfgF/O3CnhxPSAzC3LBjgD9
ykt7uvSiT0ruc9l30Sd3waqX7xkXmMprFZxiXMbLiT65C0JpQ7r3eV4OnRd9
chVqYlxuISbGBWbM2gWUuB99chVGYlxWoSOuo09O4aIP+uQuNHT6B/PTT8Eg
fFDok7sAUPOZ/gUbsgv2RNegf7cQD/1bhXW4jj45hXLI3P4pdPNwnefdAjY8
L9i7VYiG51lgZhWOaT7zvYVgUuglWT6kK5G1OYVTJOuTRMFkyyRhTcESC5FY
aMSCIhYQSeGQKQTS3DcFPV7us3DHcLQ33w9n5lvDXYR20cNVUcmBXt5yc996
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
LiIlLocmiu9QGEo9I4T7VUJGzO9yq+e9CCjariHlumVYke+ku9Rwdk55Vjbe
Q9rLaXkvEzHlW0l/4XNznfvgdX9If8G58d3v/LP3Ry357nfSY1Lcrt4fdaWN
Ur211ZeaIH2cJ9/9TjoNnz+89+z3re6U0a63tvpz9vvKAjz7/YL42O9XTWK/
4/2oXYb27Pf4UFdZWvY76Tmn/TAu7PetdpVRuLe2Glb0j/0+pAjFfiedp5a6
xn6/2Yvsd9J8Nikb+324bYr9TrpPXbWv2O+TBVns91CrXHK3Yr8HsixU7HLB
FvudtCA+8z37nbQgwJJnXJa6WUYl39rqJ+PS7HdJIgRbkkZUS01lv9/sTfY7
6UWbnI79LtePmHnSjOqqu81+nyzQZr+TfrRI7pr9ThoSn3ke+33KAzf7XYop
UzVSUXfU6zAbT9ZpmFJlFB1SvTBeyQwlA89w8U7ZYRxmItxFFg6ltGWJSV/i
c3Od+xDoD+lLgFy/87fNgDKa/NY2C878razZM38ByT6kO9UyH5i/m13L/JEG
tUkEmb9wNJnr8JAOVdcMKeZvsnSL+SNNapERFvNHuhSfeR7zN2WWi/kLNZgp
Ng9pUzVmzy7HfN7bzB/pVJf88JZpZv5Iq7rcyVO+uZk/0qtOy3ub+bO8cxi1
ZeaVUc3MpIc0q9Is+ykH/e3nKgt9+hlyxlUmmn6ShjXczrd8dNFP0rFO23xP
Py0vTVoWn5vr3Nf0MwzslqGmbT4315vvuZ/0rHpIz2Iyqv5HK5u9v/5ltdfn
/TFLLXNd/+Pfd/Hv2qoH7hKLqll8xaIMIfefZDaDwkpxhbqbPYvmBXtcr9Xr
9HakvPbLofpFPP+YyZbd/qDkazZPGe5kn1uO+4s4fvl5HNLF7+uymoO7n983
5rdlvIvf998McX9bbUbtxCJ9FvNJkY9JihRcoBdH5TBCY2rLWnNSNEpq502t
KmsQ8ftujRJ+n7UdnuE4lJtG7clcYXNAk/M4GHCxd3qZxFoEWzCxEn2o+sZi
bI3tpU4dHXJkbntGEQwixekrKFOlUK9WypwDdT8Aftq4MVp0TooFx60RMKNB
pimL/mKbHCD+W+Rn0cYNUqJ8eJ5ukSmjjgt6yqknueF0/q1xn9wy65i0U279
D5NFklfLrx9A/MvyPO3/GJPvhv5Ha5URpdKL9qubxvLtrM/vQcL9bfUjtWWL
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
v/OHWdK7ytmZP8KFAwpd6Z/MH+FDrjf3n/kjjJga9lw/80c4cXIPbhppMX9T
Va2YP8KMfOZ5zB/hRj7zPOYP86hpm898z/wlhWbSVjGjeqq4YU7x+by3mT/M
q6blOu/Fgf5idjVt85nvmT/Ck9+KUMwfYUo+N9e5D4XMzCTTamn/62eqzL2Y
c3z+9pPw5WlPPwlj8rm5/vA8+kk4k898Tz8JZ/7XNv0krMnn5jr3Nf0krFkv
5mPTNp+b68333E94s17CmxwyVf9o+y9ZhZ+fZWs6cf2hhNQ//l0X93d/fpa3
acf/2cK0f0k2teia5KWypmidJyl1guc6NVR+cigmffnrQadN1b8/bI2vx/xD
N1HCi35+PcQ/262U2vTz66FlG9LP2Y6mR7feg0/tbTpp00O6lGj/gEp09sUo
+NDPr8vgw/AQTCjeO9ve9OvSW5Fafm0ND7nTZX0NuuCR407uq3AaDUiuzYmu
dazUxfqJAQpKYWIy+mrjgxvbrjdY3XTwEwChTdVFXPQn8PFh2k77V1z/w5Q9
AY8P04fxxPx9N8Dn5/gbbeuDF4f5O4GFn+PRdPTW2/OpfWyWaepDlhVUxoCB
dNLGmGP+jmP/w7IhCMT83WPYdPfSu/SpfTy3afAtO29QII9FciWbDwnggBsT
dPokOaA87pNGX7L8Bk3S1sixNkE4yx+5I8Mp98a3UeZsiJUNhq6NZfbygXCN
P65/mL/j8fpw7H0+WwyZ1j/etk/QLhFXpvu3LMVBwzwWDZZ8P6SIA/ZMEO6T
ZIlS3FlqSrbjoGrakh+WjkiphEdq+VCpMy7SDByLiDZUly01YKjwnsT4y1yn
XjH/oUyI+CW+SWvKTtA+LeRd6HSgwo/QykAJ37jsS8iCoe+Eeic01rr24zLS
pda6BDQVMoQeES61DC3P+7CiiW9+cIM1Ldeb5x1J+8E91rTNZ74/Eu7DdsdJ
cvb7kXufH/VkrKoP3tmz349c/PyoL9I7tF7cT221pqR9GFK8oKoG9GcwJk6b
D2ub/X6OGQaheO+oSSWbl15j3qv61NJKtOzaQXGFZoL9fo6rWqDlaoPKGfyo
YcV+J765UGDFfie+SZvaBI8cseGOfOPDLHOzxMQHK9tiFhLLjM/z7vX8MUT1
lzOf/b7UxJLdTC/6p7b6WNJntCzjQbOFToP9fo7TuiDuc6yuRThqaLPfiW8u
NFyz34lv0qYaL+PS7HcClZ8a2o5mvxNoPG1bWy41fZ5gecqcxuSS9JaBqscE
5mhlUQ9ar0MTQv8e9jsBM1qoj9nvQx/ysN8JbH1wy/K5U5qH/j3sdwJQH479
07LfCRTRmoKaVMY2BSipJE9C/iVUK5CfXqECVRxFpVsI8fBt/6LKFetlmQ0l
C57Rlk9tc4L1coaxN7qxQpfCejlipgbsj7i5h9U1S4r1gqN9oSSL9YLDfFdh
Zr3gCF/JdsV6wYG9qjUX6wXH9HBxF47myTWqYMDUlcZcwtF7WfVx6G7aF9YL
jtlUFuxbnA1H66KHadYLjtJUfupUYqpUHqpUiOlUbKlUKKmbmy7NDI7GMKNX
mL07TNsVZukKA3CHkbfCQFtDJY8bvid1u5IyJ5RRlV/zEffJM1UGEKe16W4Y
FxxYyejtKVaHmK1Fi1OMCw6lZFx1MqAqGT+VzIxOpkRNDdUa5HczLjhkbhVu
HC5BuFUQXRXkTQcJU0F+VCL6lchdJ5JWiRzVlAguPYZneGJBaaHEYhiNNxpo
NK4rGdsT2Z32bRHAiHU+8z0HPGL9vxbDmLb53FznPgzZD+Kdp37lO+bt58cN
MN7SD4fEV75j/n5+3ATSFLVR2PT2sRi8RVUkuw3KecD8giwSjJlDCVl25Dvm
9ufHHVGycRr1zejETXHke6O4bzT1ke+NAr5IupHvqClbedLdgXxvFN6Fyka+
N4orbWoOPRXu997Jvsj3RpE090UMotgkY5jq7sr0T9f8/cWGK8YF+Y478bnR
b1dJjZumOjRQbdWPoMuf0EU9FskKefkkZfVSJsfdg3xvFIOFTke+NwKeNtXs
GRfkO2oXtRBKGirufypV7xkX5DvqWHJB5SjohdXVptUNhWCitapJ0PMduiv6
h3wnTMZn+od8x80aOixL9abkK/1DvqPepRRCpaRFD1X6BzUvVARSnkgtEYqC
NrW3J2XsQzguEOweaN8nEIBPXBefmMCfqMZuoQ/qYE6L73phw/7QeQ1aIqdK
3HasFzbMzjZgvbDwh9y+WdgDptTouO4/5Huz0FbWAvK9WTC0PI/1wkJYyfHI
92YCabmf9cLETG2NZqAndxh19fo+xi3JD71VbvhBm76M9ULHKKJafYup8qJF
c4Z8R93lOv1DvqP2npb1Qnzz1v4mvnnp0ohv0j5c53nId9TimlLtqMc1pUhR
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
FOcNCYTkgy1oqhbc9xzkq/r8OcB3GYnvCUHL875bl7Y3Ce85kGm5/7v0/rF9
+NxtjfBwn8rJ3XLTiOGsC0NGHtGe/p2DdJezKPp3Dsx/bEc+079zUK6yF+dA
pOX+pn/nIPzHzzztQ//OifWPn7u475FHtOd5Z4f/Y5vzmeednfiPbd+0XO+e
kvehlrcEQkvtK+WS0OQaWDbLOOU7vuOCPNplPBgX5NE/jhU+n3FBHq1yH8W4
II/+cezwubmfcUEe0XKdcUEe3bIhyCPah+s8rxkX5NE/jq+m5TrjgiD6x7HW
tM1nvn8YFwTClCnh+Gvah+vnvRzQ/5im0/JeDtp/TNdpeS8HI23zme+b93KQ
pXJIKoi0lQxkkJbZSwR8Caf/KafynT+mtXZ5lTN/TDPXv/PHdA/J9SrDwvwx
/Vxv7j/zxzI47Zk/lgOf+9ZwuOVcWEC0D9d5HvPHMjlt8zzmj+Vy2ofnMX8s
Gz7zPfPHsqkpH4MYadqH6+e9/KB/LKfT8l469o9ldVrey4Nom898z/yxvP5r
kUe0zefmOvchj6wwY3kb2v/6+f9TdrfLcrNAEqAp1H38zu793++6eSoBR9sT
s/aPipY4EkIg6iMry7Rz/NNP08/vqf3qp2nodzk+XU8/TUe/nddP0/G3NGHI
8rsc184A/piWXQAnBXQqBWNSmCOE6CGqS0JHs9gl3aPL9/x+Vc1uN+5yPp83
TU7Hf/eZrJCvj6vsz5o4pPafN0Jq/xn6X4atSMc/j9q1RcYpH2R+ktNx11sT
4ZfbLFmutybAL7dbcrreemNk+e38GukuuTN2uSKvq8jp+Lqv+flLd5Z0X/Pz
l24t6b7mJ1l+O1/ua2L+8vqLLL/Lce1MjK58NFJOifzdT912/NNP3fd7ar/6
6TH8Lsen6+mnx/Hbef30OL+lG5LldzmunQa/PNb4RRRZfpfj5bz2Hi8FoUaX
iepyUVXkdPz3rcjye2r/6Qnp+Kcn/zn9kavDZPnt/Orwf5r9lp6PLL/Lce08
33+aj/90u8jyuxwv57X3Z+M/fzb+hyiy/C7Hy/nSzt/9DzH+n/HHv/+3L9OH
Z1/26eF79TJ/t/r509ror/4K/Nej/T/dq/+n/rxs367SzbyOfDaiziaMknSx
lPXqp63u/e5mP/7Ma83nJ2pxwjFJO0t5sJ5Ns0d9P25Plyefr6jVCeckbS3l
xfrr/vQq2sPVn8VX1PGEgZLulrJkbW2+epffw9xq/jtho6THdVDt3UGrd3un
9mtpp9VPG7M/bRT9tNHx08bEfn2tZPzqzepXbwa/+iO/X29/LP7rxfhfL7L9
2nsS/09Pzj0NetJ9TQfzoXraVi/P6m2k2ryptnqqd5vqVV09+6tn85lePf0r
yzrbTsyghN2SVpiyb/1Vyerb07Q/EzPbVsyohO2Slpiycb3L52u6p3lvg0/M
r4T7ks6YcnPtdYi2t5dHm3OvhAeT/tjJwkHDxEu5l5P5UO3cqFRlD/tPULJ7
2bVztJWXauWgwk67l2Ursf1xrv7onuXam1B/rM7y7Y/i1zL23mZ/jmerC7PN
19nh0tlW82xtZfauMPvreT4H/TmvqBcxcxNOTZpoyve1Vpbdb39OWk2ZMY8T
hk16acr+tZco2vn+DLWZ/SRsm3TUZmUIeile5f3Z8t5mg6NmgyZm2JqCat6f
twZnt7NrttNkhk14f/7a6d5K7Gwl8XwW2yjqzfl8JluZ+fpcGuen1bin3QlP
h62fjv4/7ZV5Wht+Wus4n9tW/ypuh4S1k6absonthYv1sz/T7baYCYMnrbdZ
L4IOi9d+f9aN89PpwU+TfDxhwwpqfH/+jfPTYLmnQTRP2Jr39mCcn3Z6Pu08
O9uGcX7aiDnbiHH+3k6Mz6vdMq8O+786jfnVKJlXey9fbTWebajdOBVYQNKb
G9sf1FyiGXvbMj6vTo9+NRfKKyxhQdPv7a0xV82h8GpOg1dYrPf21xiWBmO+
GqR1tkXj82pn+tkmjc/3dun53g17eHcux7tzF96NGnx3NOdsrx3TbWzou7GQ
77CfJUtgb8Pt428M1bsxTe+wc+9tun2mjZl5NybmbN/tM2wMytnOPd/3tq6f
Px1T/OkY2k/HtH46ZnW2//b9tO/9p33hP+3rPupB29Lta/1pX+pRG9qWbN/l
USPaFvxSJ9z3V/tYfrXP41f7NI660TZS29S/2mY+akjbCG2jHrWkdfwv9cT1
/msb6L+2cY7a0jp52xRHjWmd+kud0f5/Wkc/6k3r0l9qjuP/VneWglKtpleb
I9Vmc7U7t9rLW21dV1sx1dp+tfZ+qU+t5lfMlZjNcdMG7hN6gpSBbeup2srY
alibPzNmd9y8gQuF3iBlZNuLMdta3Gpcm/FP3MOBGYUWIeVnO5rytBdrq3/t
bn4FlhQahSZFeTW699VR160uDu3fDSZ+N8jw3WC1d4PBtlrZQeCfDg79dJDh
p534W+1sZ92vdvr8aqfKVkfb2P6vjdmtnrbx96Wmem9tfla7RyqsGkGfJSoQ
b0ys3liHR91tM7XiHokbPjCu0E2knG97nWLdb3W53Swz7vvAv0JTkTLAHf2K
13Gr2R0GeAIXC61Fs0wFjZ0o+VbLvbeAwAMODcgwIL6jvncSWgf1EhxK8OWo
9w0uaGddnGFH7W/nbzshjhngvX2bA8a53VbV4ZMKW0tQjYk2xcsXb8oxJ9p9
VQmLBE4Xuo+UUe7oYry62wzpsMoM/C70IM3iFbR7UAjbbDHOISkNmVlIjkKW
c8wb45ykgICFAzo95o9xTnA3QcJjFhnnOGuPmWScv80l49NhqGqYY4XNKKjf
RGPjBT9mVoeZKnDE0KQ0u1myAILO2GaZ8Wk6mGrut3rCdpqswG2+GZ+Q4YY0
L2Rax7wzPkk6CRj9mH3GJ6CBYwYan29z0PM1zLM6d7XC6pbsh6BSjvno+ToX
pjr3o15hcU224zYzOweruQMbw12vVBfZZmhj8ZtbK2STxzz1fEnSOuaq5/s2
W/WzMVTVmKEKG22yNo9529i9zgHq2H91bP8yfxvD0Rj5jh1fZnHHwhsLfcxk
/fw2l923Y0rVMZ5KdZZjTnesrrESHSO4zOyOeXRM/Jjd7vttfrte+3yrfbqX
Wd4+6o5pHDPd9b7Nde3bJ3mZ7+3r/DLjHf+3Ob82punSK4DWbvqnw77rQz47
Cj47+jDbyzvbG3q5Bdr9WnHzJ2wcWHFojVIGvqMp1V7r7VbocMFMuDlw5NAh
pXx8ozlmR9G2O6LD1k/gy6FParbEp7OKnkZ7bffF0N7+NjsJYjaYfjZY/XJz
dHL1u5Ow3p2c8W6Q/3aDNGjup8E0Pw3K2O6R4fivDo5td8nw+8ttYpw7zDI7
nD/DPhaUftATiVolOnDcLh2GqYTxA+8OrVRnZQQtkyjldtc0DGAGDh4aqmaj
TNZW0HTbvWOcQ74dks6Q94UE7riBjHOS3ZIEk2SK4yYyzgEtBfxy3EfGOUHI
404yzt9uJePTsIjZcPoZVr5krwRVlGjucUc1LKICjw8dV7N0JpstKMPtvjI+
TSM2p/1tzrB1J6t9u7mMT0jeQwYbksjjBjM+SaZMktVxjxmfgOGOu8z4fLvN
PF+nE8ymOZthJU32XlCVx83m+ZoObTan/XzCQp5s/e2O83zNjTubC3Y+qYq1
3XWeL8URQqJ83HieL8nHx63n+b7de/rZHCazuSlmWNTDNnDcgPrZOa6zczpn
51hebkL97Byw2TlZl/tQP1PU5bgT9fPbrei+jXWeje2dqSZ23I6Nxe+c3sbm
Xe5I923M1+WedN9vN6XrNZZjNrbicl+6XsfsL3em6327NbXvGOrl5tT+293p
+L/dnutD99iKF0C54Unrw/J01tPTaLSnUQBPR1svt2mHqSuwpqS1hC6vs9aq
0YTVKI7tbm1Y1EwaTOj1mqV3djbrbJTxds8O7X0nnyY3fpr09GmWi8uNO7Tz
nXw6efDpJLTLzTuc9518GjR4uX+H476Tlzt4+P3lFjY+DQd7Ok3oCVtpsvqC
tgzK5biTGyZWSQsKzWCzFyfLN+jr7X42Pk17+FSXBK1ULwjLx3ZTG58UwQhZ
dkh0jxvb+CTZPEmox71tfAIWPu5u4/Pt9vZ8nSb1NC3jE5bmZDMHZX7c5J6v
6Ruf2SVoZqoyhL1ku9M93+zSI7NLhsxUB9zuds+X4jEhmT9ueM8Xcobjlvd8
3+55/Wxayadrsj6pJhHWlePG18+upfN0jZSna4Jcbn79bI71pznFL/e/fqbo
1QkH6Od3WMB9m+Pqae6iJ9UUT9jAfZv74Olc/yuc4L6dE3yFF9z3O8zgep3b
8nQuxxV+cL3GfF/hCNf7Dkto35i8K0yh/Xe4wvF/hy3WQnwxlRYx0JtcC+LV
2b2vRl2/Gu12hTsa3llJ3wvtZ1MIVmfnV2dN7PDI0H42NdpsCrLZ1GHW7xVG
kUI/nqaeepoy6mlqqB1mGc5bv69OLr/CL8Nx6/cKxwy/v8Iynq86PbGaurGa
IjHsA8kKOWEcz1dN/dYlpF6VKiphG9rhnqYEaWqtLvnzqlTx3OEgz5eiTykO
ccJEni+kKids5Pm+w0f6OZvCpkthvFL1JexIJ8zUVAZNEdKlC15douAKQ+ln
U/i/mqr/Ck/pZ4rVnXCVfn6Hrdy3qdhfTaH+SrXTE9Zy36YSfzVl+BXuct+m
9L7CX+77HQZzvebuezUn2xUec73mcrnCZa73HTbTvnPxrjCa9t/hNMf/HVZb
E+7NJbNSL1/kmhBvr3ilRtb4Iww3tK9OJa1O2axOtaxOqdzhuk4hnJ2qNzvF
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
qlZs+LPxEUevmeLSKTp74NHGJ+TsIW0+sGnjE3KtA6M2Pt9was/XtJqzy+PN
VCcOi3fY1Q782vN1Gb0pjv6Rnm+mGseGaXs+cfSP9Hzi6DeM2/OJo9dMMfYD
7/Z8KWJw4N6e7xv2rZ9d3m+Ko3+kfqaKyIGH66c4+kfqpzj6DR/Xz65Rnprc
F6xcP7t27wUz189vuLn7do2o1P5JrZsLju6+XTsgXPkXTN19m1P7gq277zd8
3fWaGzJciBes3fWaM+2CubveN9xd++a0ueDv2n/D4B3/Nxw+PvK1fh9x9I9c
6/cRwlwsf5Nc6/c5MPrh7yp0rym/2NW2q1npq9kCN+x+aG/9PuLoH/lob/1e
8PyhnfWbYvEpIn3B94fz1m9I2C9Y/3Dc+r1g/sPvL7i/56ums60uL1ldTTys
+2FDPOkBnq+6DKU4+kd6vkr1nJ1G4PnE0T/S84mj32kGnk8cfalNzu/0A8+X
4iMnHcHzfacl6Kc4+kfqpzh6Pan2c9IX9FMc/SP1Uxz9Tm/QT3H06pL3d9qD
foqj32kQ+vmdDuG+4ujVpcirS47f6RLuK45eXXr7TqNwX3H0O63Cfb/TK1yv
a9+lptmVduF6XQvlSsNwve90DO2by/ZKz9D+O03D8X+nayRGuebnSxz9I9f8
fImjL3W2xh/pHUN787NL6VWXwKuuKnWngQztzM8ufVZd4uxOExnOm59d6utO
HxmOm59XOsnw+yutRD/F0atLAlWX8qku2XOnn+hndUnD6tKB1SX/TnqKflaX
iqsu8XbSVvSzusTZSWPRz+90FvcVR68uJVFdMuJOd3Hf2SVsZpeeOWkw7ju7
9MpJi3Hf7/QY1xNHr6byv9NmXK9L119pNK73nU6jfdfAvNJrtP9Os3H83+k2
wXhkjq739xZHX+ZLjT/ScoZ23l9TIldTH99pO8N5768pgO90nuG493el9wy/
v9J83FccvZqatZqC9U4Dct9qSuguHXSlB7lvl8650oXc9zttyPXE0aupMe90
Itfr0hxXepHrfacZad+lIK60I+2/048c/3caUjB20RHWuPyIo99pSsN549KU
eHf60nDcuFzpTMPvr7Qm1xNHr6Zou9OdXK+asu+kP7nedxqU9k1ZeqVFaf+d
HuX4v9OkVv/atqym6LrTp4bj+nelUw2/v9KqtBdHv9OstP9Ot3L832lX63rt
273TsIbfrnelYzn+77Ssdf7/kJ6VmH3uGYh8IKCBkgWyE+hHoA6BFCTNK67v
uAiiAmcrzScrUz+vOkOaNLGmV5uhx0zZgZT17moss1lyZ7MT7vSy4e+WY2pC
HC/5+Lunqy49zYa909GG9ssBNCEIl3y0Xw6dOU7a2tBuOWYmZNWSj3Y7rW04
vxwrs0n55pXu5qH5leeV/jb8/kqDM87V9HPVdKLVZRqqq6RUs9dWswZWs7Od
NLqmravQjqaMQ8qjd7WbsBCH/XGn3xnn6nIQNVNO3ThXqlqFbXyn6xnn6rLs
/MqTxrekcT5pfca5uuhYdTGi6qI2J+3POFeTR1eTEJ90QONcTQZ50gON83ea
oPGZTcs6u8zF7PLxs6sCzWZrns2SedILjc/sshizUlbe+MxU+woL+05HND6z
y9LzK8/Brzy7Ouidtmh8+JXn4Fdebivtdlqj8ZldxG52cauT7mh8ZpOQn/RH
4/OdBun5+JXn4Feeg195VRGdpOc7aZOej195Dn7lOfiVZ1c9vdMrPR+/8hz8
ysvNpt1Ov/R8/MrL/eb8Tsv0fE8XeTxpmp7vO11TP/mVV83hh9RPfuU7rVM/
+ZVn19ybXQPvTvvUT37l2TWz7nRQ/eRXvtND9fM7TdR9+ZVXzYZJuu9JI3Xf
d9dYfHdNwZNe6r7vrj120k3d9zvt1PX4lWdz397pqK7Hr3ynp7red5rq6I+/
9idtVfvv9FXH/53GGsxc9vz1nSx+5Y9c38niV/7I9Z2sZrGskwbbtJ4VGuaU
r3n8fXU1sGqW9mp23J0+O/yd72TxK8/iV57V1f+qqzJc6bZDe9/J4leexa+8
3Lba77TcoZ3vZIq2pfjXlbY7nPedDFn7lc47HPedvNJ7h99fab7Gp5qmurq8
D7/yql74kMYn7MEnPdj4VJcD4leexa+8qg/7u1Sn2OnExodfeRa/8ix+5eWe
1n6nHRsffuVZ/MrLfa3dTks2PinymeJ/J13Z+KRIw0lfNj7facyej195Fr/y
LH7lVVV5kp7vpD17Pn7lWfzKs/iVlztd+50e7fn4lWfxKy93u3Y7fdrz8Ssv
N7zzO63a86UI7kmz9nzf6db6ya88i195Fr/ycucXqZ/8yrP4lWfxKy93v3Y7
bVs/+ZVXGMD5nc6tn/zKd3q3fn6nebsvv/KqcT9J9z1p4O7btWhTe/VKD3ff
rtF4pYu773fauOt1raHU1rnSyV2va3Bc6eWu951mPlo51v6knWv/nX7u+L/T
0IO5js241u/kV56TX3lOfuUVJqnxR/r68HfW7+RXnpMrcE4ulxVW8Xc73X1o
b/1OfuU5+ZVX+EX7nRY/tLN+J7/yCs9ot9Pmh/PWb4p4Xun0w3Hr90qvH35/
pdl7Pn7lOfmV5+RXXlXQJ+n5Tlq+5+NXnpNfeU5+5RUu0n6n73s+fuU5+ZVX
OEm7nd7v+fiVV5jJ+Z327/lSvPrQAHi+bzoA/eRXnpNfeU5+5RWuKlI/+ZXn
5Feek195hbO027QC+smvvMJczm+6Af3kV77pB/Tzm4bAffmV159P0n0PTYH7
8iuv8Jnz1u/kV17hNMet38mv/DdaA9fjV15htyJdj195prb2RX/get80CNp3
bbSLFkH7b3oEx/9Nk5Ccl/js1vx8+JXXsE1yzc/n0CoM7c3Ph195Da/25udF
vzC0Mz8fU2eFEbXb9AzDefPz4Ve+aRuG4+bnReMw/P6ic9BPfuWP1E9+5RWm
rPEH7YN+8iuvaaCd+XnRQugnv/IKbzq/6SL0k1/5po/Qz28aCfflV17TbJLu
e2gm3JdfeYVNnTc/H37lFUZ13Px8+JX/RkvhevzKK9xa4w+6CtfjV77pK1zv
m8ZCe37lm9ZC+296C8f/TXORnMHEPDJH1/t78SvfdBhDO+/vxa+8wsHabbqM
4bz39/Kpvmk0huPe30WrMfz+otdwX37ltawn6b6HfsN9+ZVnl6S/aTncl1/5
pulw32+6DtfjV55d8vqm8XA9fuWb1sP1vuk9tOdXvuk+tP+m/XD83/Qfa1w6
1hzdYIXLa/xBDzKcNy5dOvGmDRmOG5eLRmT4/UUn4nr8yrNLs900I67Hr3zT
jrjeN/2I9vzKNx2J9t+0JI7/m55k9a+xSrEtb9qS4bj+XTQmw2/9u+hMtOdX
vulNtP+mOXH833Qn63qNFb7pT4bfrnfRoDj+bzqUdf7/QIuSHLX42DMmoSpI
ynNSS5OimJS80KoEmh0IWyAaCfUmpJbQTEIRoWOJiyIqeLbyfDKz9DLV+pUu
Q+UjS/tlcKztVPtlWDzj0LwM7ZaB8MhMX/LRbtPAuDi7+5Gpu+Tj/FLkHxmg
S07Hl+L+/IU2xvhUl3+qLoPL7v5I41NdNa66Ws+hmzE+1WVz2d0PhOaSxqdS
/XHT0xgfdvcDqbSk8WF33zQ2xofd/UAcLGl8Ds2N8WF3PyKw46a/MT7VRREP
HY7x+abF8Xzs7o/0fOzuhyduSc93aHQ8H7v7YTEv6fnY3Tfdjudjdz803yU9
36Hj8Xzs7ocmMG6aHs/H7r5pezzfN32PfrK7H3dYUj/Z3TfNj36yu5d6pl3p
56EB0k9294LvOL/pgfST3X3TBennN22Q+7K7l/o3Sfc9tELuy+5esCDny33Z
3Qsm5Ph0X3b332iIRi9m12N33/RErsfuvumKXO+btkh7dvdNY6T9N52R4/+m
NUqOc2K02VPX+i1291J/J7nWbx06pOHvrN9idz/F7l7qsr+zfi/6pKG99VtM
q6VWa2/9XjRLQzvrt9jdC1al3aZhGs5bv8Xufi56puG49XvRNQ2/v2ibPB+7
+yM9H7t7qfmT9HyH5snzsbufYncvc0B76/eig/J87O5lLmhn/V50UZ6P3b3g
Yc5vGinPx+6+aaU83ze9lH6yu59idy+zZJL6eWio9JPdvcwW7azfi6ZKP9nd
C57m/Kav0k92901npZ/ftFbuy+5eZtEk3ffQXrkvu3vB3py3fovdvWBwjlu/
xe7+G03W6E3Y9djdN32W67G7bzot1/um1dK+a5FfNFvaf9NtOf5v2q1wTAQj
E5tmzc/J7l6wvRp/0HQN7c3Pye5eZqP25udF5zW0Mz8nu3vB/7TbdF/DefNz
srtvGrDhuPl50YINv7/owfST3f1MdvcyXyepn4dGTD/Z3cu81c78vGjG9JPd
vWCJzm/6Mf1kd990ZPr5TUvmvuzuZT5P0n0PbZn7srsX3NF583Oyuxf80XHz
c7K7/0ZzNlo5dD12901/5nrs7psOzfW+adG0Z3ffNGnaf9OlOf5v2rRw9ARj
GJ9Q5uh6f9SIRa82tPP+Hnb3gnFq5/097O7lZnDe+7to2Ybj3t9F0zb8/qJr
c19293JXTNJ9D52b+7K7F2zUee/vYXcvGKnj3t/D7v4b/dtopd712N03LZzr
sbtvmjjX+6aL057dfdPHaf9NI+f4v+nk1ri82N3xxUc3uOnmhvPG5cXuvmno
huPG5aKlG34bl4uebrSR43rs7pu2zvXY3TeNnet909lpz+6+6e20/6a5c/zf
dHejja/Vv47l3jR4w3H9u2jxht/6d9Hjac/uvunytP+mzXP83/R563qdm3vT
6Q2/Xe+i1XOc3f03er11/v9AsxeunGD94pvJXAnFWaikQkkUer6kYCdVLakY
gXQHOhsIZkMONwQhIba46uMSjWutXUnbJIhqkU94PgU99ddGv9yDzq8N/TUO
XeBwfG3cr3HoA4ffXzSCno8++ZGejz653I6T9HyHdtDz0SfXMtO+PB998qYn
1Hn65EvGz5Ke79AXej765Atif9y0hp6PPnnTHHq+b7pD/aRPrmX/kPpJn7xp
EfWTPvkSQV5SPw9ton7SJ18iQOOmU9RP+uRNr6if3zSLebnuS598sVDHTcOo
KX3yRQMeNz2j+9Inb7pG9/2mbRztrHE9+uRN5+h69Mmb3tH1vmketadP3rSP
2n/TPzr+bxrIcJUFax3fePbqNT+LPnnTRg7tzc+iTy43tvbmZx16SYuKPrnc
3NqZnxf95HDe/Cwq4euipRyOm58XTeXw+4uuUj/pk2sbeUj9pE/etJb6SZ9c
7nbtzM+L9lI/6ZMrjcB587PokyutwHHzs+iTf6PJzEfHfemTKw2hxh80mu5L
n1zpCc6bn0WfXOkKjpufRZ/8G+2m69EnV1pDka5Hn1xpDo6bn0Wf/BtNp/b0
yZu2U/tv+k7H/03jud7fHDtXJbHF2DqZo2/tvb9Jn1zhDe28v4sOdDjv/U36
5E0TOhz3/i7a0OG393fRh2azcF/65ErnqPEHvaj70idXmofz3t+kT660D8e9
v0mf/BsdqevRJ1d6SI0/aEpdjz5505a63jd9qfb0yZvOVPtvWlPH/01vms1z
jctDn4yP6aY/Hc4bl4c+edOiDseNy0WTOvw2LhddquvRJ1eaS40/aFRdjz55
06q63je9qvb0yZtuVftv2lXH/02/uvr3ok8GE3jTsg7H9e+iaR1+699F16o9
ffKmb9WePnnTuDpOn/wbneu63ps+edO7Dr9d76J5dZw++Te613XedvS/0r6G
MzM5P4nRxmbMWg+F6s/YVEOhZEjKcVIXkyKWVKNAbAMhCxQlIf+EjuPqjsss
romYuFF9ssXkU6Urfn/R0+akftqPVhhzkvp5aGz10360wpzalX4emlv9tB+t
tCjnp37aj1aalOOPftqP/kaLG2XXfe1HK62qSPe1H63wqvPlvodO133tRze9
rvt+0+y6nv1opWkV6Xr2ozeP67jpeF3vm5ZXe/vRTdOr/Tddr+P/pu3NS03O
ZDAu8blFV+o56v2V/WiFlbXz/kwDUQHnvb+yH920wMNx7++iCR5+e38XXXCM
FPe1H630tBp/0Am7r/1opa057/2V/WilsTnu/ZX96G/0w65nP1rpbjX+oCV2
PfvRTVPset90xdrbj276Yu2/aYwd/zedcYy2NS7TfpRYx013PJw3LtN+dNMg
D8eNy0WLPPw2Lhc9suvZj1baXo0/aJNdz3500yi73jedsvb2o5teWftvmmXH
/023vPr32I+CTb9pmIfj+nfRMg+/9e+iZ9befnTTNWtvP7ppmx23H/2Nvnld
72U/uumch9+ud9E6O24/+hu98zpvuf+vNM/5eCc3Oli2+NZjE/VetKn96tnU
HqEI+IMuejwboh2o5x800gklJyQ1x3Yl/JVeOk4I97XeV9pl/Uk/7b7W+0rH
rD9pqd3Xer9pqt33m67a9az3lcZZpOtZ7yut0/FyPev9b/TW2lvvN9219t+0
147/m/46Tpk1LmW9J6Z502MP541LWe83bfZw3LgYXqyAfhuXi07b9az3lY5a
4w+abdez3m/abdf7pt/W3nq/6bi1/6bldvzf9Nyrf9N6Tw7KTds9HNc/rxfL
od/6d9F5a2+93/Te2lvvN82349b73+i+1/Ue6/2m/x5+u95FA+649f43OvB1
3nT5X2nBx2tzlwRrntj3H7Th49kUcKE4+oNOfMydovIHvfiov9OMu575stKD
60/6cdczX246ctf7piXX3ny5acq1/6Yrd/zftOWrf2W+JFfppjMfjuufx8Bi
WX+nOdfefLlpz7U3X276c8fNl7/RoK/rTfPlpkUf9Xd6dMfNl7/RpK/zhuV/
pUv/PFFzgSV36w8a9TE3JeMftOqj/k6vrr1xuenWtTcuN+2648blb/Tr63pl
XG469lF/p2V33Lj8jZ59nXfb/5Wm/XPF5v78g7Z91N/p2x1337/RuK/zmv2v
dO6fM/9/aN1zMjnrwRgm5hFbNTpCvh2ZExmD9Ck08aFWDQVdKJZC1RJKjFAr
hEogKftJtQ/dfFIOk1ITaH4g0IHSBjoaiGaglaGrDzQoEIOEchMSTAgsoaaE
iEJzH1dyXHZx/cTVEZdCXAFt8m+TKqp5VNGofFHVWiXbW3q2sGwV+cT3p3x/
svJpyJLupbuXRqZ0T9091WpPlWsSfk42g3gYrsPkHMbjMAqH4TfMvGHcDa1/
mFrDJBrGzDBLhrkxTIphQAyzYcoChGEvTHJhXAujWRjGwgwWxq+UEwiDVZie
wqQUZqMwEoVpqJmFNvNOmG3CNBOGmDC/eG+HQSWMJt7bYRjx3g6zh/d2mDa8
t8OE4b2dcgfe23fZg3w8k1mfDPJkWieTOZnFyQhOpm/KJiTjNJmVyUBMhl8y
7pIplwy4lFtIRlcyn5JZlEyfZOgk86YzbXYmSjI9knmRjIlkQnTmw84oCMI/
yPwg7o3zQboHoR7kuXE+yPBqxLdxPoht43zKQkRZCQI2SNEgMYOMDKIxSMWU
kwjyLgi1IMCCyAqSKgipRkRtxFAQOUHIBNkSxEojVDbyI0iMICiCjDA+B5EQ
JEEQAsbnRPATmTc+J7JufE7ZixhjiZgmIpkIYSJ7idh1hG5HsBIhSsQmkZZE
UDpisiMRiQzEox9PfXvmt4c8nu14rNtDvT3K8RR7vuPp9XynPEecmPEcxpMX
D1w8a+1J2x6qeIzi6YkHpz0223MSj0c8Ge252J6GeBDaY7A9APp5yoLEUo7l
GoszlmRbjtuCi+UVi6otqG3xxJJpy2VbIu57yoxEw49mHo27NeytEUfTbc12
a6qud8qSRFOMBtga39bgtD/lSkZrWI5/ly3JzpcvaVZ6ZnTefEY2T5oe5s4p
f0JZHfa3Qj35+f+4jv2tUE59/v+4jv2tTvkUxo8U44HXfcnH39vf8Lov+ePv
d9kVzg9Qy4HXfcnH39nf8Lov+ePv7G943Zec2tvf8Lov+dbe/obXfcmpnf3t
KvcynLe/4XVf8nHe/obXfck57tH8Lg8To8A4l/2tyv5WZX+rsr9V2d+q7G91
yssY57K/LQJ20jiX/W0RpJPG+ZSlMc5lf8PrvqRxLvsbXvei7ixpf8PrvqRx
LvsbXvcaV7kb41z2N7zuSxrnUw7HOJf9Da97jatMjnEu+9tVNmf0rDXOp3xO
jHDjM+1vNe1vNe1vNe1vNe1vdcruGJ9pf8PrvqTxmfY3vO5FnVvS/obXfUnj
M+1veN1rXOV8jM+0v+F1X9L4nHI/xmfa3/C617jKABmfaX+7ygIZn+/yQHEy
er7H/laP/a0e+1s99rc65YQ832N/w+u+pOd77G9X2SHP99jf8Lov6flOWSLP
99jf8LrXuMoVeb7H/naVL/J832WMEpzTz5f9bRFVkvp5yh3p58v+hte9EEOS
+vmyv+F1LwSOpH6+7G943WtcZZP087t80mhQmfu+7W943esur+S+b/sbXve6
yy6579v+dpVhct/vckyu92N/w+ted5km1/uxv11lm1zvu3yT9r/sb1c5J+2/
yzo5/u/yTnGahGMvOZHBaCa2nphGfJ3xYaU8FCfc8J2cw3dyonr9yJe/952c
qAiZH4O32N/5TuJ1X/Lxd76TeN2LuTJEAbX3ncTrvuSjve/kVa5qaOc7idd9
yUe7Xc5qOO87ide9xlXmajjuO3mVvRp+f5W/ipPS+JTv5CzfyVm+k7N8J2f5
Ts5TNsv4lO8kXvcljU/5TuJ1L+bYEB3V3ncSr/uSxqd8J69yXManfCfxui9p
fE65LuNTvpN43WtcZbyMT/lOXmW9jM93ea8EYTzf9J2c03dyTt/JOX0n5ykH
5vmm7yRe9yU93/SdvMqGeb7pO4nXvRBckJ5v+k7idS9EFKTnm76TeN1rXOXH
PN93GbKAF/Tz8Z1cxAukfp5yZfr5+E7idS9EB6R+Pr6TeN0LIQGpn4/vJF73
GlfZM/38Ln82GnTrvi/fSbzudZdHc9+X7yRe97rLprnvy3fyKqPmvt/l1Fzv
7TuJ173uMmuu9/advMquud53+TXtf3wnr3Js2n+XZXP83+XZElwIN2ty6YPt
DyYrsfDEyFLWTXBxWL/PsH6fYf0+qI4/8u3vdhk4YJdh/eJ1X/LR3vq9ysUN
7axfvO5LPtrtcnLDeesXr3uNq8zccNz6vcrODb+/ys8leOr5TKEFD35Iz1fW
73PK1Xm+sn7xupfEPdLznbJ2nq+sX7zuJVGO9Hxl/eJ1LwltpOcr6xeve42r
PJ7n+y6TF9CRfk7rdyVwkfp5yunp57R+8bqXhClSP6f1i9e9JDaR+jmtX7zu
Na6yfPr5XZ5vNFjefR/rF6973eX73PexfvG6113Wz30f6/cq8+e+3+X+XO9l
/eJ1r7sMoOu9rN+rLKDrfZcH1P5t/V7lArX/Lhvo+L/LByaoH07scJgkpypY
2GCQGptgfq4EAnJqb34u4P/4oyzh0M78xOu+5KPdLls4nDc/8br/Uc5wOG5+
XuUNh99fZQ4DhtNPWw1AOKmfpxyifpb5ide9ALBJ/SzzE697AUqT+lnmJ173
GldZRf38Lq/ovtP8xOtegMOk+07zE697AfiS7jvNT7zudZdpdN/vco2u95if
eN3rLuPoeo/5eZV1dL3v8o7av8zPq9yj9t9lHx3vYMhfyj8GxFjm3Aj3U3JR
k0PQ2M09N0s77w+v+x9lJIfz3h9e9z/KSw7Hvb+r3OTw2/u7yk66b3l/eN0L
0G78UZbSfcv7w+v+R7lK9y3v7ypf6b7fZSxdb3p/eN3/KG/petP7u8pdut53
2UvtH+/vKoOp/Xc5TMc7iPWXsphrXBZwaWyuveT+J2crOgAgETmdNy543QsA
aPxRXnP4bVyuMpuuV8YFr/sf5Tddr4zLVY7T9dDK32U5tZ/G5SrTqT26+btc
p+OCU38r27n61zW/wtF6l/OM7ViO69/29g39u8p8al/6d5X91B49/F3+0/Gp
f38pA7qu17U277Kgw2/Xu8qDOl6u95cyoev8/6FcaIL24Y4P109yD4MZD1Yv
GJ5gM4JFSNnR9DUl31LSKKVRUoIipQxC3R+K/JQtDbVvqCtDgReqsVBWhaIp
VEgpdxrqjaTwJ1U6KbdJMU0qZ6dg7hStpMIkpSIpBIHqN8R+Q5QDdQ20MxDK
hj5uaFygYIFcNVRqQ37K8V2Odfj9VZY1oYW4YGJiRFXJlpBPS5ZSpmzKuhpn
fuUa/Mo1+JVr8CvX4Feuwa9c45SDNc78yjX4lWvwK9fgV67Br1zjlI81zvzK
hdd9SePMr1zjlJk1zvzKhdd9SeN8ytAaZ37lwuu+pHHmVy687ksa53jnv8vW
BsRlfPiVa/Ar1+BXrsGvXINfucYpd2t8+JU5Okjjw6/MQUEaH35ljgPS+PAr
M/hJ48OvzDAnjQ+/MkN7yZfx4VdmGJPGh1+ZgUsan0QtvsvyBpzq+fiVGXqk
5+NXZrgtSWcY/MoMJ9Lz8SszhJacno9fmYFCer5TDtjz8SszHEjPx6/MACA9
X6Ix3+WDk8yhn/zKFGVSP0+ZYf3kV6aokvp5yhDrJ78yBZLUT35liiCpn4kW
fZctdl9+ZQoW6b6nrLH78itTfEj35VemwJDum+jUdxlk1+NXpjCQrsevbOMn
XS9Rru+yydr3R+kqo6z9dzllx/9dVjngu9RsCcdecv6TqxWMfLCzwUSmLHN0
g/L3vpPFr1zFr1zFr1zFr1x1yjkDb/MrW8Dk4+98J3mYyoIbsjy0951kiZeJ
Tb6032Wih3a+kyyUMpHIl3a+kzTg8sLJx3nfSZpb1VVuevj9VXY6IFfjw4Wm
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
0k3HYbF57EfSTj/SfrTcMHPspBtpqONivbEfSUcdhwXnZT+SlvqR9qOw44SM
Mhyr0lN/S7zuKXKRj+KS89m1T1OzKrVCkgsd7Fp86bGBsveICji/3vCCtzi/
3tRyK81dWjglXC82H+tdWuxVdC1G+qhNKeK+1nunzAQSHmhpIHwJWSf0lRDD
xR60TcXeoq33HSQf1rv02wF17Hi5nvV+WIisd2m5kqm0t96l6d5sRda7dN2L
vWhY79J2P9J6TxG6OC2W222OXXM6tQLDPRGscGKX8Tkt95zjxqWs98OaZL1L
Ax6nCHxAA2W9Sw8eUNeOG5ey3g/7kvUubVhymfbWuzTim6XJepdOPA5rEw9U
SSv+SOs9xekDZlgwpSIf5/VvWu/BuhwWKOtdGrKkN+2td2nJ42KLst6lJ4/D
HjWtd2nKH2m9L7fmHDuJTtryuNimrHfpy+OwTz3WuzTmj7Tew0oVUtlwKUtn
/i3f1nsXK4xza8lPFxfsqnZNyXCUBFOeGHd8k9Dyjq8RkBZ9s2KZL9KjN0Xq
AZWM2pRJrlc7JdD1zJfDrmW+tAsWOn9eyYfDfDksXOaLNOuLlWuYL9KtP9J8
Ufz8gF0WbKzIZxxOq+QgBRN1WL7MF+nZkiG1N1+ka99sYOaLtO2LHazMF+nb
H2m+LLf1PMmV0rlvNjHzRVr3xS42zRfp3R9pvoR1LCTD4dyW5v1bvswXxeA3
+Af8rchnbI6v5GQFI3axmRkXaeGbkvgkhw7jcljPjEtD3A4L2jAu0sY/0rgs
d/08SabSyG/WNOMinfxiUSvjIq38I41L2NVCshwOcunlv+VjXFZ4YO6k1pJu
frOyua+084ulbbhvp4aX9PPD3hYy53CeS0P/Laf7NrtbyJ7DiR7K9pKOPko6
uouHPD43m7CJuwZuapelZkxqSaRGQDjxm6N+58wH45iYS2zl6Cj5dmVO5h30
mEypiCtBd0mQ/ZVYuySI7UqYXRJ0cyXK+rr7u11KPiW7U/pZSOyUFBYyGrtU
aHVJxtml/bg8Tsk4LoGxS2VVl1yaXWKIyrdL8OwSLdUlSWwRu2THLj3hU7BL
M+zSBqZuSgTUprjNIgjVVShzQk0SiotQOoQ6oSkPdspnUpqSGhEIeqDMge4G
ItvQ1g3JCrQjIfSEYhN6TIivQ3PbdR8XaVxtcS3FhdOul226xgSKyh/VulXi
rTJFRchW3Fvo3gryye1P5f7U1F6qNpEUCcmmYnymzOYxZQ6PKZN3TBm4a/ou
KbNTPvqSxmfy6clHX9L4THunfPQljc+UuSMffUnjM2W2yEdf0vhMGQ3y0adl
sySEvnz0JY3PhGD3dEsanwnBvdkhJ8S0fPS5Pttd3CjKsOd7IBbHA0E4Hsi/
tSyXhEyTj76k53v4puWjT8t3SUga+ehLer4H4kM++hxXhXvPdyrFe75Tcd3z
7QroItin4riIsnz0uZ1B41RU1s9TmVg/XyI041S21c9TIVY/T+VU/TwVSPXz
VPLUz11Zk2f0VLLkqZSPPncwcpyKgu67K/zxpFwV69x3V5Bj2V+V1tz3VDZz
31QaOxW4qsG/rrcrVLEcrkpOrncqJ7leKhmdikDa7wo9NKxTEWdqfyrHOJ5K
Ll1ZpcaubBElIUz+YawPs3uY08NkHgbyZhbf3DTJJQi2IT7p+AJiI0T3a11n
M4dWM2SGSTJMjWFODONhMxluRr5q5roww4WpLQxrzZy2GcSqGbp4IA/TFY/g
YYBi8R4mJRboYSSieW+GoM3cQ1MLk05tRpUo3WG2CANEGBbCeBCmgmYg2Bnw
yfRORnQyjpMBnMzdzsjdmaXVGZjJcEzGYTIFOwNwZ8JVZ5ol8ysZW8andiZT
dWaR8dmZPjuzxvjsTJedgWJ8khEyd6ZBnAVBngfZHaR1ENKNfN4I3mqka5Ck
QXYGkdlIy404rEb0BWEXZFwj3jZiLAiuIK8830EwVSOPPN9B+ni+IG8OMiRO
8yAUghhIpL8j+DuSnUhxIreJuHYkdUciExlMRK8jdTsyloiWfp4Ikn4monMi
FokIxEMfz3p7zLfHOR7geG7bI7s9oPFcuu/xFLYHsD13x6MVD1M8Q+3x2R6W
eEZc73gi2sPQnoFjYccy1v5Yom1hzraAtiXWFlYdC2W05jm2kTwuTSA7Znak
7BD5svcXe38xsjIyg/KGMmJ50n4C63cO63cO63cO63cO63epXUPUWjvrVz76
ko921q989CXLeetXPvp1VyVfh3z0j2w2aiUQh3x03p4u2hgnn+cr63eiNFxp
LEV6vrJ+5aMv6fmkqg756JN6uKT1Kx99Sc8Hokl9XNL6lY++pOcTYj6jKfRB
zVzS+pWPPqmba9St3wS5FtCZ1M9p/S61dEnrVz76kvo5rV/56HPIR19SP6f1
Kx/9etvT+pWPPsdmAZ/Wr3z0qag9GbCV+z7Wr3z0OeSjL+m+j/UrH/2aXY/1
Kx99Htbxx/qVjz6HfPS5k5nko0/q9D1LX9avfPR52Mtf1q989DObQ24Vo2Kz
nL+tX/noc7Oep1iTfPRJDR+7iGiczqtTcnXNzwXkG7t2MrV9bI7I5W7u3N5g
jYMRSWyuffbm5wKskVM783Op/wMq3nnzUz76ZBaMaxUP81M++sXqrmQ0c2GI
JnVR7QRh9bPMzwWIIvWzzE/56Evqp1R2ZseA2nfe/JSPPpkj4/rKgE4xT4a0
Lb/NT/noUDKvccB/8tGldxXpvtP8lI8u7ct583N/1ab5KR99Hpb7aX7KR5dt
8JCu95if8tGvr+NjfspHn4ct/zE/5aOfr2hI12Lsblb9l/kpH31ulv0UEZOP
PplRYxdBT9B8DYK55P0tAMHYteZXOKM5dUu7nZMRLF1jGPacLOe9P/no1y4w
vD/56Fc1gOH9yUeHanqNA9qUjy5Nrkj3Le9PPrr0Oee9v73rlPcnH/2qPgBq
yBwcskKecZIj5aNPZuK4dq/p/clHv6oYTO9PPvrZ5UKWFyfFrnbweH/y0U/1
gxR/k48+mZcDyus1Noh1yEeX7lfkSzvj0hwzyXkLVvnsusO4yEe/qi4M4yIf
XXbMM06yqHz0yYwd1+5dxkU++lW9oYyLfPSzy4c8ME6bXeVhGhf56KfqQ4rh
yUefzN8ha+cZO4l1yEefzOJxaRND/zo3+lSRGPonH/1oHSE1jDNpV5so/ZOP
fqpPpEiffPTJnB5bewk5YpxSp1rFcL32te7qFSn2Jx99MrfHrmqRIoCptcns
/i3lo/OG/7ed8TrlWZfdXYPdXWPsmuiplZwauF3zdXPBJnc/uQTBgCX2nphc
Yi0dW9hjTOVmd3+kTyS7+yNNLXZ3yUdfEsiH3V3y0ZeUosHuLvnoS4KQsrtL
PvrkZljyDdLD7q5xStyDHETLPKWwp+O71HH53SV0a5dOS3ArJRRCxR7K61An
hyq4KXk3hWA1RVaodkJpEmqMUEE05cJO7a1OEUwqVlJ6ksLSqSIb+h2IbaCa
gSY2BHBDngKdMT4bkrFD7AkpG58TMjQ+CUUdl1RMrqhu2SLzqc2npZcw7uzB
7q7B7q7B7q7B7q7B7i756Et6PnZ3yUdf0vOxu0s++pJuxu6ubVWwu0s++qxd
NYbdXfLR5/oKvsmA0fST3b3SiIvUT3Z3yUdfUj/Z3dxMS9Lx5KMvqZ/s7mP1
sLu5o5Z86Se7m1vqI9ndO/lhsLtX+nKR7svuLvnoS7ovu/tYWexu7q0lH/dl
d3NzeYmu1+QCeany0eex1tjd3GFLTtdjd3OLfWRbdSGZjXN/V+1hd3OXfWRX
8UmxVPnok9tsiLp2kfEEpae90fotdncVu7uK3c3dNjZX+AojN8dLcs6CFQ5G
K9iNjsnvPRh4kSVWxTKqYtFw4w2obe2sX/no0sK1s37loy9Zzlu/8tEva9jO
zR04pJH7bf3KR4ea+BkHPFNWyILtPaTn8ya5EQcUmfbWr3z0JT0fu5u7cUCj
a2f9ykdf0vOxu0s++pKej93NTTkuK5/dzW25pPUrH31yXw4ot/c44NFi0q70
iknqJ5Wr5KMvqZ/s7pIJPrlBl7R+Zf4uqZ/s7uOFYHdzly5p/cpInNymY93M
fTtpqdjdCMdI92V3IwAj3Zfdfbwe7G7u1yWtX8j1yQ07JsIq0vX6Ywwpe3lP
2N3ctUtav5CHk9t2HC9LNTl0gnK7eha7mzv3I7uaVoocQ4JMbt0BzfMzNqhr
3ZwtYn6K9KAdKPLH3+3aDEDDY+f2JicjWNjGyG0bp7QzPye7mzt5yPJ23vxk
aU5u5nF5l9jd3M7jqhbG7uZ+HlCX73FAzXawJfWT3c1NPWRtaGd+monoE7Qz
P/V0IlQg9ZPdfbxf7G7u7oFuwW/zUz66LJHXOMl08tHRMhTpvrZIifKk+7K7
j7eN3c19PtA4+G1+ykfX24d0vVYS5KNfXjt2N3f7QP/gt/kpH/1490JanmDx
rtbG7uaO/0h29y6+LR99cssPaNn32GD09ZB8N97fw+7mvh+7ds2CG2vn/XXO
WnIF4vvJXFyfA+e9v+2dZHcLA4yryhy7WzhgyOp5jZMEuRLkSPdld0tcI92X
3S2MMC5vKLtbWGFcVe3Y3cILw6x6xiEZinInH/3yqtp6hCHGVR2P3S0cMY73
NWTzCfLvKnrsbmGKcarqpWi6fPQpXDFkOb3GTgpdgz/Jx95tXOSjb07Xao6Z
6tzg4w0ee8+fjhsX+ehT+GNYXc84pEtRduWjX15ldrcwybiqArK7hUvG8T6H
fD+gh109cBoX+einmmCKyMtHn8Ipw6p/xiaDihIuzDIuLze7O1xkib3GFhR+
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
ouNn71/yzWRcBstbNxkz+rkMDeG05wJpxdjxx5e1vzT8JfVzadxvj3tn8SwN
dUn9XJrme7A3l9TPguljb74Nz5L6Hu8Ce3PJOS+w/min984aWjvlkrNLIDxN
fTqaYrmaynY2Bd1oKsHaFFVD2LCzkKpTdmenRj4NiR4z0PZApAMtDEQt0JWE
OOJKjksypnxMwqiKGXLS8TcLk71JK32TxfsyQsoXkF2M1b5IxUtT2nl/7M23
aTCubKvh/bE3N1fjYG/unADTZWwfu2lz5tz2BrE3Dykze/MEK9ib6Huc9/7Y
m1f1uvL+2Jvvwd58m4ZLen/sTfQ/qt55f+zNqwre9P7Ym+/B3nybtkt6f+zN
JbV/vD/25tt0XtL7Y2++TeslvTH25vaODfbmJqke7M0dvBnsza6oPbry9OjK
zuOq3jeMC3tz5+ZbJmPHJne2HHvzFF9ib15VAMu4sDe7MsroyiOjK1iMUy2Q
vXmK3LM3m1l6NEPxaAbS0Qyfo5kiRzPIjZ3FN9ibuyiU5TiuqoRD/9ibu3b6
OJnO+sfe7Iyv0RlVozNsRmewjM6EGI10Ho0kHo1IHY1UG7sK4mBvdoRzdMRr
dERpdGRitOdxtGdvtIdotOU4eqcY/SXOiv7Icp69mV+2u9cm3QyINs6ofCQu
r6v1XuzNJR/tSnDQei/2ZrjBw8l6VXscOwdojh1Liw8ze8vx8g7rfal/80qi
GtY7FAbpvta7z9NdXdJ697la8nFf691n68ryZG+eImLsTfRac5ekSumflBQI
dXsoc0MhEyqKpPwnlTApW4HKJ0SfUGhc0FENttd7qVHPIaFf5mCd4GyxN9F+
OW9c2JtXdU3r3ef0cHD4rB4MAlQL6XrWu8/tuKp0Wu8+v0saF/bm22d4nGqe
7M23z/KSxoW9+fZ5/kjr3Wd6SePC3txZuMXe3MXefL7HVTXUevc5X1L/2Jub
gwnLG6m99V7szbfP/ZL6x958++wvqX/szV2ltNibb9vAkq7H3nzbDj7Serct
LOl67M13sTfftoclnWdvvm0POzoCFvTsYgVJPkwQ/8peNl8me/NtW7mrq5ov
tpnN1ZIc22BVThb0MF/W8NdFosPeXNL1zJfJ3nzbnpZ8XM98mezNlKpP6cuU
0Evpk1BbhSInqc2BCO3s7GWmzVMM0LZ2V401X2xzanqOOrU9bXdXdVn25tv2
t6T+sTfftsGPNF9sh0vqH3tzV6md7M237XFJ12Nvvm2TH2m+2C6XdD325nuy
N9+2zSWdZ2++bZs7Wx0t39zFEUN2dFXNNS62VzVOR+1ap+EuO9V1h3Gx7S5Z
2hsX2+8qGTscNy624U0Jt6v0ruVR5HTc9dibb9vzRxoX2/SSrsfefD/szbft
eknn2Ztv2/WuCrzk57627yXXfW3jS07t3dd2vmQ57r4CkGT57Tx7821bH2+G
I1l+l+Pa2dDH2/aeXZ6sV8i0kxyTIFOU/ztqujZM9IrafT49Py5zsxesDa9r
foRr/a6WPHZu7xzByCQ2GZvxitLa30/xFPv7ARXZ39E6Ol/uu3aEqzrz+jL/
6P6Sj/uuL+mPx7hYF+zvp+in/R1N5EypyZT0S6mglGQJFX6o4UIxFSqfUAQk
FTspcIHeBeKU0HJM/hO1Hvb3XUxm2N83yGrY39FXOm9c7O9XdephXOzvm1PL
MB9M4bC/o79U1dq42N+vKtdlXOzvP8P+/uO1LGlc7O9Laj+Ni/39x+ta0rjY
33+8tiWNi/19s2IM+/suzup1jqvq9tA/+/uquTz81j/7+6nObX/vSsKjK66O
rkw6ugLk6MpZoytMja7kM7qCwthVvof9vRkGRzOxjWYsG80MNZpRYzTzxOgM
/9GZlaMRq6ORnaMRdKORC6M9ShvdAH777KJDIREIGO9iEzFfyv7+Y5rd1cnN
F9Nuc6+FMyPY08NKYn8/RXLt71eVc/PFNF1yup75Yrpe1dDt7z+m7y5p/f9R
dS9ajts6s4AJyj0z+z/v/74n5oeC2MlaQSyrKZriBZdCIaVxU9IslJWhvgtl
SaC/w5ZSzvcp3mua31XXzRfTXm3uVW+NbtP/qs7ufP9jORypf873P5bFV5ov
lseR+ud8nyrv5Xz/Y7kcqT3n+x/L5ivNF8vnSO053/+U8/2PZXSk753vfyyj
YY9BL7unmHHICa+q88bFclOrfNXULA8H6Vud3vn+xzI8stxvXCzHUwp+uW5c
LMuhep0q99v5/scyPVJ7zvc/lutXGhfL9kjtOd//bOf7H8v3SN873/9Yvgud
7ia/z7WcjzzPtayP3O73XMv7yHLdcx/n+x/L/EjfO9//WObrz3ktRZbP5br7
LPf1x3IPiomsJ8XFQhYS0O3NDnQW3pHb998pgiZ4pxZzauiFYzHcOMGYXyxD
1vtb/Np6RzPsemnvrIC/y3r/6/FHPto7M+pI95+Z0aXrUwI7pQtDTRuKy1AT
BeL/sh8t632Kcuv2Qnfsuv5Z73+X9f7Xz3k5dZf1fqT7S/+s979+5pH6Z73/
9XOP1D/rHb3yJk971vvfZb3/NQxHas96/2s4Ukk8FSDDgBym3zCGhukpGRPD
BoXWeU+R8pCOonl2/YyL4TvyjIthHI5hdNCbdL9xKev9r+E9crvfuBjmI2u9
lM5opTd52rPe/5b1/tfwH6k96/2v13Ck9qz3v2W9//U6jvS99f7X61horDf5
fa7Xc+R5rtd05Ha/53pdR5brnrut979e25G+t97/em3r72O9//X6jizX3ef1
rb9eX1i8yP9+SxeXD1nsQr/t+nck/rntyG9X/7k93NALTfcm3X8G9t/y/v5p
5sjt/jMi/zR3ZK2h4l7ovjd52vP+/i3v75/HHKk97++fxx2pPe/v3/L+/nns
kb73/ppBfKEX3+T3ubpx5Hmu7hy53e+5unVkue655f39070jfe/9/dO99W97
f/9088hy3X26uf7p5kJ/vsn/mvqfj0d+n/A/l4/c7j8d+J+vjyzXt/b0839u
O9L3+vk/t63/lX7+z+1Hluvuc/v6n9vX/y33/x9xZLlevnf//xHr/63+g/tq
eeqQvyeZK0HRGKs51DLZM2jpVD+s8itKe4Wc/r8dVXslaLuKMb3KobvKYlzl
pf7XrXXPljW1dVMTLbVoUqMitQfCtR/u++a2H469cKMkJz25qslBTM5dcuA6
x20wycGCBSOS2H9i3Yk9d2x5fPnx8cV3E19FfAftGxhbITpgdJ7oIK1jzJmR
PTJ7Vu9Js/ayFnquz5yrzJF1zbbvxLQ6p6hAkgQTbI8TJMpSNtEsxp7slVXu
vf2302unvLcq763Ke6vy3r63k95bTr9Sk/lrePp7NYy+CSv+Xs2KVWo0fKed
v39iZXlvhcPgm5ji7+SsrpKj+Z2m/u6TaIv3VrBEXwJi98NEfKez+xuVXnzA
X+Jh9/Flfae7+5rNsdgGq+jC32XgezrEKmfmd1m4bg8+b+dIe052z++GS0uY
ohZJUg3YI064KOs5xPswqGgZxvktXZ8S6Cn5ndLaKYndpa+ndG5KlKbUZUo7
poRiSh92icMpIZdSZCm9lRJXKU3VJaimhFFK9qQ0jnGe0jVTosU4vyVMjPNb
CsQ4T6mOKa1hnFMi4xnK91BHh6I3SdwBQ8VJHWO2ldyhCAwVWyi9QmEVqqhQ
PDWV01DlhHIlFCOh8ggFR1NtDFVDqAlCAZDUfePzpqIn5Tup2p2SPSnPxmdS
kieF2PgkFfhNIUyqVlJ+kuIS0GWCYe00q0QvA8kOBDlQ30B0G4o7UM5AFwMR
DLSvIXwDVQskLFCuhmwNJCpQpoYsDcTI7wtU6IVgJJSf0HVCxAntdgh3QoAJ
eSW0lJBQh34mxJFQQkIA7eofV3pc4O3qHtd0u6Dbxfy6JuOKi8srrqp2SY3r
JS6OuCbaBTEmfkzzNsHHZG7TuE3f17SLCRXTp02cMSGi+reKPyp5RaVu1TEq
a1TNVilHBayocK1KReWqqExRhVrpyqWibU6xnCS/B0QW536cADEOomS2ElfR
Wks7zrdazrdazrdazrdazrdazrdazrex4pbzrdbUik2NvtTuSk2m1CDqmkDD
ORyuuHD0hLsjnAzhIGhOgMnNCiY+WNlgIIP5awzeYBkS40zsKrGajp2MjzS+
r/h62vcyNnJswrbRxsZonb916lqxCoxzTbGmkC8ExJjgUpxQMU7byKlYy8a5
nG/fwLa/d779J41zOd++6ou/3/HCGudyvn0TUvyd8+00SxrnoC/K+fZNSHG/
8+08njTOyVIr59uX0NN9zrev2uS+ZnUu59vpNmmcy/l2fgZpnMv5dmbtkc63
eA++q5KXeYqZhZwkIN8EX+OkbedNxTttfLbz7ZuY4u+cb2f4SOMTVIoS6F9p
fJSOXqVE81H73N/Ze0qcfqXxUTrzqIXua7ZrJQBXKbV31EXfO99KSbWjPrru
fCslwI4aeWR727+7IxTNFE0MCVKSCQLy6GBQo21QtZ48afc73wqV5FFP3d9Z
iajYvtLvQ/F11Ff3NYs3qqJVKIGOWut751uhfjlqruvOt0JVctTdIxsNVFKy
p3hvyPiS1Baw4WRNSrk69Trc53wrKTgvy7iUhFWg/0ed9r3zrUC8j3rtuvOt
QJKPmn1kZ2kW6N2p+7FJz22ygmE1B01ZBQJy1HPfO99KqP+o664730po+qjt
RzY7egmFrRJymmI/JeSxSmjhqPeuO9+KK/yo+Udyma7imjxqv+vOt+JKO+q/
Q2u5zkUzh1hxScRbcvwvvIBTzC7kNAF5J/geJ32cd+0EqngRy9/bJ/eyT+5l
n9zLPnm2C5LzNtGoZZ/8Ajv83dS8TS3M1Djsmn7D3R/O1XDdhQMr3EbN5TO5
zckpS65JcggaMz8YwGCDgvlojMPEFBMr6tjI+JLbd9o+uFrxrhqfmmKPIW9K
EkTAKQlitXO7Eq0zPmWf/Cb0+Dv75NlGSeMTdF7ZJ78JPe63T57tljQ+yV4u
++SXyNF99smvWee+Zvkv++TZpknjU/bJs22Txqfsk0drKWbgkR19/K4maMIp
KhuSuCRbBQTXwfJGHW775DchyP32yXM8kH5fsrK3ffJLyOg+++TX/HRfVy9Q
WnttpaSPWep7++RWcvaYqa7bJ7fSncdcPbJRkd/d60OmyHlIS5P826Bs++RV
CTwVvPVzKnHbJ69K1vo5Fantk1dlaP18KzvrZyo2d5b6VZE4lYQ9dyoC2yev
irqeO5Vx7ZNXhVrPfSvMem4qx4LG3xVXtTeVU+2TVwVT7b0VSLWXyqJvBVD3
TyVP++RbidM+eVXOdD0VMbviZUdDTvylKwymEl9I15K8FFBZgs8dlJrKZqkA
lgpbqXiVSlWpQNUVp6YiUyoepQJRKgelIlBXAJraLeHcDtdpOBA/7htOi+QS
J8ewc8cG8x0saGP8BjvSmICOFdYKaiAVKVLxIeSOSZIMeLVBLo0OrmHgDyN+
mOzDUN+M9M2aUMO8Hsb0MKH7fTUM5H7fywju972M3X7fMG8Pk7bfF4bsbf1e
zMxhSg7ZcJL2O5nC+r0YecOkG4Zc/dzDTBtG2TDF6ufL5Kqfw8hq/b6Mqtbv
xUQaZtAweoap03Mf6/ditgxjZTNUDqOk5w4z5DA9em4YHD/mwMV8GEbDZjC0
fi8mQe29TIDaC8Of1JybYc/9IOAXI571ezHYuR5mumaeaxTLwddAoQ+jVxi2
krwbUHWDrxqtvoZhKYxHYSoKA1EzDg2TT5h1wogTpptmthmGmTDDhPGlGV6G
kUWG3uRkT25M+dzYujI/v7MBc8MwYYTBImQSneRjfl6MC2FKCANCMx4M80AY
A8IE0Jn/k6mvn5NxPxn0+pnM+L2SaZ7M72RsJxO7M68nAzqZy8lI7gzkyRj2
3Mn8nUxez02G7rOSIZvM1mSsdobqZJRqbzJDzc83s9P8vDIt3T8Zk+bnm/Fo
fl4Ziq4n87AzC69Mu2SyJbMsGWHJ9OrkrMmYSgZTMo+SUdQZRJPJkwycZNZ0
Js1kviSjpTNYJiOlfO5Mk3euJZMiGRDJbOhMhskoSCZAEP6N6B8EfpD1jaQf
ZLznBvG+VxDnQYoHAd6I70FoB3ndSOtBTmsviOgXuRxEciOQvb8XQez9XYhf
14PkbaTuhXgNAjXI0SBCGwE6SMwgKIOMbCTkIBeDSGwE4iAKIZCCFKw5e4Ow
C3KukXKDbAtirRFqgzhrhFkjyV7EV5BcjdwaJFYjrxph9SKlGhllXIJwupBF
QQQF6dPInkHiBGHTiJpByDQippEvtWJLBXnSSJNBjjRSpBEhL7KjkRz6F0TG
hZgIEqKRD4NkaORCIxRqxbfYyALtBSFwRfg7ou/7ROY74v79lEhqInOJHCVC
kkhCPPXxnMfjHU92e67HAxoPXTxR8djEIxIPRTwL8Ri0h2As11hosWRiKURz
j8YdTbo159EMo0FFQ4nGkJM+J3if2HOi5cTIDp6dNztq76CzM2WnyArPyu2V
OismMz0zuGfszLDMnJ4p8+Yrb3LNO/d/UFFMilVD4ptk+CQpBMwYkFODZSqo
KuPMr1wcu0caZ37l4pA90jgHhcuvXByeRxpnfuXiqDzSOCe7jl+5OAiPNM78
ysXh9/23WcX4lYsj7kjjzK9cU02PX7k4yI40zvzKxdF15O5RNM4ZTX7lQZlx
FB1pfPaQW4ckIsk7Afk2+K+CUjY+/MrFkXGk8eFXLo6J9WYd8isXx8CRxodf
uRj6q4ZtjV+5GOBHGh9+5Zoqg/zKxTA+0vjwKxcD98jds8v4ZJbxKw/qmsF4
ZErEhjw/JDRJDuwkgs6mfEuApZRUSielRFGXFmoWubfER0papHSE3/eWBPD7
Xqp5v++lOvf7hgp8qLT9vlBSd7bneqk+QxkZisSQoXWSeunnS+UV6qpQRDW1
01D/hOomlDJNBTOUJvo5lB9DmaGfoZ54U/GT0p0U5qQKd4rvpIAm5TGphZ0S
OKltSSHr1K9JnfLcpCC9KSdJsUgqQ6cgDJQ+kPWGmg9UW3uBPL9Q3EBeG6pa
7h+IZkMmXwih64HiNdSt3pBrXNNxvcSEi6oclSsqRo7yPoKnC+Xv7ZPFr/yV
SGL4lb8SyJ9fuSYrgV+5LOAjFZfgVy4L70hJNmtqwaaGV2qnpKZCuPKbG364
MsNRFu6icNI0B8vklCfXNDmEnTM3OSrJPWis/WCTy+fGdL66kPHhVy4dPDIk
OkluTBJEg6MrWRvGh1/5K40Pv7KvSeOT7Gt+5a80PvzKmiGNT9gm+ZW/0vjw
K59wqvu6uiq/sseTxodfWXdI48Ov/J6m/MqThVL8yifv+EOmuEhIupI83UlW
nVXOr3x4Bd1vnyx+5RPWdX+zaPIrf6Xfx698wr7u66qx/MqGi/T7+JUNH+n3
8Su/WgK/8mS9F7/y4TN8yBS5Cllkk3jYJ4tf+dSPdJ99sviV36q2/MpeF6mf
/MpeH6mf/MqvFsOvPKyixa986lBu0nOb9Huq6PIrmwak5/Irmxak5/Irv1oT
v/JU4y1+ZdOH1B6/sulEao9f+dW++JVPHcxNup9feTan0dL4lU1D0vUGfRS/
clDzx1qRLWX97jVFO0J+laTkJC91UkMly6r8nfW7+ZW/Evkcv/IJ0/u7Zkng
V/7K7X7rd/Mrn3C++6cWeGo4pnZWaup83DccyeX74axrLrLhECnXkzM+uYjl
c+ee1Ni2fh+/8lemKFDI9UJ60MmRzf7Ar/yVfh+/smVN+n3VLLf8yl/p9/Er
H1iC+7qaM7+y7YD0+/iVbQ+k38ev/Grr/MrDTrH5lQ/v5kOmOF1IXpt8x/rd
/Mqnfqj7rN/Nr/xWm+ZXth2R+smvbHsi9ZNf+bUm+JWH9XfzK586pJv03Cbr
n+rW/Mq2OdJz+ZVte6Tn8iu/1gu/8lTJ3vzKtkdSe/zKtktSe/zKrxXEr3zq
oG7S/fzKo1SMtcSvbJut13oKWGvzKyeb8XhPfsgzcs+aYlUhfQwZRyftNhuJ
Le/wn7rf/Hz4lQ9sxP3Ntsyv/JXbfebnw69cU018Te3b7fvUIhtO+XI9HJ/D
tVQ+d652ja9PP/mVp1jiw688ZFDDBs2v/JX6ya984CzuMz9V1l2OIVI/+ZUd
S6R+8iu/1iu/8rBPP/zKpcLlmuLXKSKhYuORnsuvXCoaHtiM5/Irl4p+y7FX
l7XMrzxV2lVoW45FUnv8yo5JUnv8yq/Vza9cKlQtxyjp/lZ2xzrnV3a81mut
B0So0s+w3Bwv6oc8v+DDrxyy6JB4vezdVIVT59Z93p9KDFdVen5lxzn5+N77
6xrfqa2amhmvV2E1l1xN7CJzzXP5laf4B8bqIz2XX7kwOh84kefyKxdG40V9
qMuLwa9cGHGP1B6/cmGMdXi67v1hTF3Ujrq8IfzKhaFzUUdI97eRMl4TfmVq
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
/cpHv3+e9Ts/M2yg7O6Sj36kB7G7r+GwfpM0Ih/9HibrVz76PWzW7wxf2EfZ
3SUf/UgNzfBavyEbeIfb+p1hD4spu7vko9+vw/qd1xK2U3b3vKawn6YYpHz0
8/rO/JSPfuSZn/LRjzzz833N5meDnU5n3e9NbHb3NR30VD46NKr7vNB3unhx
8tFl5/g+08gAy0e/p5WBmum1mt2V3X1gJj81nFsHvvrU5G5c0zGYurGJ9JPd
fU1X81M+uuwh32cam5/y0e9pbX7O9A77LLu75KND5z6k584yMD+TzCQf/V4e
5qd89Hu5mJ+zbMJ2y+4u+ehHam+WlfkZEox3mZmfs9zCmsvuLvno9zI0P2c5
dlBEPvq7PMO2myKl8tHPsj3vTz76kacr8tHvZe39Nej5DIb7vJh32XsB8tFl
efk+24GBko9+bw9+8GwT7O6Sj362Dc9ld4fL4NpOkgMwPp3Msd5mvD/56Pe2
4/3N9sPuLvnoZzvSHrv72p68v5CXvNuV9zfbFru75KOfbcz9s515f7OtsbtL
Pvq7zYUFOcVl5aOf7e+Mi3z0I8+4vNuicemkvJKPfm+Xfrh89Hv79ANmG2V3
l3z0qckVDtVrm/UH7cu+tl3jMtsvu7vko5/t2P2zLRuX2Z7Z3SUf/d2uw/6c
Yrvy0c82fvonH/3e1vWvSWaubV7HZrtnd5d89KmteB0DbpzjoKptJP3L8RAW
6hQBlo9+jo3T3nt8aG+OkaU9+ejvsRIW6xQTlo8+x03YrVNkuOSjoxVejqOv
Pnn+Cnjw6JMH7vohv/rkSSvcv46vo0822NCP9HeFa4A+edIQ96/jrmAx6ZPn
Lbv/6JMnXXH/OhaPPrnlo8uWcN/RJ69j8+iTWz76kbV/HadHn9zy0e/j9eiT
7zEbFnD65IHrdS2ccBeGSyE5cMk9CCa5sabjW8pc9/tsDdcxjopRPvqRfp8T
5TrmUUfIRz/S75vjXyqgfPRbHZCSMWpB2M3NtAPv/CH1k4Jw0j133WoEF93q
5JblgD7poO6LmmFLkY9+pH6O+rH108F3qSOPfkYtCfu6A+vApj+k5zpALvVF
rtfqJONlo7/UmvJcG/al5mzPjboTtncb7UlHeUjtjTq0tNekVK965F2PmhTW
eBvUlsFwq0/L/VGjGpwAaf6qVWGbT5FwCNqjbp35WWtKEafUZkr2pTRaq2Up
KTWg+VCoh4o5lLetvoUqdCjfnKEvRU+rd6E2GSqA8v2k7j6+n9S3cj0pQ5Ni
UT43VLwGepTQekJ0CYXEpd4u5HEF5KyP6hYVoI+8mSL+M2qn+UlTudVQ83PU
UfrkdqIc9dRz6ZPbzL/VVvPTyLwPfdVZ81M++q3emp+j5qa6AH1yy0f317tu
Ndj8lI9+q8Xm56jHqVJAn9zy0W+12fwc9blBM/LRX3U61Q1SvF4++lGzz/vb
9MmThvWQ5/29arj3t+mT50e7z/t71XTvTz660fJ91HfvTz76rc57f6PW0ye3
fPSj5nsufRI3Vd3qf3JJJzaYSZM55rm2xstM8P7GXKBPbvno5+1qjz55mRPe
n3z027zw/sbMoE9u+ejH7HD/mB/e35gh9MktH/01S1J1Qj56bfnox1w54yIf
/chtkcSMMS4PfTKL5zJvjIt89NvcMS5j9tAnt3z0qe0aLv7LLDIuD33yMpNy
xra5ZGvb8tGP+eT+MaOMy5hT9MktH/01r1JtQz46uvmvlI9uFe66zTD9k49+
m2X6N+YZfXLLR58a3ZfZpn9jvlW1r13/Ys6l6od8dPT1Xykf/Tb3tDdm39Ke
fPTXDEzVkMZ0b/noYx6mmoii6oXm/ivlox/z8XsenV5Ixjrn0UmXfMjP/mVm
nvOok7a8LPcXzjDn0WWOltw759GZ7e7b1uCYq2foH/nodsn9y4w959EjH/02
a8959Jq3q6umOI9OWssPGS7xcJuFk6LN4eQITow3Nmf2ijaXUajLR7eL719m
NKo3+ei3WY2yY8xrG/QjH/2Y255r4zzLb/8yw4XKlw1uDrvXPNdH+ei3uW5r
HrPdxvLIRz+njvZsAJdZv7RnIV9mPp14zH0L8pGPfsx/948bYLk/7gAL5JGh
/LoHZHbWI5OxHhlqx21w3l+ZUCft9iHP+3vdCt5feaF+JAnCNG6HUOAPZS+l
YdwRoeobCieqyVCuDFWBRyQVtgYSHshjoFPtzgjUYUIzUVai6/QcG1U9KlEf
rTMl+6d5fywsWsKu2z3i/dEAb3eJ9zduE+fR48Q4bhT3jzvF+xu3ivPokY/+
ullSXUg+ej3y0c9dZ1y28+hs65SzuGWMy3YeRWm73DXGRT767b4xLuPGcR49
8tGnxrhaK3W7eYzLdh5dbp/Yeu3+cR498tGPO8j94xYyLuMech498tFfd1Gq
KslHV17iK+Wj0+J23W4l/XucR5ebSf/G3eQ8euSjqzW/63ZD6d+4o5xHj3z0
1z2V6k7y0ZWr+Er56Lf7SnvjxnIePfLRX7eWfPTJLXrko4+7K1WjHvnoylp8
pXz04w77rvczSh9ym+xnvV/usrPem5Qhi+HIvX+50wqHiPV+dqf9y8227enW
++V2O1Pxdb9Z7x/56Ge2e671ftSH/ctNtz7rIsNaFvrlvstZsj3XAv3IR7/c
ehbeRz760e61Z4Fcbj8Qv2WiX25AvotxB5qwH/noxz3o/nETLvfHXWgCfeSj
v+5D+egnact1L/ikG3/IMy5loC93o3EpAxWj7HJDGpfywy63pHEZ96QONhVO
UowCob/dl4E+TqhfexWfzrh82rRulcZ6v9ydxqXi9rTePyyl1w1K0zhJbK5b
72cZPOTp3+su1b9tvV/uU/0bN6r1/pGPftyq7h/3qv7tuFmt94989NftKh9d
eZMjrfePfPTbLau9cc9a7x/56K+7Vj765BB+5KOPGzfV2j7y0ZVB+Ur56OeU
+M6XM3se8jtfLvfvmS9NIhfj/XYLn/ly1OX9y028+eriLjZffuSjH+tXe+bL
5U5e2jNfLvdyfH/tZjYRfuSjH7ez+8f9DCo/bmgv5kc++uuWlo+uTMuRBu5s
iw95+ve6r/WvdPhyZ+vfuLU9uClHk5p4u7sD5W+3dwVi0K7hdoPzpCr7cqT5
csyM/ctNrr1xl5svP/LRX/e5fPTJNf2Rjz5u9VTjO3C8I82XH/nox0vxHZej
He5fbvgzLk0Cf7vlz7i87nnj8kc++nHXu9+4dC2Oy31vXP7IR3/d+csPPfC+
I/2AY17tX+5+7VXc/hru0itvGKDckNzbA/9bb3ggVQcPDPBI4/JHPvoJH3yf
e4URznPfcILnHnjgusILy3M711fZmvWGHVLVsEuPJ+Vb+Zo1YYlUPVTG5kj3
Hdjgf/LABs8YfoF/ZEm6/+IGj3x+yM+H/HnIP7vusMcXN3g6maT9DBYu4YMb
PBL3zsEN3uGSwi1wcINmsb/bbPWDGzzS3jnhlW0OHNyg3dz9z3b/87g/YZjn
x/2f5b4PZf3gBu8wzefjvp/l+x/OyQnf/Dy+/7NcTzjnz3a9wzqpNnlwg2e2
GJ+a2kbhWg5HXriJwlkSLormXhgMajaD+DKiQ+ZsyZ7Ra0TJD7jBI41Pofp+
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
SPqkQBOY8Pc8On+FlP2cR3s5j/ZyHtkWyD/+rkLinuD5dn+pBTWw48LN7zzi
YCdhdAeWvGEmnEfvKhu48jmPOJZ/wZc/nGGBMTuPOHLBmvXTebSX82ivmppV
DXtODYHhgAm4KljiYLga2zG2Z3YD/XQecaDVDZ9W4mtg1M4jDquzi6AghRvc
HEB1w61R6yzn0bvr9OGzLGGOkbph2fo28GznEUeEXUt7vXu98G2uAbjBfcG5
bfED63YeMYxrM2BJ9zuPXti384jB+JUNA4cb3Ay1r3Qe7XIeMUzIDezm/dXA
x72/ch5R3MntPu+vnEcU5nu3Hth5SvtOyUe6xkqJtoajr5TI6dIZNRSynltD
tea5FWqkoXLIKRHlobGn4yuLjtNzayCsnhuI1BviyWmjvXHtjMof1aqP6Jna
PUTeH9zgvmDz3l8FPu88skF/ZcPpIai2jfErnUc2EPKMy3YeWeDkx33GZU5J
55GFdKRx4XlUxtp148KzpJz1kc6jOW33wPmNC834hvcbF5rM2HIGpLaO1w3/
Ny5m2kve6Ze+aQFwg8pjH+k82nCDowVc6QP6Bzd4pxPo36QVOI823KDmd93p
BvoH9vWSinYMd9IQ4AaV2z7SebThBu80Be1NuoLzaMMNvukLcIPDLb7hBiet
QZXTUpb7SOfRhhs8w/Jd76cXiiud9X6Ga/9Kizjr/cBMPgN6zSS+0ybOen/g
Bi9ta9IpNqy39X6lVzz28qRZWO8P3OB5PZ5rvZ/XtX+lYyzPtd5f7a6NglXB
mI9PPLZMnyGP51rvD9zgef3aay0RXOpI7VnvV7pHac/KUk32SFB/uME7HUSo
YiUtxHp/4AbfNBG4wf3ADe4HbvBMwzMuZb2fabl/pZUYl7LeXy3Xej/uYd8b
lzf9xLhMGor1/sANovp+Lm25Jk3FuJT1Tv28gmJlvcdn88ANBgpwp7UkhDOu
oTbBW/Wx3lXfPdK4wA2e5Xb611r8lRajf9t6v9Jk9E8ECQumz/q3rfcrjUb/
tvU+JMHbep/0GpqQ8uxHWu8P3OCdfqM9sLYhG37gBt+0HLjBqSHwwA1Ouo7q
wqWM+5HW+wM3eLaZ73w5tz/k3r/SfM58Oc08t/Vjvhy3ue/PfLnSgc58edOC
zJcP3ODZxrTXVtSatKGlPfPlSiMq7Zkv7dtTRn5JL3K/+fKBG7zSjcyXD9zg
m34EN6jM/JHmyxmm57XurjQl/Svz5Upb0r9JXzJfPnCDKWVwpzXpX5kvxxu2
XkzPpDvVDuSgXcXmy9nW9690KO1t8yUk1CcMsK40qW2+pNbEh+Ux6VOqR5fy
9keaLx+4wXOMfMelrd073eqMyzle9q/0qzMubxqWcfmBG3QM7V/pWcv9xmVI
tJdxmbQtuMFThMF143KOs/0rrUt7ZVxCxv0DN/ime8ENTu2NhsBNGpgq2Uf6
fhuXH7hBx+f+lS52nvumjXnuH7jBN41seW7X+th/4AYnvUwV7iN9Dze4T9hi
TfoZdlufy3X3nfDFf/KEL85aOfELvVYU6Ru/OPIxub7xC2oAb0bS2r7xizPI
KaYUEGsmpRq4J37xMGdJtaZO/MIu5/5t0z7xi4fZS8ICn/gFLc19D11w0uke
a//ELy6vy6TZfR7f/yzXk3b3s13v9LsTv3iW+MWZ/X5fLb/veNaPTI3f1Fbs
tL3U0hruzIDYcygl9yWY+MY6T+wuPpfoujkDe29TUn68SZMWqOSx+MWRfl8p
PTnpgqU0nfjFOVX0c6NoF7+gnjE+kl6IilT8gnb8XMbJmvRDORbiF8/r7Zq0
RLqU+MWz3jRFKUmTrrilLIhfHHXQcx/QFvGL50prFHoVv3he71o7d8UvqJGu
M/HEL543DfKh8ohfHHVTe+2le9Mk19MgHe1N2mRpL+mTZ4d9lvjFs8Qvniut
crk/6ZVdDED84pl0S/GLZ4lfPEv84uzKZ36KXxy5JUuYn+IXD7cL+cffmZ+1
JrkiyhIq5UnrND/FL1hB7jM/37RP81P84vJmTjpoSnJPiV8m9pRG7TTRldKJ
XRKvpsRKdQmB3VTkoXzutNJQ5Q7lYZLtYjwn169zgAajEK9rbPrW9Sf1Uz8n
ZW5SjGpSJOqYDYFMBnoViEugEg0NmFBavLxxfberd1xHcUG0yT0mSo2KlSmd
PyW195ifHL8PtxepvaTNPuYnhy2zZpPuV8n5Tav9mJ8cqM+k2XKMPosj9Fkc
nkc7Pe+PA/LILfnR+9uTnuv9cQBOcmScHdxw5Md93t94xSet1/vjOLvTfL2/
Sfdd3h+H1zHTPLe8Pw6oOy3Y++NAurzwVQka9eAPlioxsPY9zpzyXKl0i+Pl
9eZzqBypPaHhK+3Y+5v0Y660xXPBjNx1pyV7f5Oe/Hh/LJ83XZnm/Swa7rNo
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
8LMceJ/lYPssB9c5rr/r3VVys2bPemfOkD892dbntnbXgDbj/OhJedZ72TBv
+rctOGO9M4vIvW5aOOu9bFjnV3puW9c2kJs+bn066LOeG1VvvZcFnZzwm2Yu
WOqJkdV7VlBTngudb0EcqT3rnZl2kQ0MTZ31XiYoOM2um75OJNtEOtL91vvQ
2pkIn/LiPwp18jKccWlvQxnomwbPuBioK7vAek9wrPywmy7PuAxtnvVeOkRN
e64sBX94pPasd+ZmveQL7M3JVSz2Zqhybho+48LeTGpaUgJeej72ZlztUYGa
kakme0Lz1Qw41YwmddP66R97s5kMqjPiqzNW66b90z/25ls0nr350gGyNxt5
Xo1IrUaQ1E0XGESD9tibHYGsl0bw9eS3R7g9RZdmWHNyZ0X/91/25tkdvvOl
vVJgWPsXLeGZL0fdfu6sE/Olg6jgWvsXfeGZL4aXLJ8/nmu+bPbmTXO4tGe+
eB0XOQd7MzmtwYaAhe1ftIjL/ebLZm9+NnvzpUtkb34QCnyl+bLZm5NV43WT
j+/1j705pCGmAVk+6x9786Zh1D/25tS63OzNl56RvZkU6kCRwNz2L/pG7bE3
FUf0WXvsTdWCfdYee3PoHgGgj/Q9e/MDWCm76DsuD3vzpoc843L+fP+iizzj
YjqT5fOjPeNimpPuNy4PezNcXi/NJHvzI/D9lcZFwO4XDaX22JuKRPqsPfam
qshrSsqGIm5oKzlWj/Q9e/PDYYPW8vtcy47c66a59FyGxkV7yd78UGC/0nMt
U7J89j1782PhDl2mas0+l+vu+2Fvfv6wN8/t/53vvfrJzRv9Pd9v2s3v+a7Z
z+2tXpOMkaBGK5vfJXRlnQ1d5wayOOf7Td/5HcqLxvOc7z/L+e5nfC7vuPP9
pvtcnwZvrOfOcjsnwwvqcL7ftKB7r5setBJzbFvw7FRvtpzz/cinyYC0d1bs
Sw40tKJnhf0s5ztY6P5FN7rcf2bike4/M+xnhYbU+f6znO8/y/nutX7eaMFy
vt+0pcbF+X5l+y3j4nwHS92/6E2Ni/P9yPLZuDjf36xB5/uRT5MjrS6JW3WR
JTnAh3tgOaibAi9UWqEsChVCUs6T6heIYaBcCaHHtSGL8fTPwXTTruqfA+am
YdU/B4bq5D7rnw3/pmnVPxv41CJeNuqXvtUG/LNsuD/LxgrOu+umd9WejU9R
Wp+1ZwNTFd1n7dmQhg522WB+lg3lZ9k4fpYVbvl/JqoETrx/0cie+VIW1pUF
ar6UhQJ2vH/RzZ754jgky+eP55ovZeLdtLTrafIs7ZkvZaJcdLXmS3nx4M37
F43tcr/5Ul7MT3kRL72tAf4pA/pTBo7b7nmzXB3P5NOkXmv/osXVPx1Qfd5n
/dPATZurfy5Mzepyvr90us73UKMEYtzMo7/odrXnfG9muzCIXTS8zvdmgkgG
7kvPW873RloG4RLPo2zf77hs5/tN53vGZTvfb3rfMy66R5bPj/aMi26T7jcu
2/keTs6XFtj5/rOd7z+IqdAFn/ac70fuddMHG5ftfH/phJ3vKRUf6tehGd7O
95/tfP/ZzvcfCWRoiL/PNYzkXjctsec+zveXptj5fmq8u+65hp0sn33vfP8R
+B164x8O3yPLdfcx2OvHwS5q/N967+gxufcveuTveueefu6s7rPeG/SIPnnt
XzTK36G56JTPev+zrHdu7ufKDrfej3yaFE97ZyW8JHnWe3PRBNONltn9Z4Yc
6f7zhhXj9nm7/7yBI10/I/tnWe/c78+btW5akk+T9a39i+5Z/6z3I8tn/bPe
bzpo/bPepyb9stBfmmgLuCmQkkqAPvq0Z2EduddNJ720Z4G89NIm/p9lov9Z
JvTQTi8T9M8yIf8sE+/PMrGEI57J4r9pqs+4lBd501afcbHsyPL50Z5xsRxJ
9xuXMkDh3H3prv3QP+WH/Sk/QHrI/kWHrT0PUHTdZ+258ciayupD8Tz02WW9
N4NqmK+SQYJe+/tct5N73XTbnrut95d+23r/s633P9t6H1rubb3/2db7n229
/9nWe2i7jyyfy3X3Pdb7H4EjrAv/vb9mX/hF9/19f9Jo9i/67+9PvmjAz/v7
u7w/6Tb7Fz34cv8ZabXZhyv5og33/v4u7+/v8v6k7exftOLa8/6OLJ+15/0d
6Xppz4sbGvLlRfxdBv7vMsB/lwGUJrR/0ZWf5xp+snze7vfc0rG/pSN/ywOH
3rw08Lf8wd/yRTOWD/35keVzue6+7f39fbw/aUz7F136t58Xbfrp57+lny+N
un7+W/r5b+nn0Ksv/fy39PPf0s9/SwdDv35k+Vyuu6/c8G/rZ9O0k+VzuV6+
d///yo3/t/ww4n/dSre2jdJ6rLL1oXWsH0bt+uPwW38titDCr/9159e/e5TX
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
feTWXpe5O2a3z77/x4N/zO7Fm/61u9urLswgCnPs7lrs7lrs7lrs7lpTPu/Y
3cfv/feO3qwhRUtyUUBfCQ4naNTBh21sEuVmd9did9did9eaMn1bUI/dXSso
SHZ3LXZ3rSnn9wCvsLtrJcuW3V1ryv19gPjZ3TUs1VMG8Admjt1db1nAP2Lt
KQ/I7j5uiSWaZXw6qrXY3bXY3bXY3bXY3bWmvOAyPuzuN/pfQ+qX5LiAFgNu
6KDn1MoJSjTcsuGcDJdgc+cNl4jxeXM7k7PXOWqDuQ8WNxjLxhQOhifYjMYi
TOy2Y5Ud83rXRtANfh+7uxa7+yu7fKKludjdL+p1D2lnkl8DSm7wklpIk1XN
7q41ZRhxRS52dw0r+ZRnlIu52N31lmuEmZ2yjezu4x46kt09qNzF7j58GJvs
Mo+YwBa7+836bhLmNWUgk2yC0WhY06c8JMafxe6ut1zko58pG8nuPm6pI9nd
k2W+2N1XeUmZUIvd/bK0T9lJmTaL3X2Vodyem3KU7O7j5jqS3T1s72+5Ski/
xe6+yleW9lLGkt193GJHsruv8pbL/Slzye4eYzhlLxe7+7jNjmR3nzje3z3R
6LPbQt9Yv+WIrnIkVU35TOu3POpF66wh40xSa8DGASU1WMH6rbWD5kZGyxKq
mrKc1m/R0GvYAWikVVO20/otGlYNq/6U87R+y4lfb3lP63fKfDrxjlvwSDvg
oJDKiqgy46rMgKopD2r9lpZfdHoN2W6S1pNM0KDDqWXm99Vwf4cTuLleh+Mp
3BrJue9c6smBSm5EY94HS+n3BTvz6iJB0aeUYErSpQRblzqb0kX6ye4+3XZf
ksSGsl8/X6pz/XwpovVzqIet35datqlU2d3DAlEvRVgosZp6aqh2QtkSipKm
AhlqB88dyoBJVffcpEC/qZRJyUsKWqd6VVJ3kqrSKSHW7wv5b4j7CwUO9LUh
ptbvCyG0fi8IlOuB1jREY7+hjLjqYvLHtIqKHpW0Vb/ZYtLVkECHTCFJLg2G
ncqe5b6pZIl8ZipLTmVGzOJrKhw+vp9KgeW6+XlV1Cufu8Idu3uyOXZNJbBU
5kpFra6UNRWj9JPdfaar+5K8OBV/9JPdfdzbvh/OOv1kdyeHM7ldwYDHZho2
ks3uPsugyK5MUans4Lns7iEBvCoNeO4w/5ufL9O++Xkxx4fJXXvDrG5+Xgzk
2nvmpWsvDNzs7puB2v0v47P727l6MR67HgbiZgR+1jDQJhsnTKhhJg2jaDOF
DmNmuW8YIkNu1Emnw3gYBsIwBzYj4DDwleve38VUVz43cxy7e9hjLiawMHg1
M9cwW4VpKgxRzfzk/V0MSZ77MhJ5bnUu+R5fTeZOGGiaWcb7uxhYtLdnsWov
DCQvk4f7h1nD+3uZLLy/i/HB9TAwNCPClcGfDPlkrCfTvDPIJwM7GdHJZO4M
5ckIdtawu+/M2fK5M1nZ3XfGZTIlOwPSuFyZgp0BuLN5aS+ZcuzuO1OsM8CM
y5txZVyuzCTXkynUmTtXhkoyRpLp0RkclYyJZDp0BsPOpsomCNKf3X0j3RvB
rn8vYlz/LmR12xb6F+TxhcgNkrYRstp7Eanau5CbrgdJye6+kYHls++DnGtk
2vfuIIeCbAmCI0iHIAkS2U9EviPtE+lNRDORv0TWEulKhKojTxNBSaQhnvx4
1uMRb0/3eHzjUY2HM57J9jiOxy4etHi+2qM1HqR4ftqjM56W9qC05+O1qGM5
xsKKBROLIpZAa/ijqUaji8YUDSaaR2sUc7Lm5MpJkhOgd/bZGbNTZYfpnWNW
alZYr5yZ0ZWZtcaXte479ZM+edSIIvWTPrkFpI5M8Z2Q2DW5gFrKAj1H6id9
cgvEHKmfeWrKmNMnt8DH2gISa1jABBKO9Fz65ObgX29VLPrkkPNysC8Fne9f
mfLo9EmFmc+v55PnUF5X+fT19Ohob8qp92i18sURuxQ0Norun3Lr/RZSdp0+
OUHOlGHnGFwKBX8lfXJzhE1WxeagOvLMT46lI7uMu/nJwbPebNo1RURCxpUk
6U6mMj85NI5UbGnKwZufHAlHlu9TJt78ZMgfWXXPppSPp09uhjMY/A+ZrF/9
pE/umnLzRpKBd6R+0ic3A2wN2QWD6Uj9pE9uhs6Z3fpZwznZs344QfQzOYV7
fPDRCTyXPrlrSnCbnxTdIz23SaMpokd67pS2Mj/f0jfmJ8XsSO3RJ5vaeDVV
6mrKzWuVtlFQQ0VnftZLeeP+oQoxP18qAfOz3pRM15Na1ikn+4WIBQKRUGpC
Vgl9tKt/XDYx/aJiR1Vr1WSWcobMmNMntw3iyHK9dyP65LZwhaftUt6fBXCk
59Int4m7tol3pOfSJ4fsO53wgq/djz4ZzttwESXWF9sjc0bhsiO9Pw+8dtE2
5tywFBTbiyDd37utCkpLwa+9BjShUs5SuOtI70/lFOmOnz1siponz7g89EmF
rfZVRZA+GfLzvBSFp/a1+9MnFZTawvFOBePy0CcVeiKfPjW0R598TxH6ZGpe
p3ZEsAnxlcxpg5lRWN9n44KBT3jfZ+OCkQ3tzLOnSqLCQuTTp9hyXf/mVFv6
h0EHHOBI+qSCPfs9/TB5gAn4rH+NBYtvWgGdDS7wlTK2VauoPaeoQjZk+aw9
GaLgBD5rr7HLCseQ5bPvZRiBFSxZfd/zqLP7pMl+yOchP5v8nkcPBKi0pp+b
xWFNMauQQoaso5N6t1jnanZPS+KYq+7byIycR6YruX1/ziPTl6y6tQzn0SOC
CP6wsEvop/Po4ZFfpj+pn86jh0fzSP10Hj08XWvIlpbzyLIh9bNSu+3Rzxru
Y/2s4abSz+S274kFxzbNnuK5zqPHCb0sS9JznUezidrpLq3LefRYmWAcRzqP
pjqoFsE7fF/acx692ls7oZbzCOE9rc79zqPR8pbzCCH9BfJSfm8hlj+yXHce
nXyrnz3sIGdVP+R5f+U8OvAR93t/tZot1nkUMuaQZBkEkg/JUXBgJ773/sp5
9GqpzqNH4XlwlCOdR8NOW86j484o0nOdR7ZB0nOdR3P4lfPo1YqdR4iv9won
XjAn8YFFd8mcsa2S2ot27TxCGL3BYY50HnVpk1cLL+dRU5S/4LxyHjWV3GqK
qdVUFIHAB+IZqFggOYF2JBQVl3Zch3FBjTLQKuBlFbxLsV+pcdnOo6lmu51H
CHuPNC7befRaF84jxLp7pYZRMHLx2Y8Vsp1HiG73GrCicozgPD4bFxXx0Iw9
e6rsIoolH9/r3+M8eq0d5xEi1w3+c6TzCAHrfq2ix3mEWHW/IMrHeZQYKULU
DR70lR/nEeLSPdYVYlKyfNYe5jHwIZ+193EeIQIly2ffY0QAI1rYf77rvVmA
0LB5qWfMj7usyB/3n/V+uvlMsVikujVkeJkU2Bl9v+n41js1gKy6rUjrHYHj
Bl9a2KY913qnPpCea70jQLyrJ1vvCA0v5XZZ76/Var0jHhzuy2DL4uuOjZKz
YVFTSO3F+rXeEfZt8KnFKna/9T5Wsp0TrGpdYFsjDF7lc7luvSOoe1m4qUnk
GZey3hHF3VWkrXfEb6+yj8jtttqtdwRtG1zrSOt9qlGX9Y4wjbWvPev9tf6t
d8Rme6VWWbCwic2Nl6Csd0RjF/i4rPcucbW6tEgoX5PaNFWyGwIcqGWgBQlR
Xt6INa6mNulblbLeEWBdXottvSO22i8oelvvwUIgpNrgZIu347T3WO/xfiCG
Istn7T3WO2KnDW52pPWOiIksn32P0RDsbGFp//6oZms3ixh5Z74gKFJkaT13
dXHzBZHQGIWqo9XttTFfEP5sMLalOrn2zBdEPKT2zBeEOrf3x3xBlDM17YKZ
Tgz39RLx1IDDrQuUTmMGi/O5XDdfEMS81dMRv5CP7/WvzJfXG2W+IGbZYHSL
l8r95st4rcp8QZRygeXLfAlmBsHJlFxM6mJSc8b71ZChQA8GdI8whHTdfElO
JWIPsnz2PUIxcLylivx3XLqaPC2xyMf3Z1wQXdzeOOOCwGKD7y1eOvcbl/Ha
LeOCUOJKGljGpTFE4H1HGhfmFXnaa+8fQgay1pt8gFiBdN24JMe0U2+TWhao
GxjgVz7GhTlHfp/b3saFSICsNckOCyEA6brndk7rkrhPls++L8/t1O0lcZ4s
n8t190l032CDvJ9f3OCRycbffswXN3jkB/vfFzdYzFPyL5KIL27w9G75+wq7
Q4qohow8JHEhkwnJRJMVzCCG1YZNfnCDxQwmzf2DGzyr0mReT1gKFW8+uMEj
kVMe3OA5DW3WqUJxcINH4rA/uMFj5VBaD26Q1eP7n8f3fzi9Dm7w8iIf3OCR
5fM/41zL+NQK64XxObjBI43PwQ0eaXwObvDMXuNTFbafFP0NeX5IDUN+1KQo
s9jD3pha9KlRndrDXWt3ao9VV+lILYhw/Bufl6O3mrvT+AwH4XB+VXM5GZ+X
68X4hCNjD5Y2sb34ZKIL54zM3tdrHWRshY1yT/HuFMEIOWmTmM1hXV19xO/b
XF7Hk3ckUxpu8Ei/b1P14QaP9PsSNdiOIrjBWnCDdba3HzKsmfr5sFmOJU7q
58ENHlldHUU/u2jRekIqPcaVfh7cYElcOPLRz0etp4lqPLi44QZLQsFXfmDf
4QaLe4f03A+dFm6wuH1Iz+2ii3EGww3WG0U5uMECjD/y47k/cjTgBgtgndTe
wQ0W4DmpvQbLwA0WAPlXHtxgAYKT7j+4wQLwPnK7/+AGC1D7SHMLbvDstmf9
nplLboen9Xt+EfmDVNT6PS0eaf3CDTp9ulh3il6EjDSkZU1mNId0WFb5XJf1
W8v6rWX9wg0eWV1FR0nJZf3CDR6vDGN8Wb9wg0c+vrd+4QavaNeyfuEGa8EN
nlPU76sV1jG/r6xfuMEj/b6yfuEGjwx7rN/XRWuqhlS4yQdHya6uDuT3lfVb
UxN+akH6fTW1efy+lyvd7xtu3OFc9PvCsbUnZyEYivi+43OILdI6pvULN8ia
cp/1Wztk8OMU0c9t/cINFvclqZ+JMm7r9y1Fb/3CDRYAEZmSop47pSqt33pL
vHnulA7bCeZ47pQYsn7fEjLWL9xgcaeS2htqeOv3orbWXoPcXopg6/eiDnX/
UFIa25dy0Pq9KNNcDxVXUzrBDR6Z1N6kCCYVKyk9SWHpVJGBJAfaGAhZoEiB
3jTEZYy/hAYTYkpIpUMX46qNyy8urnYljWsgpnCbnGPq1KjOu7e+DCGpn5Dk
X6mfENkLbvDI6ipa+glBuuAGGWHtrNNPCL4FN/iV5mfXEFwT3a6p9aAz1Vyx
e3KrgvVKjC6+0faZmJ9wgyUgSHpuBxfhBmtNNF3kTMDuSPMTbrC43Unt8bBz
w5PaS1Se53MGE26wuOtJ93f0Hm6wBJ6OND/hBksA6UjzE24QvdvPHnZsgRjy
vD+4QekH7vf+4AZ5Ydzn/cENjnNVGIEUQzcCwgpkud7oAy4wgYItneFIRzoH
Pum55f3BDRZHO+m55f3BDb5BYbjBC+1Q3l/XMF1dW4aDeg+WNBiAxF4yVziQ
94Wa2N5fFgHcYHHwku5vdAXcoDQLn70/uEHpFj57f3CDaFQ/e6rNcWiSZ1zg
BpUp8L1xgRucYtQJknMY7gvtIbTFEbilb1jUxgVuUBSkSO2VcYEbvFAjZVyy
KcANTo55MO+DLumzjENrv8n3cIPSQXw2LnCDyjA85Okf3KA0Ed/rH9zghWJZ
+tebFQfNVv51k+631XKkkO6v3baB/nVuUWwFDo6tjOwmT3uNmuGAIMtn7cEN
Sj/xWXvNOcXgJ8tn38MNSkNZWA6/+mStNayHmxPm6JO16JO16JO16JNHDfX3
R5+stSqsrtvfTfG0kNqH/LZJMcfZExZ+sXv6JIOG5COjTzI8yO2+o08yJI78
COLQJ+0S5OP7o09S4G9UEn2SYn7kX+NDn6QQk34ffZLCSvp99EkKJpnqAn4f
fZLCRzZ59Thp/T76JIWL9Ptqaor7ffRJChF0ld/31uLw+17ubr8vXK17cl+D
xQ2GIrGr+LTbVzlrTz/pkw5eUj/3BNP0kz7pYDxSKBrio2rQYPRJB9iRXLeL
PulgIT2XPumgONLeK0JaNnbScxv0I7JXL/qMPmnjPfLjufRJGySpPfqkjY7U
XlBsnQwR5YbnvGw8pPsb7cZTWzaQI7f76ZM2giPLdfqkBUmGRXlz8pufLN4y
4ck//s78ZHHw9rq/UpQzxVKaVH2CBzDx9EkvkBRbok8aeHL73vx0kpQB2xfK
jz5pII40P63Q0iFSPx2lGiL105AX3KCojvvMT7jBN7hb9EnaAamf9MmCG9Sa
61MzTD+raw7sydFPzkCwXomxd+xtdAPPpU8eM9L35ifcoN67bn7CDVbBDZ5u
ao8+SashtUefLLjBetGT9MlRuqckKX2y6i215v63FJP76ZNduqHqLVlgfoai
Gm7wyFAmhXolFBehSmhqgEnxTKpYUnKS2tGpDBOcD8QyUL2Gpg3UxVgPRGBC
qoyNhIZeF1FMzaj0UQ1bFZqtI6/Ic418BUSYi4NKpU8W3OBXen9wg5WcpGBJ
g+GJzZG58qJb6ZNjLAEMFrgG6f5GwQLgHel++mQBvh3pOn2yAM/Q3n/IMy4A
WqadH21cAKdU4/O9IQB4GlBlBulF5dInC6BIOuGR9EnwElJ79ElwE1J7psIk
m8V4nIrl9MnkTg4KuH0iOcuGnOmq3Os6fXIquQIeFJgLefoHMFBgL2S5rn+d
BBejtqbCHX2yrkpo7qcSXJW7dvuY9a9z1N9KSPTJuiq9nPbeiinaeyuFaO+q
LOF6aS+VBi4m+vLZ92Emb4brLTBzZBhYwzQaRs4wXoaBspkjh4kwjHthpgvz
W5jYmkFtgthhwArDVBifmqlpGIisHefRXsOUM8wxFm/Q3y+DSfncDB81zA1h
KEgmfzLlk7neGeeTCZ2M4WTkJkO2M1sHZKSfzqO9JrOQxXxlvunnm/Gln8mI
2pMxk8ySYI6D9WoMyNio2Vs8dxDodtZsamuQzYMM9twgZ19kZpCP2hsEIZXw
Qrhp70V2aS/IpxeR4/5BtvBlvoiORk68CADXEyHviHC9EbREihJRScQiEYT2
/I9HOp7beEbjqWwP43jO4pkykuPhGY9HPBDtORjLuy3mtkxfyyUafjToaLSt
iY6GFQ1mt0bRmsCcjDmU+oSZHbpm58rKyMzLTMgbzC/KE965sh1gJq/P3p8D
w/FXpPudR9tGXkN6Z0OtLj1bXZKyunTVOS5XU+eecbHwHaN6sZoSyrhYcFfv
JnXVuPThDB27A9kN9DOQsIS04hp/f+Uel9aYOlEpWzWZJd1Tw7joeCWHf7JD
PGBsKiRr2/FepOvOow03qFzhQ56H9ehvuMHyZ2S5rn9wg+NE3XCDpXnS/c6j
DTcordln/YMbHK6UxD433GDpJnna66yXDTco7dln7cENSn/2WXtwg9STIstn
38MNSoNeqvJ91/uBkXSVvm/fDBf5MUvPej8wE/ed9W44yaem6G3An3mZ1yy3
3g07Sflbnd1jvT9wg9Kvj7TeD6zqIT3Xej9uVveV51rv76qy3ic5JcrmMsUf
uMEjPdd6P7CtZ3Lg39W5drDjFV93bJQ+G6Q4xukON1imD+l+LT5wg0e633p/
4AaPdN16fyC+lEH6kGdcyno/6qFdxLiU9W663ruL9Z5knSjfbzaV9f7wIEs3
X3Yl7Vnvs0vxPJTpT2rPeh/SAhaE9PS1hxszXB2TveVEGd/JY0ejthbpuvXe
JeLPbnn6Bzc4u+cDNxgqolCaXFli1nuCI51yEQhCQplvNtmucUm16d8ql/Ue
TqRgHB64wbLsydMe3CB12mftwQ1Sr4t03XoPV/4DNyht3mffww1Km19buawP
+e2sbYd8nC5nvpxmni5gv+9Tx3zppK4YaVc2nfnygRuUhr+64PrTBdX3dXot
88X21oXN687KM18mSAU3GA7VcLq82XvLfGkf20v2CjdYV4FsrlW4QeVlny4A
vd9T9bjtVxdo3l2Iue4sQfPlKqCsf2W+3IWK3W++XIWF9Y9Gfxf01T87ckod
hMp7shKbYixURUNmexeAdb3alWy+3IVQa+2roKn5ksKgZ9o8XThzj5aBZmB1
YcvdBSzrzpI0LlfhyUd7xuUu8Oh+43IVZNzuNy5XIcRy3bjchQFPe2Vc7gJ+
tV5S37twnuvGZQrXwQ3eBeN8v41LCqrdBcq+z70Kj53nXoXDtvs99yrYVa57
7l3Iqta+ClJ5bgo73QWTau2r8JH7UkCoC/Scv0pBmhSUSWGYFHpJAZcUaEkh
li68MgVSUugkhUtSkCQFR1JYpAuJDEg1ky4FOlKAI4U2urDGFMSoLnRBt3sL
VljLawpMUBKj7U5hiCnwwHk0hRumEEP53AUVagobpEBBCg6kkEAKBaQgQBcA
GML+EPCHWD/E+SHIb0L8AZPncPD7XqJ5v6+GGN7vixY/hO4I4i4Cdr/vJVD3
+0KEvoezMxwiyf1Mzk2w+I2xnphhfD3RsXP29p46yT1R1mNt6OdLQK2fQyw9
RNH6GcLnB/RM/MIpLWlYyHkNMbKQxHqJi2PdeG4nGcdpuIYwmKr3Ev46ssQv
NrWTjJWkvZfoVntDYCuRJCCJIZZ9CWDdP8Su5f4hZjWGF0Gq6yE6bYJS8Ysj
Q+QZYs4QboZQM8SZTZQ5xJYhqgwBZQgmQyTZxJGT5BClRe71S8jYBIxDoMg4
ixU5xIdDYMhpmyz3l2iwfG7CwBoCvxDyhWgvRHohzGuCvCG2qyas08+XeK6J
5ibpLEZkrF39BLhaFyGbfr6EavoZYrQ9hGXhOEpuenICO1dosAzxQce6bpvA
/Kw9Tm3PfYmyPDeEV4AlzJP9Wuc1RFLm50X8pD0AjIuoyfy8iJLcPwRI5udL
YGR+XkRCrocQqIl87LBHhgAnxDYhrglBTRPSDJFMCGJAgl6ilyZ2mWTBGP/x
SnCN2yDWflM9uSjeVDAmTFJaaqCtgcgFihRIS0M4JuRZHVqKF6Rd8uPii6uo
XSNjStaowru3nrzi3EpqT0dWx7RW+xIzR1ZAV0N4IMBwExC4/yUQcH+IAN7E
fdeTgN+J8+IXRyYB/YyL+MWRnThuXK7E7niDnv4xy/Wd4Ez/yEmQLp870ZlD
cV2JxvEqaY9D70741R7H25Wg24m3jqB1JcK6n0MqsfacWXcCqetJBO0Ezitx
8vTvSoB8fK9/V4Lidl3/3oTCThRkmN+Je+5nQF+Jdvp3Jby5zgCdhLMr4eu0
9yZyae9NxNLelRDlOgNlEpKuxKDy2fdJzOlEmaNedmJJEkSS8JFEjiRqJCGj
EzAmYSIJEElsSOJCEhQ6IWESCWI8A2i+QP8G9g8wv/bthRxA/QDjBQsH8D4A
9vK5geg1wPAAvQPgDkA7QOwGXg9gOkBo/XwBzQ1gHgBy7dtLOsDhAQDr5wB7
B6irnwHc7gHCBuDquS9QtYGpg6mrfXtlxzc1e0yCqb0pDQDTcwOkfIGO1UDG
eHkboMgxdwEKtfcCArUXYN8LwHP/AOsM0QuMo2teADXXAzRrgJj4xZEBVgUw
FUBUgE8NdBqAUoBHARYFQNSAoQH8VDuf49VuoM4AbgR4B0gzwBhjHIBLDfAk
gJIARgIMaSDIADmqgRrxojcAw/tL8DuHyAV48NwAF/YAC6qBA/HGNyDA+6s9
AfzdcyM6S8+VDqS/Ae8Ett3/BqbdnwDzGxB2PYHdDsiy6PYd2EzgMgHKDkhO
QLE6YJhoQgcCjYsTfA7VO/DmFSaA9ga4qgNYiUp0YMq4XIEk7b2BIO3F1f2a
RFE9W4WZpd9TqG2oNzDhegIMHRi4HPLVDvc41tuRrn+X43u7Po5rDs84oF9H
cRzC7n8duu3A1b/LkdqO03aItiPzciTGYdgOwnH4tYNPe5ejrR1r7TDb7dB5
HU7tYGrHUb2Ol9UOi3ZcxBERB0McCHEUtGNgDPoY6jHEY3C3gT0Gcu15Sfsy
bMdAjSHahucYkm04tkH4GmoxwGJgxZBqw2kMn2rDJgZMGyxjeMTAaGVxDIQ2
CFrRfxXxakU7CnUr0KMIR+FtBXcU1j4TWvF8FcQogq34jSLXilsrZK8C1QpT
jeKyWlFohSGKQA76HOh9gM8BnAM2B2kfnHMA5qDrg20OqspB0xt1DoRs+NnY
eyOfDTkbb2+0s3FWNr7eaLJRZUPqDWg2lMqG0As1C7myELOAemJlAmeCZiL2
xJsJlInSE2NedOVF9cBkYDOAPWAzADU77f714Jo38hXWe8QWvxhWti1+gZbN
Z+2JX6Bn81l74hfCtEWWz74Xv0DTtjz2O1+O+/r51Y0zX445474zX67udXTY
fHm7a760cSUc7POZL4/4xflZ2puft7Rnvrw/13zBCnKRY6//z9i96Liu61oC
FSUnVft2///3dpmDlBXkLqA3sA6PFZct601yctJ4WfwXT7PwXzzsdfwXjQFu
Wxq3c5DKjZfFf5HNm/V7mln9+C+OZjdesJQ8pN0dhLP4L57u4b942PT4L9DR
jSM5Hf/FzunRMbqL/2J3c24j8bDyLZapTrGwk9wtGkKHUDb0fed4XvwX6Otc
+53/An3dMKzudjmGV7ZLqnfjHG7aBUvLJjHvoCR0d+MYlvwXD5sg/wUavHEk
6eO/6BwnHbOMDm88w/viv9ishBf/BZq88ST7u/gv0OW59jz+i04x3il0O6VP
h+ijzRt7OoEJxGZBBBdwne+t5ILgA0Eq997KsQ1WEGS49jv/RaeoBzsIMlyH
cve9+S/Q7GFlvPXNlH/6ptojX7n1zXM5uPXNlG9/d+ubKcP9t755Lhu3vpny
NZrMpZ2zH8vKxPGV+mYuM2KT9nJTqJLUN4/lJ/VN1hXlr+H6Fa7fvi/1zZTq
mfrmuXwN9Ux9M5cz9Ux981zeQj1T38zFYqyPZW8fMtc4l8HUN1l/lF/qmfrm
GvTNXC5H5VCL9bF8bg604kbasVu1rELPjI2B2Las1iHqbIECkL65Bn0zl2PP
28vymIXaWeNcphcM+Gi2zsWmOiqYkL75LOf0zbVZPembKd1/OerRN1MqT31z
SXBmW8j+o29ahdbHdqH/6Ju5fQz36b9nO9F/9M1NfnZsM1s5WOPcdob+o2+C
wbjWf/TN3J68N/Tfs13pP/pmbl/eu7cx/UffPLa10H9thKRvpvTeuKpP9d+z
Deo/+uaxLc6N4Z9lexhlE49jbOztk765NusqfTOl+5f+o28uiQBS6j/6Zm7D
o1LLR6VO7lPLqlSXl/u0y7Ndaxf65rF9D+1SRtlB30wZmzJt5jY/ivqhtnvt
Qt88tv/QLvRN8KKCvMaGUs3nmDAfF8cs00SbmOLwydUSUUMppXaxQ+ZxI+v3
HDvUzww8jiFD/fTsTu4haHCiw0xZxxX65sOCS99Ek+la/eibOyfYoG+iy7xl
HXsGfXOz6Q76JhpN155H30Sn6drz6JvgVEGGa7/TN9FqaqSc70HfdNpYH8ev
nO9B38zj2HBfzvfjeJbzPeibSKzWx7FtGwGqc+oYZ74HfRO8y/XFVme+B30z
pffu49/wXvM96JvnsTBmoRrXOI+J5vt2MtA3U3qv+R70zfNYOWZs7tTjmGm+
B32zfV5ta+w94DmO0jd5B5SH+813gccTPC1I5ea7AFfH2mwX+uZ5zNUu9M0c
lWN9HH+1C33zOA6b7+10Cfom+lLX2oW+eR6ftQt98zhOm+9B3wSbc61d6JvP
sZu++bBC0zd3zGDQN8HsglRuaAnUcHzP+j3HePWjbx7HevM96Jtgeq7Vj775
HP/pm02p0KGaHRLXoQgNgWhX8+byqaPXViMAT+dmuwYIJcO155lp6Fddex5F
BEwwyHDtdwdyNKyD2nKPl+ngeKoxOV6mA1+uVmN9qDc5XqaD1qHuGC/lnANH
jM7Y3Jl/O6Pmh3o0ZnQGw1NdMl6mjRmMMQ4yBBvmo1bZwHjHxuYo6djSxmiA
PUYzPjdzcDOKNnPXh5qmfhaqQ20zXjhAnqROHBPNnHCodyZcRdh2xGVHNHZk
XEe+dGTJw/k0G8FcaiJD38N2zgDXCIP2VG+Krabq6RDrhiqV5tAn8z7h9co/
0dMOaundLod6mu1CcTjVVe3ioL6TXDVpBTrbcai19M2HpZ2+ieZ2HMnZ6Zud
M7M5sNDdjkc9tiE9bO82CjLGk+TdQkkq1y4WjAl+GmSMnTq2qeDQ4o6tjoOp
xmaXB1d1ne/NbTyl9170TbS5Kb33om+iz3Xtd/om+tw/+aJvotF1Hcrd96Jv
otF1+Ln395R/+3v16ocZ4d7fU77cf+/vPmt9mBnu/T3lNZq8+MP8sI37degq
c0Tu77zPyu/9PWW4fqln7u+ab32YMYb35v6uWdeHeSNmRRmscZo7cn9/wAL2
95Tem/u77lkf5pExoznRT3NJ7u+85uNI3mZ/L93uMKvY33nXlYf7c2tNkJb7
s4oplef+fg37ew6bbBf7+2mu0S72d8NqfZhxtIv9/TDrDO1ifwdXdq1d7O+G
5/owA2kX+/thFgrtYn8Hc66kdp4X2qXNR/Z36IKK/R/FKRUHlm7Y39Efu9Yu
9nfTZn2Yo9TP/n6Yp4b62d/BqislU+xUA4cZy/5eVEmzKBhmhbrPCjGcBW2c
BSGbm5NvzDKt2N/BtGPubBHD/o5m2bXn2d/RLbv2PDs0WHeQ4drv9ne0y8Aw
OV7C/n6a43K8hP3dMrM+zHQ5XsL+fpjtjJewv4OPu87xEvZ3y9X6MPONWdE8
a5xmP+Ml7O9g53GQF9nfH/Og/R26ZGzOseaKaMwlmHqQyo0XBDnMjFk/+/uO
Lgr7+2F+NF7C/r6TMIb9HY30OMyU9vcny4f9Hb20a/Wzv+9cz2F/RzM9HnNn
2N93tpCwv3eK3k6t1tSZTcHX1CkNQQazDzJc+92GiY4aSVS2y2FmzXaZFvDD
7KpdpgW2k1I2yRT66nGYZy1ET5YTCwla69GZUzvj3M593VyWlXnkMfNOA3Vn
S5kGWjH9NaNaM9E0Y0szY3REciO9GxG9U8I3xWtZYrdZWVhB7Owswgtc53sZ
EqdwgyCVey+DzBSGEGS49rv9HV32n7RRk+E6lLvPBJ9os4He7vnuWLA+zOD3
fEer7b57vp/m8Xu+o9sep7k85/uRhSbnOxpu15f35nw/zetjVnTeGqe5Pef7
kc0m5/tDSma+P2Z58x36azS3YHPCNLZ6Cr8IUnnOd7TeyM7Uz3zf0YLDfD/M
/kP9zPedXHWY72jAx+EeMN+fLDzmO3pw1+pnvu9c7sN8RxM+HjfDMN93Np9h
vlcq7k6h2BS5TbXZFEkdajCFjwQZrv1uvqMTR/6W7WI47uhJNOPjdHdolzDf
O9lsk8ehHx+HW8R8f7IQme9oyV3PUTntlWuXMN/Rk4/HvRLm+85mFOY72nLX
nme+oy937XnmuzCYIMO13813NOZju3OEy8TOniRsxnW+dxqowmiCjJ3JvTNw
NgN1My03Y2szbXXEyhR+E2S4DuXuY6CbaM+R9t39d7qd7v5Dhz5ON1T235H9
KfuvSP8mmvRxuKv035MlSv+hT3c93Z/9h0Z9cwxPNOrjcXsN/bezTQ39h17d
tefpPzTrrj1P/wknCjJc+13/oVsf280m7Ch2divhR67zvaH/hCMFqdx7Q/8J
UwoyXPtd/6FlvxnLdQR6dteh3H1TxdCzj3YDkn/1rOxbU/iT67ueaNtTZj3R
t7sO5dPz1BONu2u/qyca9z8Z6onO3XUod1+oJzr3MYVbBRmuQ3n43f1o3cdE
664zxvgl46e+ur5+Ge3jsruOF2W63aHjx2Qcv54Tw99HvM9ZcjO/kpe/bzdq
vP19/NSgaFL8DnLrXb2V+N7sexGowbRw9N0MkKf1Y7tnl8PVzcCY8oJhvpkM
yXLfXox8NyNhyhdb/3brVpT6/baU5ea9mf1IZ6CbyY+0Rt5MflYL7fPXg+9j
9bg3LKeWoX2223hon5tJzKlG+/yN6Nd5yrmpb8hyM4f2uSlgbDKdpKGDLts6
1EalPnzWprS0zx3STJa7emmfO7Q35aV9thu7ovfvt6Qst/Yd4khqnzv0kNQ+
dwih05rvmztXc5/iOrdR5zzpXBaVu2FzNDa3Tlu9Ota5Y1grZnNj2Bs7WG72
beQtZXD7etoG3La9smVt3bF1gjoD7zND9BrLmYVy/N7oL7KtcuXOR615D2f3
o6RLIlSy3P1iz5PwNOXspFTq2awJq51oBQtYbPA7O+CisydB6TI9Ul5CyZJo
lCw4gVCHJBRNCUL9wAxAT/MrUhbsoMipOsgjCUBJ773YYJLok/S8YnvI1kgZ
nvfigthZDV9MzE2Km428xoY3JDEn6f43lTUJOZdpm/LH0TaJOJfpm/JX390L
5w+Z87d2/Tyf0jLM39hwCvP3nvb+3vy9Ny5/F62dLH/X8Avz914m6nDYyVU6
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
LWfb1DdTK3HoSX2TWqzXh3qmvpmy3L2j0Yfqmfpm6JYPd3CoZ0f39ShqN3Hq
m8HgSBYL5Sb57WD5CmLYhzP1TH0zDIMPt/Pw3jk6qrBGb7mjU98MhjKyWC+n
96a+GQxdKdcoEv44jSXt1qZvBgMTWeyZ0ZxDzfVQMeBzRGPzG8PXtq/WOfos
kpKKTd8MBphbvjQFfTMYUm75Nj6zR8nsv/wCslGjl0Ou/qNvnu55/UffPGb9
KLf90H/0TeaICjJpcuYmOajgk32opkMP/UffjPHAAPQfffNZZTY8IPQffZN5
w+/6j77J3FGkQ6OSJ8Rp5GqYAX0zKGRksZzqP/om84hy/UffZCYRQzc6t17n
RCkuev1H32Q+KRtC27bj6GMKxsW9fF0nDEK70Df3qjs2PGJoF/om84vftQt9
kzmmSJhGJZOIw+i3YRb0zXBwJYvtVbvQN5lvlGsX+iYzTsqpXeibzDrKfTN9
k3kn5dIu9E1mnsPX1fAPByeyUzgWC210iqhOxVMpXdSPvskshKpiNCVjU98V
hZr60TeZiyq0cFSIaOzQo4vZqEz77UJsV02Z/LepLLYKdtVS1lPiYlZKSUO0
EZLh2u/0TeYlf5Tz3QbyAY/Z6PCLMpvz3QL+AZ/J+W7hPXfzUbAa890CebL8
jk3C3mQmFWS2lef6qNeo04H3RsN0hvea7/v0QN8ME530XvPdhCW913w3AQ9y
sTZij4IB0TfDhDjYiembYWCTnme+G7BHskL6ZhhoO9dEGEibu4m5bWzfVZTN
sNdyZrc6LWW7xGiYknYJ871PUxqKDL9rF/omeKly7ULfDBV9yNaijPobBkXf
DH94sDTTN8N/pOeZ70HfZPZLab6LzyLdb76Lz7qYA1Oa7+KzLmbB8fi0G54V
9E2PD7JYpNWPvsl8qFz96JvMiCnNd/FZpPvNd/FZF/NiSvNdfNbFzJjSfBef
Rebz6Js+x7Xn0Td9XpDKTRHxWVdDJ9pF3a6BPrIxRw6n6nu8gD2R93iZ9M0+
dR9wNuNl0jeZMf2e42XSN5k1x04mxLw5tvPngcXRNzV/HOzd9E3doTw8z3iZ
9E3m0JTGi/gs0v3Gi/isi5l07JzMzKVjc9I29mHD9VJNm2TWL4yXSd/U/crV
j77JvDqepKPis0j3Gy/is0j3Gy/is0jlxov4rAvsepL5PPqm4eXa8+ibhluQ
yo0X8VlSo+fv9E1m2rEpohuK1PBFcG8Z2bNdFn0T/Ht2JvPOFN6Zozsz807C
CiY+O1NlZ4LszICdea8zuHWGps6A1Jl0OsNGM2I3c3QzMzdTbzPhNqNqMyY2
I2Ez2zXjVTNcNINEMxF0hHJHMjXSqxFRjThqBEojPBop0J7A9rS1x6Ytua25
tWbUJ+zeeS9m5D8JmEmG61DuPkDFiznZYeDe36c/+4Ch7qivfvqrtO1xfcBU
7/3dchGnNj4Kvpr7u2UkTtb9sZOrNElZBY9vo3gdVl6jtHvvjYbDDu/N/f3R
/u3vKb039/eUxfY/vTf395RzHMnN7O+MGOOA29rfLWtxZAuwv1vmlIfn5f6e
Ms7kwvZ3y2B0DqnmBm5OxubKaExK+wJbR7vlS//Z3084sHaxv29ryLC/pwy/
axf7ey63Q7l2sb9bfuMhTR329wdubH+3PMeRNcH+brlWrl3s78z8Z7Jl+7vl
PEj3T+1if2f+r1ynypd2sb9zA4wHBj3s77aDICurg/rZ37kLlKuf/Z3bIGWo
n/2dG0G5+tnfuRNSTvWzv3MrpFzqZ3+37UiZ63n2d+6GnRrush0VNX1sytWL
26EgZ6OgkbFd/m2Kubgfyip2j5ewv6e8x0vY39tqdsDGjZewv3Nb+D3HS9jf
uTHGTgrInfGAOCYDAel5xgvFPmV4nvFC8b5so65nnMm47e+21yDdb7xQKC9u
kcqJq9x4oaBtLOOGxVNYyKyf/V04j3L1s7/btl2rn/1d2M8k3W+8OBCT7jde
HERJ5caLg+AlfGiS+Tz7u+OAa8+zvzseBKnceHFQuBwbgoyxU1Z36oeGGHeY
gLClSd7tYgG/hDEpz3axwF6OH66zXSx8l3CnSbpfu1hISPdrFxOYVK5dTKBL
2NQk83n2d8ca155nf3fMCVK5dtHAl+NPkOHa72YGd9C4iElGkFN5vnfZ37mJ
Rmck78zdnSG5M1N2xo/OjNEZCJr5uRm5GnneCO1GwjYCqS3DF/dRWb//5nvK
CvO457tjW7R1/Az/yPnuOBdnVpuc7453yu/57pgXTaLdYK0jjMR8dwyMIzuO
+e5YqDw8L+c795Xr5Xk53x0bg3R/znduLddzVO5r5Tnfubc2ZvkJbxnmu2Nn
PFl7hvnuGFoJ1WclIh+VuDw6QXglqh6VCDsqwfWsxNCjEklHJ2yuhMOjEhRH
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
9wmcnH7/myuSKY1ZSXwrmW8lWdrkEdFG73G4a1NBIr33Pjke0aqp8JDeex+1
SO+9jyyk995HipTLe++t/iBbSgWF9Lx7KSc9714SSc+7l6yU0/PupeTts+WM
G+6/pw45K3e5+++hW7nlijOnudyiYxrb9zce93WOp6I/zXbJA/8TvZvjrGhR
w+/aJQ/wb8uIcu2SB/W344Fr7ZIH9INWNQ/epOeFdskDNul5oV3yZEx6XmiX
PJmS7p/aJU+MpPundskTHal8xcnVSN8ks355IiGX39UvTwLkVK5+uXO/dXPK
UL/cIUn3h/rljvbW/Smn+uWO8zYMUi71y5WdzOflCv12PHLtebmSvh2XglQe
sVNIFlVjU4pGU2V1CHO7+seGOViGig73Hi95nogd5W15Kprc8HuOlxxmfs/x
kucL5Tle8pzhOsdLDr9x0OwO44W+SXqe8ULfJD3PeKFvvg3XlMYLfZN0v/FC
33wbximNF/rm23B+OD0tv0UDnPUL44W++bbdKVe/MF7om2S4Vr8wXuibpPuN
F/rm27RIabxQIN+mR0rjhaJH5vOm8UJxI8O1503jheL1Nn1SGi8UJTJc+30Z
LxSbTYdsW5/k3S4UjbdtXnm2C4Xh7XjsOtuFAvB2HJik+7WLgzrpfu3iwE0q
1y4O0G/Hiknm80K7OOCS4drzQrs4oL5N25TaxYGSDNd+n9rFAfDtGDPJ+70O
bG/Hedf5Xgewt+N9kMq914Hp7dgfZLj2e3ivg0sxNxeDczEdx2bwG8WsMAqB
NBrO9EFnfc/3sPE2m8NJc53zPWyQ5PL7Pd/DRkdO5fd8t3xsMsKDLtt8DxsL
6Xk538MGQXpeznfLjevleTnfw4JNuj/nu2XI9XR/znfLket4uHsfGm8LG5n1
M98dM5Wrn/lOXXKtfua74+gk3R/qZ75b1lyrn/lueXOtfua7Y+0k83nmOzXM
teeZ79SyIJWH55nv1LUgw7XfzXfL4Ni05o7Tk7zbRUe/Ha+VZ7vosDe1z3W2
iw54O4ZP0v3aRUOR7tcuPphUrl18wNtxfpL5PPOdOuna88x36mWQyrULffNN
BBmu/W6+W37/JH2TvN9L33z7M9f5Xvrm22OCVO699M23xwcZrv1uvlum/yTF
kQzXodx9FKlmhG86evKv/1Q7yOX3u/98hvK7/3yO67v/LO8ps/98ZpDuz/6z
7Lue7s/+s/y7DuVL/fSf5glyKvc8/WdbSBmep/9sDymn5+k/24Rrv+s/28Sf
tPCR93staG/N7zrfa6F5644glXuvifnWTUGGa7/rP9vJn9QRZLgO5e5Tsbdt
ZbyJSf7V0zaj/K6n7cb1dH/W07bjOpRPz1NP249rv6un7edP2iDIcB3K3Wdh
qETslXCgExZEE/Q3EXoT0DYxUANoizWo4bWVLuFviaps75X1vdiFotIq/M1F
cvr9b+z/aBblf21OTuV/30ZGk+KOIx1DLuSk590ry49mVR6edy8FP6aH6+l5
9xT80fyTdP899H5MH9fh/rvLf0ynIJXfTVwc8uNJE2E/IrN+uZD+6F7l6pcL
5o/p6Fr9cqH8MQwm6f5Qv1wISfeH+uUKRiqf6pcrz4/hNMl8Xs7wH9Pctefl
TPwx7YNUHp6XM+HHchBkuPZ7jsBK/TB22gzDeJJ3u9iPfgxr5dku9qMfy4rr
bBf70Y/hP0n3axf7Eel+7WI/IpVrF/vRj2k0yXxeaBf7ERmuPS+0i/3oRzek
1C42GDJc+31qFxvCj2k7yfu9FvAfy6DrfK8F+ceyGKRy77WA/lgugwzXfg/v
tZD9WE6DDNeh3H0WkspMMjrdCfnXf5bhIJff7/6zLCu/+8/y7PruP92dMvvP
sh2k+7P/DAPX0/3Zf4aD61C+1E//We6DnMo9T/8ZJinD8/Sf4ZJyep7+M2xc
+13/GTZ/UkOQ93t98I/txHW+1wf82F6CVO69Xvhj2wkyXPtd/xlef9J+RIbr
UO4++9GPYTZ+LPeT/KunYaf8rqfh53q6P+tpGLoO5dPz1NNwdO139TQc/6QB
Q4brUO4+DfhjWI4f1Q0yXIfy8Lv7Dc9OuDMqDU+l44lJziCX3/+amAzlf231
qxlc/9Xp1+0p7x4j3X/30K9mch3uv5v+V7MFqfz+1F+Pu2UODDKflwPiV/O6
9rwcCL+aO0jl4XnZ47+6Ichw7fds6V+v/ZPGJ3m/1/j81W2u873G569uDFK5
9xqfv7o3yHDt9/BeA/NX9wcZrkO5+wyMX9Ucv7pzkn/1VG3ldz1V3/V0f9bT
Z7gO5dPz1NPnuPa7evqcP+mFZLgO5e5zw6/PGr9EkOE6lIff3e/zxq/PG/8R
k4wgp/K/V5Hherr/rgmp/K7Jf36+ZVaYDNd+zwr/57Y/6fvIcB3K3ef7/nP7
+E+1gwzXoTz87n5/Nv7zZ+N/iCDDdSgPv4f7/N3/EOP/jI///m89popnPXZV
8101zV91/HyX2+OnTqW/tRr8V63+P1W7/xOfj6/XRle3u6WXjz7Wtjulw8Y6
vVf1atTXR33NrnY1x+xu7uWoj8ntnukwtE4XVqvfrFE2qzd2M9QwWr2s9XG7
3TwdztZpx0oLWbX6r5pluzlr2bz6uN5uog6H67Rl5f28Siu96jSwu6PUgVe7
lzqMrtOdVZDhq1ATr7Jm7W4s99W7wBXvcrq+y3n3LufYu5xeu9vLOPZTSvNP
KV8/pdz8lNKyh0cdZn5rU/ytTee3NpM9fGpR+q8m/X81mfewqsnyPzUJ9jCr
wf013Iy3qOkRtQxEbVdRalSU+y5Ky4ra3aJWkajZFjV7nmFc0y16GeltrtWu
dvN1GGOnmatdtleznvV7WtTyNHu7bPWt3YUdDtnp6krb7VNGr+Z7etU2vFr9
a3djh1N2urvysrf1o0+de3qWWnm1m7LDMDtNXrEONDqnraZ7Wpf7s8A8UU7+
6GzxzUrU6N29DBQIuIw0Ucp+lDIdzZ67l4sy8tYhLOqQE3V4eZaTOozXJhO1
eTzLTG2mteg+y04t7l/Lj/Ewa1uZdeyZpYbPcvvO8jbPsgLMOn3N2uVm7QbP
clbbU/RxqdX2dg932GunIyyrR582e1ffy2Idv2ar/e1e7rDZTmdYaIu2grX2
sZfVMiOsdkt3uG2nQSz2iUZptfV8L8fl5q4w3llkF7OC4GezUzWKey/fxsMs
8NgsUMkscMJsFuW9zBd4vYyBs4xKs4w2zzZQTok65M86RD/bQymNdXh5tos6
7H1tG/pt1TF3lblllVt/VbjyKpTEKuvVKq1h1ens2X7qmBxtnmn3f4czd3rJ
Qse01bK1xb19lZlnNmygw6A7LWWxhTSqrr0de9sr+EGFVa9Kd7kqifVqNrFG
3e9tUr+tIktbRaqyimxhNev13k712ypw4irQ0irwy7Pd6rdVRuZVxspnG9Zv
q5TGZ1vWb9/bs3a+ygx2FcziqrDxq1gXrkInXWU1vkpbf7b3Mp9FwzE6rLzT
exYbS6MW25u0jwUF56jw9KvShf41m79rtraOatjHCO18VVrRq3KMX5Xz+2pW
8X3cKC6QIve7igToKnKQ5ziina8C0V4FrnuOKdr5KifIc2zRzt/HF+3zKrjK
q8LuX8Vt/yo2m1ehPl/ljXuOPQVvqTD9V3EUvoqT79Usdh3tsY9JhR0vzqNX
cfy8inPn1Wzr+zhVWMLiBnkVV8eruDie41Zhs4oL4lVcD88xTPu8CrT+HMu0
z/fxzPe9K5btXTFK74rJeVeMzHv4vuc4V1iFwjy/C+P7LsztuzC1z7GvfFeF
DXwXVu9dWLznWFi+gMKCvQvr9RwXyxZe2Krn+Oj7vo+R6vlTvvKf8g3/lK/2
p3yxz3GzbJrlU/opH89P+XCe42jZiMqH8FM+gueYWjaSssk/x9aycXwdX733
t2yHv2XL+y1b3XO8Ld2/bEW/ZQt6jr2l+5bt5TkGl+76dRz2vP9Kt/+vdPfn
mFy6ZunKz7G5dMWv47P7/6d0z+c4XTri17Fa+b+P13kQjlI/o9TsKHNQlJsi
Ch4X5cWIsh5FaelR2myUdnoc20uNjVbH2yzUboiGszX9Rqc5LutVlJUgSpve
akCp+bPNS+3OaFhc03h0uuTyHs2y2s2yjmx1osxWq90hDatrGpBOt1xo1VVe
xFXW262OlJvlajhe04d0muZi7boK3X4V6mCrMcPfOV9HgWijwJhRYMcoEOOh
9lRw3btA+O8C574L5PkuEOVWjwo88VNO1Z9yzv2U82urT2Xk/i1j6W8ZI7da
VUaq/8oItNWsMpp8qVvGQ5ltosyKUW6uaFaaRm+2V62tmW01auvKo76VmSfa
vNhurIZBNl1Lp8MuL2Jbb9tKttXAMlfOdoM1jLLpXjqddqGW25vcVvytRpZb
bTX8smliOg13sbd1lEOjT7b6aTw0OWyTyDW5VJMUNQnQo64aDx2U0WDtBv02
qPZRaysotJzs7axtZ+ij9hbYp4znbZx+1OFyxpRR8FGPjYdvNVm/lRk5yp0Z
nd2+WZQabdxe4La+t5XzUbfLrBztrmyYa9PwdHrzQpm397+9LltdL7fnbHhs
0/d0WvRi2+uolEYLbTVfvxVtUVQ6+T+p32az8Ha06jYL6LcmIW6ywiYxazKs
x3yg3zrop4MBGlT+mBf0W4M3GgTwmB30WztjHjOEfvs2R2jncjNHwZijaJmi
Wcsa3d+oi/Z2PeaMcidHw46bDqnTyxebYUf9NBprm0G0c9E//UntvJyvYzXL
cUcDb7OJdl6V1n45X/9J7bw6C882r2jnJs1ucs0m3XvML9q5g9M6aOUxy2jn
Bhc9Zhrt/G2u0T4FB4+itYrKHRXNAtnRUo1ie8w82qdosKI4wKM4r+Nq9ueO
kt5mIe1TnKJRHJpRnJZxdXaibT4qLttVHKWrODlXcWRu85L2abL6JrV9zE7a
p4NBHzOU9vk2R/m+4oqI4gCIinmPZr/uKPHHfOX7KqYwKoYuKqYtKmbtMHNV
LGtxsFYsTFSsy2EGq5im4iisWIrDPOb7OjnHYy7zfd9mM/UsLGoU9jIKCxmd
ReoxrxUGumIpC0MVhZE6zG+FhatYo8LgHGa5whRVTMljplPPb3Od95ZvPspX
HuULP8x5hXkozFn5Wg8zX/mOC1v0mP2899v853nlO4vyjR1mwfL1lW/4MRN6
3re50P3l2znMh+7/NiMq/7c5MQ8o06MTiFDuzlXwmdywZ0WvzEIVzfLmzvKa
zfIuzcc8We6saLdpw3A6TKNp4ioqJwotFeWljvIGbjNnuWFnw3g6zKNp5opt
clZU1iy03CyUwjaTFixodXhI09Mtf7+KlXZV9OYqVO02rw5/57wzizx3Fqnm
LHLGWWwPhzl2uP9VpP2vIvd9Fennq8gjt9m2yC/eFST7ruC5dwVhbbNugZp/
Cuz4U6C5be4dyn8LvLDNv8P1lxlYv5UbfBbcala4zmyWyI6mapRbowvai/uY
k8tdHg236jCcpv8rdtCOomt0Y6NKtjm6YFuzw3eaNlC/RbMId7Rto6C3GVu/
Ff3hDOedGc47MzqrQLNvbLO3futkC03K3GStTfr5mMf1Wwc3d9BjB8895nP9
1iDVBjs+ZnX91qCTx8yu377N7dq5YHCzwqdm0TvOZmPtqMVGkzaK5zHXFxwu
OiyqaRi182yW5o5mbpT5NvNr56KRnNN5509o59lZG5rdZLsFtPN03vmT2nk6
78zZ2QS3+0A7d3KQJhFvcuHHvaCdOwi/g3Mft4N2bhD144bQzt/uCO1TYWiz
6DHnct6ZzWrd0d+Nyn/cGNqn6DTnct75k9pndTaLZn3Zbg/ts5x3/qT2Wc47
c3WWxe0e0T7LeeduRvc57xzuE+3TSXmavP9xq2ifJr143Cza59vd4vuKHnRW
TtpZuUZnZ/FotpvHPeP7KqfQrFwxs3KjzMpVcrhxfF9xzs/iWJ/FeX64eXxf
cTLP4kg+3D++r5OQPe4g3/ftFlLP4gabxfk0i+NodhbMx31UHISVe6m4EmZx
FxzuJfWs2OpZsc6H20k9K4b2cEOp57c7ynsrhmhWzMysGJbDXVUxbsWVUZj3
w43lvYWlPtxa3vvt3vK8wkjOwiwebi/PKyzc4QbzvG93mPsLm3S4x9z/7SZT
/m93WW5My9EsA38K9psL/kLzmVHcF5kL8iqU3So003rcbgUDi4YNd9ho09EW
63VUdHgUaj8KLbnddgU/nh1u2jS2y9/PYsWfxR4xK6pnu/uGv7O/rWF/W8P+
tiprzip2qcM9ONxvf1uVhGAVOfkqkuvDjTjcZ39bFeS/Klj8cDMOv9vfVoH7
D/fjUG5/O9yRw/WXW1I7F2x7VTjvKhrh1eziHYXf0RGNSn3cmgXrjg7jbVpg
7RyddaDZOTpqartDtXPRFa+wv62wv63o7EPN0rXdp9o57G8r7G/3su/+zoa7
3azauZNedXKMJs1/3LDaucllmnTicc9q5w4Oety12vnbbat9Kix6FQ3zmva3
1dkZmsWko8sed6/2KdrmNe1va9rf1uysTM1ett3D2mfa39a0v93bnPs7S/B2
I2ufaX+7t0H32d8ON7P26WRznZTmcT9rnyZzetzR2ufbLe37ioZ6LfvbWva3
1Vmomq3tcWP7vmV/W8v+dm/P7re/He5u37fsb/f27T772+EO933L/nabh/y+
3eS+r5NrPm5z3/ftPlfPy/62Kkf9qtzjq7M3P2529azcgqtyxq3KkXa44dWz
cs6syrFyuOfVs3IxHO569fx223tvcX6u4nJcxV14uPW9t7igVnEfHe5+7y2O
lMP9773fMADPq1jfVbGtBzzA8yoG7oALeN43bMD9FaNwwAjc/w0nUP5vWEEu
dBeTRxIlvslcWK5hnbyK9eSqaLSrogCuB5ZQYS/RtAZNh778fVRWlij2oqio
0g1nGP7OOnkN6+Q1rJNXZWm7is3wgD8M91snr2GdvIZ18qqs4QdMYrjPOnlV
cqGrko4cMIrhd+vkVaQ9B7xiKLdOHnCL4foLdqF9omgfoujiwzp5ddaaZnfq
qNsHrqF9oujlIyplcFRq3s5W16yOG96hfWJWytFZqT1npeTsrOkbBqJ9wjp5
H6fdZ508YCLap5NxdtKuBz6ifZrs7oGTaJ9vWInvm9bJO0XZRfq+zsrX7JUP
DMX3zUqpOit16ayUo5Ul/oCr+L5ZKStnpZqclVLygbP4vlkpF2elVnxgLr6v
kw8/sBff9w1/Uc9lnbyXr0WqZ2exf2Ay6rkq9daqlFmrUmM9MBr1XJU6alWK
qAdeo56rUjg9cBv1/IbdeO9lnbzVnUl67wPL8d7KYXtVbtIDruO9ldPsgO94
7zeMx/OKM/oqLuAD3uN5xSF4wH087xv24/7igDhgQO7/hgMp/zcsKCfiiwn7
ljlhXrbAW+bAfw3z91VR+gecaPg78/c1oijxo6jnoyjjzd8DfoSCdMyi1J5F
XT2LcnoWtfSGKaFeG6soi1dRDa+iFN4wpuF38/dVSfkOeNNQbv4ecKfh+gv2
5PvC/L276yJ9X2fRbLbZByZVFKtFGV6ph1+VMvhVqYEPOJXvq5Szr0oV+6qU
sAfcyvdVytRXpUY9YFi+r5OGP7As3/cNz1LPWdSnlULxVakPX5Xi8IBxqWel
zntVyrtXpbY7YF7qWanfXpXi7YB/qWelYDvgYOr5DQvz3krh9arUW69KsXXA
xry3UlC9KtXUASfz3koFdcDLvPcbZuZ5lRLpVamPDviZ51VqogOO5nnfsDT3
F7f+AVNz/zdcTfm/YWv9LwfSm+kpqXYWmQPgbSifMLeiZIqiIIqi+omi6Imi
4tlwuKKemUXxMouaZRYFy4bLDb+voihZRUWyYXRDufF5wOqG6y94nXpGUSVF
URIVde27KGoPGF5RZhQVTVGWvoua9IDpqWdRd76LovOA76lnUWgecD71/Ib1
eW9RML6LOvFdFIkH7M97i0LwXVSBBxzQe4vK74AHeu83TNDzitLuXdR1B3zQ
84pa7oATet43rND9RfF2wAzd/w03VP5v2GHvMdnwP0P//VCxM3Q6xgc8sULM
o0K5o0Kwo0KtN3xx+H1WKPKskOMNaxzK9d8Bcxyuv+CO3hsVQl5UJD9FOXLA
Ib23KDl+inrjgEl6b1FjHLBJ7/2GT3peUUT8FBXEAav0vKJqOGCWnvcNt3R/
USYc8Ev3f8Mwlf8bjtm6VH7gbYacZH7IAdccfo8K3YwK0dwwzqF8VgjlhnUO
11/wTs+rUOXfCkk+YJ+eVyHDBwzU877hoO6v0N0DHur+b5io8n/DRduGmi++
3dExPmCkQ3lUqOKGlQ7XX/BS91fo5gE3df837FT5v+Gn7dPOPzzgqMP1FyxV
+b/hqfnD/wdMte9pl3uboltl7yNpb229hPRQ7KbvT+yqNfy1wiyjw0I73Ljp
KJpesNOMFctHVHR1VBRrVLTnhtNWuOnssOWmtWiawk5XVqyZs9hMZkWRz4rW
3bDcCodeTYvRNIed7qyyP65iSV3FXrOKNWDDeotu42p6xE6Ttvz9Vdlgr2JN
vorNasOBh79LgEw4YaWsZJevSpqYgJYYD3y4kj+8iyT6XeSx7yIhfRfJ54YZ
D/f9FOnPT5HH/BQ5y4YhD7//VjD/bwXLb3jyUP5fBSlvuLLO/4YtGw9RYcJR
4edR9CRRdJNR7KJRrC9R0fZRUc1R0b8PDLrCjaPD1pvOpGkpOy1dsac2q02z
CXTU9oZTVxj8bDqUprXstHaVBbTZcpvFqNkjNhy76FVW02F2OjzjITorcLNn
N6vZhnEbD1Fp9qKSHEclP41KohmdLWPDvo2HKNLwKDLhKFLaKNLXBx5uPESR
QEWRCUWR9TzwceMhitwhijzhgZUbD1FB6w/M3Hj4hpvrt1l0A7NoaGbRic5K
JziL/XYWK9EsNohZUfcPbL3oCqJpa5p2tNMNVtbWZjdu1qlm+9iw96K/mU1X
2mkK9dvsLM7Ndt4sdBsur99mpT2EU40BpxoDTjUq+8oJr9dvcKpRSbWjku1G
JW09Yfj6bRYZ/SyS6llkxw9MX7/NIhWbRU71wPf12yySkAfOr9++Yf3aeRU9
0Cp611VpHVdly13FKr2K7WsVy8oTFlC0QtE0sJ32UTuvzpLdbPLN8rfDCbTz
qvSRcKox4FRjwKlGZbc5ww+0M5xqDDjVGHCqMeBUzzAF7QynGpUEPio59BnG
oJ1XJUtYRaL+hDdo51Vkd0+4g3b+DnvQPlfR5F6VFhNONcZV2cWvYuG/ih3x
CZfQPlel0YRTjQGnGgNONSrrzxleoX3gVKNyvUflXo/KrX6GYWgfONWonM1R
OZnPMA3tA6calfP3DN/QPlclJXnCObTPd1iH74NTzdxVF+n74FSjshmdYSC+
D041KtdDVO6FqNwKZ7iI74NTjeJsj+JkP8NJfN+rcmi/Kqf1E2bi+16VK/kJ
O/F93+En6vmuXG7vytH1rpxU78oR9YSpqOe7cn28K7fFu3JNPGEs6vkuLvx3
cdM/4S3q+S7O8yfcRT2/w16896c4X3+K4/SnOEefsBjv/SlOxJ/iKHzCZbz3
p7jvnvAZ7/0Oo/G83+K0+i2OqSe8xvN+i7voCbfxvO+wG/f/V1wyTxiO+7/D
cZT/Oyynz/RRNCizaHTyvBNMxBFMTRFU+ohiF4picYliO4knzKdoVaLpeJqO
rWmzOx1uscRHsfdFsSZFsdPscKGi95lN59a0251Ot7Kcz8oGMIulcRY71g43
Knq41XTdnYZ3+Xvnnco+EsUKG0eY0vB3zjsBpxqd7L2ThndS7iOsabjfeaeT
JzQJf5PcH+FPw33vSt7yrqQO70oOsMOjht+dd5os6gibGsqdd44wquH6K5xK
v0XRKBXtXhR9enTW8mb3b9bFZrtqVqEnLKtomKJp95oWvdMcV1b6zt7QrJrN
ZrbDuoq+bzadeqdH1m9wqlHZYqJYfM9wMP1WaZ4DTvWW+g1ONSqL3Bk+pt/g
VG+p3+BUIzoZ/RNmpt866U4n4+ikDk8Ymn5r8tQm4XzC0/Rbk6E94Wr67Tts
TTsXHWIUnX1UGuuAU82sNovUzs0e94S9FS1iNE19p5vWznCqUdl4oliSz3A5
7VzpsgNO9ZbaGU41KkvfGV6nneFUb6md4VSzm92/w/C0M5zqLbUznOoZpqed
OylUJ4t5wve0c5P6PuF82vk7rE/7VFqAqDTgAad6S+3TWYWa7fkJB9Q+lTY8
4FRvqX3gVKOyF57hg9oHTvWW2gdONYez+3eYofaBU72l9oFTPcMQtQ+cak4D
v+/wRO3TydeecEXt8x226PsqDXrAqd7S98GpRnR2xCfM0ffBqd7S98Gp5vRz
/w6H9H1wqrf0fXCqZ7ik74NTzWnr9x1G6fvgVM+wSt/3HV6pnpW7tnOSdg7O
zol5hGGqZ+U261xenVvrCNNUz8r907l4jvBN9awcL0c4p3p+h3V6b3HcN6d7
c6wfYZ/eWxzQzcl8hIN6b3H9HuGh3vsdJup5xeHZnJpH+KjnFVfjEU7qed9h
pe4v7rwjzNT93+Gmyv8ddto21ihawNzfJgjSLXN/m1x1t8z9bRa74ywWvfmE
rxa9YDR9bKfxWJ5jf6tsRlEs01Hsnmf4a9HQzk7/Mf29/W3CqUZlPYtioz/D
Zoe/s79NONVbLn9nf6ssqHGE2Q73298mnOotl/vtb0c47nCf/a2TTnXyoiNc
d/jd/tZk00cY71BufzvCeofrr/Be7RxF0xuVLgVO9ZbaubM/NSt3s6E+4cFF
7xudVkU7w6neUjtHZ31rNv4dVqyd4VRvqZ3hVG+pnaOzuu4wZO0Mp3pL7Qyn
mtur+3e4snaGU72ldoZTPcOZtXMnO+wkaE+Ys3Zusvon7Fk7f4c/a59KUzPh
VG+pfeBUM0vtJLXPEzatfeBUb6l94FRvqX1mZ7vdYdbaB071ltoHTjWPEe7f
4djaB071ltoHTvUM19Y+cKp5/PD7DuPWPp1U9Anr1j7f4d2+D071lr4PTvWW
vq+z+z7h4L4PTvWWvg9ONY897t9h474PTvWWvg9O9Qwr931wqnlc8vsON/d9
cKpn+Lnv+w5DV0841VuqJ5xqHruCVE841VuqJ5xqHsvct8PZ1RNONY9rft9h
7uoJp3qGvavnd/i791ZO+s413rm1j/B4761cpZ2b8wib997K4XeE0Xvvdzi9
51Uums69coTZe17laDjC7j3vO/ze/cWhfYTju/87LF/5v8Pz27ea6+SCU71l
rpMLdO2WuU4uUIM81sb4CO8f/j46zdT099bJBacalW0zKgvKSQsw/J11csGp
3nL5O+tkZd0+aQSG+62TC071lsv91smDbmC4zzq54FTzGO6+TUcw/G6d7OSR
B03BUG6dPGgLhusv+gLtE5WGC071ltoHTjWzd09S+zy0B9oHTvWW2gdO9Zba
JzoL+KZJ0D5wqrfUPnCqqU64f9MpaB841ft/tQ+c6km3oH3gVFMN8fumYdA+
nXT5oWXQPt/0DL4PTvWWvg9O9Za+r7OdP3QOvg9O9Za+D0411R/3b9oH3wen
ekvfB6d60kL4PjjVVJv8vukifB+c6kkf4fu+aSTUE071luoJp5rqV5DqCad6
S/WEU031zH2bjkI94VRTbfP7pqlQTzjVk7ZCPb/pK7wXTvWW3gunetJbeC+c
aqqDfrdOLjjVVA+VbxoM7/2mw/A8ONVUI4P0vMqF3jmuD9oMz/umz3B/5Sg7
6DTc/02rofzf9BqNIcr5e8Gp3jLn7wWnesucvxfo2EnLMfyd+XvZOm+5/J35
e8GpnjQew/3m7wWnesvlfvP3oPsY7jN/LzjVVKfdt+lAht/N3wtO9aQJGcrN
34M2ZLj+og/xfXCqt/R9cKq39H1wqifdiO+DU72l74NTTfXe/ZuWxPfBqd7S
98GpnrQlvg9ONc0Cft90Jr4PTvWkN/F93zQn6gmnekv1hFNN80KMDzoU9YRT
vaV6wqmedCnqCaeaZgm/bxoV9YRTPWlV1PObXsV74VRv6b1wqif9ivfCqaa5
w+/m7wWnmuYP5ZumxXu/6Vo8D041zSRBeh6cappNlJu/F5zq/0bv4n441ZPu
xf3ftC/K/03/0hjV/pfj8wWnesscny841ZMuZrjf+Hw50t9yud/4PGhlhvuM
zxecapp93LdpZ4bfjc8XnOpJRzOUG58HPc1w/UVTo55wqrdUTzjVNCvF+KCz
UU841VuqJ5zqSXejnnCqUankTxoc9YRTPWlx1PObHsd74VSjUnxHpfI+6XO8
F041KqX1SavjvXCqJ82O937T7XgenGpUiuWThsfz4FRPWh7P+6bncT+c6knX
4/5v2h7l/6bv6RiI3mOy/95wqmmei/FB8zPcp/8qVWVUSsqTBmj4Xf9VasaT
Hmgo138HXdBw/UUb5L1wqlEp86JS4520Qt4blaozKsXmQzfkvVEpJh/6Ie/9
piHyPDjVqJRlJz2R51XK9IOuyPO+aYvcXym6Dxoj93/TGSn/N61Rx/q1LpXt
8gOnetIeDb9rl0pVdNIhDeXa5aBHGq6/aJI8D041KnXOSZ/keVGplB46Jc/7
plVyf6WSO2iW3P9Nt6T837RLWb+ynUalTjnpmIZy9TvomYZr9TtomtwPp3rS
Nrn/m75J+b9pnPJ55cs+aZ2Ga8876J2U/5vmKX///6B7akxsv7MpFjoUtUOt
OmSjofENsW5IcUN3mz6qXf5tCm+TQR+Je2vtJaynQnd9N3HTUFUanNlpzDo9
9PKcdJxNzBgpK6vhrGxSm8Zq+Pt0UN1y+vt0LE2Rxylf/n5VFtNNfzX8XTp0
pkjBlMvfpSNmimhL+fZ36ViZIpNSTvenQ2SKoEn5cn86OqYIjJTTfem4mAft
1vB7OiRmJWGaBx2XxuNHnwc913D9RdOl36LSDUWlj4tKy82Pfkv9FpW1MCpb
VFRWnofuq9IVRaeb6/Td+o0fffIUpawslJ39a9OF6beodOD86JOlMKV+40ef
LFrjpBnTb/zok+acUr/xo08a3jhpyfQbP/p0Ek6p3/jRT/oy/caPPp0QUuq3
h95Mv0UlH41KYvnQnum3qGRiDw2afvumQ9POs9L6zUqTzo9+S+3Mj55ZeCep
nR86Ne08K706P/oc/Ohz8KPPwY+ebh9/v2nYtDM/+hz86HPwo8/Bj55uIn+3
adu0Mz/6HPzoc/CjpzvJ/ZveTTvzo8/Bj57uJvdt+jftzI+ebii/b1o47Twr
Ge5DE6edv+nitA8/+i21Dz/6LbUPP3q6t4Jsmjntw48+Bz/6HPzoc/CjpzvM
321aOu3Djz4HP/oc/OjpNnP/pq/TPvzoc/Cjp1vNfZveTvvwo6e7ze+b9k77
8KOfNHja55sOz/fxo8/Bjz4HP/oc/OjpvgvS9/Gjz8GPPgc/+hz86Onmc/+m
2fN9/Ohz8KOnG9B9m4bP9/Gjp3vQ75uez/fxo590fb7vm7ZPPfnR5+BHn4Mf
Pd2MQaonP/oc/Ohz8KOnG9J9m/5PPfnR0z3p900LqJ786CdNoHp+0wV6Lz96
5lafpPc+dILey48+K8fxSTPovfzoJ+2g937TD3oeP/qsHJUnLaHn8aOfNIWe
901XOGrzd/9DX+j+bxpD5f+mM+wYpT4D5v4W/Oi3zP0t+NFvmftb8KOnOzfG
By1ipeGLTps6Pcf+FkwSM6h+M6gQ6Q72nE2rOPy9/S340Wfwo8/gR5/Bj55u
ZH+/6RiHv7O/BT/6DH70Gfzo6Xb2d5u+cbjf/hb86DP40dM97f5N8zjcZ38L
fvR0X7tv00AOv9vfOknzQQ85lNvfDrrI4fqLNlI7R6Wn5UefwY8+gx99Bj96
ZpWfpHZ+aCe1Mz/6DH70GfzoM/jRZ/Cjp7vd32+6Su3Mjz6DH30GP/oMfvR0
z/u7TW+pnfnRZ/Cjz+BHTze++zcNpnbmR5/Bj55ufvdtmkztzI+e7n+/b/pM
7dxJ3h86Te38TaupffjRZ/Cjz+BHn8GPPoMfPWEFQTYdp/bhR5/Bjz6DH30G
P3rCEPzdpu/UPvzoM/jRZ/CjJ1zB/ZvmU/vwo8/gR084g/s2Daj24UdPmIPf
Nz2o9uFHP+lCtc83bajv40efwY8+gx99Bj96wiaC9H386DP40Wfwo8/gR094
hfs3Hanv40efwY+e8Av3bbpS38ePnrAMv28aU9/Hj37Smvq+b3pT9eRHn8GP
PoMfPeEdQaonP/oMfvQZ/OgJ/3Cf/S340WfwoycsxO+bPlU9+dFPOlX1/KZV
9V5+9Bn86AkrCdJ7+dFn8KMn3MTv9rfgR0/4ifJNz+q93zStnsePnjCVID2P
Hz1hK8rtb8GP/r/Rurq/clAfNK/u/6Z7Vf5v2teOTW7bT66Tkx99Tn70OfnR
5+RHT/hMjA/a2OHvrZOTH31Orrk5mfjnZEpN2I2/33Szw99ZJyc/+pz86HPy
oydMx99tetrhfuvk5Eefkx894Tzu3zS2w33WycmPnnAf922a2+F36+TkR58H
/e1Qbp086HCH6y9aXO3Djz4nP/qc/Ohz8qPPyY+e8KIgtQ8/+pz86HPyo8/J
jz4nP3rCkfzdpt/VPvzoc/Kjz8mPnrAl92+aXu3Djz4nP3rCmty3aXy1Dz96
wp38vul9tQ8/+kn3q32+aX99Hz/6nPzoc/Kjz8mPnvCpIH0fP/qc/Ohz8qPP
yY+eMCv3bzph38ePPic/esKw3Lfphn0fP3rCs/y+aYh9Hz/6SUvs+77pidWT
H/2W6smPnjCvINWTH/2W6smPnjAw91knJz96Vs/v1smD/lg9+dFPOmT1/KZF
9l5+9PzMSXrvQ5vsvfzoCTvzu3Vy8qMnDE25dXLyo/9vNMuex4+ecLUgPY8f
PeFryq2Tkx/9f6Nldj8/+knT7P5vumbl/6Ztbg6O9nHk/F386LfM+bv40RM+
F+OD7nn4O/N38aPfcvk783dxiZ300MP95u8ylHL4uN/8PWikh/vM38WPnrA9
922a6eF383fxo8+DfnooN38POurh+ouW2vfxo9/S9/Gj53CepO97aKx9Hz/6
LX0fP3rCCN2/6a59Hz96Tgv3mb8HHbbv40dP+KHfN0227+NHP2mzfd83fbZ6
8qPfUj350RPGGKR68qPfUj350RPm6D7zd/Gj57T1u/l70HOrJz/6Sdetnt+0
3d7Lj57Tf5Le+9B6ey8/esIq/W7+Ln70hFkqN38XP/r/RgPuefzoCccM0vP4
0ROeqdz8Xfzo/xttuPv50U8acfd/04kr/zeteHM8tQ+9/+X4vPjRExYa44OG
fLjf+Lz40XN5dL/xedCV/z/G7kVJchzXEi0Ayj2y+97//95pYQmkyiJrbLos
zz4uMfSg+MBzI7QzPi9bW4eXarfpzMN54/PiR3/TnIfjxueL9jz8/kV/7jn5
0W/0nPzoHb6a8Q+adM/Jj97LuHbG54tG3XPyo3fYq/PG58WP3mGwjm+6dc/5
m3bdffnRe5so6L6Hlt19+dE7nNZ54/PiR+/wWseNz4sf/W807q7Hj95huBn/
oHd3PX70N9276/2mfdeeH/1NA6/9bzp4x/+dFr6/3xObNXtLb4sF+/sxJzZ9
fGjn+3340TtMWDvf7542zvt+H6Lom3Y+HPf9XjT04fcvOnr35Ufvbbmg+x66
evflR++wZOd9vw8/eocpO+77ffjR/0Zv73r86B3OnPEP2nvX40d/0+C73m86
fO350d/0+Nr/psl3/N/p8rtfnhjk0aE6jDrjH3T64bx++fKjv2n2w3H98qLd
D7/1y4t+3/X40TssO+MftPyux4/+pul3vd90/drzo7/p+7X/TePv+L/T+ffz
PblHYzt90/yH457vRfsffnu+F/2/9vzo73IA2v8uC+D4v5cH6Os9ueDvcgHh
t+u9ygY4zo/+t/IBff7/oYzAcF5NTMH0yVBEDwXqUCkOZd1Qnw3V15QjmBT8
SU2bEP4JUZ1QtwkpmtCUCcWYcgZjkh/TxYjms8XPUjpTcobg86nbgHVj+rs2
PN24/F0blG78+LtdNiG0bwPQwrjbuLRvg86KU14htGvDzMKc2bi02+UXPBS7
8sIk2LicbwPKwlDXWI63wWT9pVyDfmZXvlE/syvfqJ/ZlVvsL6ifT7kH/cyu
fKN+ZldeMjob9TO78rtMhH5mV75RP7MrL5kojfr5lJXQz+zKS8R4o35mV36X
n9DP7MpL5Gejfj7lKfQzu/ISCRfvshX6mV35XcZCP/8uZ6F/2JVv1D/syivY
lRdPWKP+OWUw9A+78mLZbdQ/7MqLxS/eZTP0D7vyYglo1D/syu/yGvqHXXmR
6Bv1zym/oX/YlRcJJ95lOfQPu/K7TIf++V2uw/uxKy93aPR+7MqdZpLQ+7Er
r2BXXsGu3Oqi9un9ThkQ78eu3OqkduX9TpkQ78eu3Gkszu/yId6PXfldTsT7
/S4r4jnZlW/0nOzKnQ6T0HOyK69gV261Vrv0nKc8iedkV+40GufLc7Ird1qN
47uMief8Xc7EfdmVW20u6L6n3In7sit3eo7z6b7syp2u43i5L7vy38qjxLPY
uh678rtsiuuxK7/LqLje73Iq2rMrv8uraP+7zIrj/15uZbguJ5ZwZKFeJ5Nd
+cZeJ5NdudONMv5RriX8vXUy2ZVXsiuvZFdus4O/t07mKfMS/s46mUxcK6nK
babwd9bJV1mY0N46mezKbc7Q3jr5Kh8T2lknk12506O02+VlwnnrZLIrr1fZ
mXDcOvkqQxN+/ypHo3/YlW/UP+zKN+ofduVOx0qof9iVV7Irr2RXXsmu3GYZ
f2edzFP2Rv+wK69kV27zjfbWyVd5HP3DrtzmHe2sk6/yOfqHXbnTw5zfZXX0
D7vyu8yO/vldbsf7sSvf6P3YlducVND7nfI83o9deSW7cpudtLdOvsr4eD92
5TZLaWedfJX58X7syp3O5vwu/+P92JXf5YC83++yQJ6TXXklu3Kbvwp6zlM+
yHOyK7d5TDvr5Ku8kOdkV+50Ouetk8mu3Ol1jlsnk135b+WI3Jdduc1vBd33
lCtyX3blTtNz3jqZ7Mqdtue4dTLZlf9W3igeYdT12JXfZY9cj135XQbJ9X6X
Q9KeXfldHkn732WSHP/3cknD6Twx86Pz9/wtduU2Pxbs+VunzFL4O/O32JVX
sSu3udLfmb91yjKF9uZvsSu3WVN78/dVvim0M3+LXbnTHLXb5Z3CefO32JXX
q+xTOG7+vspAhd+/ykF5P3blVezKq9iV28xa0Pud8lHej115Fbtym2O1N39f
Zaa8H7tym2u1M39fZai8H7typ2s6v8tTeT925Xe5Ku/3u2yV52RXXsWu3Gbh
gp7zlLfynOzKbTbWzvx9lb/ynOzKnS7qvPlb7MqdPuq4+Vvsyn8rl+W+7Mpt
li7ovqeclvuyK3caqvPmb7Erd1qq4+ZvsSv/rfxWPEqk67Erv8tyuR678rtM
l+v9LtelPbvyu3yX9r/LeDn+7+W8pmbA5GSNTXn+9fhc7Mrv8l+hvfG52JXb
bK+98fkqExbaGZ+LXbnTcbUzPhfVoM39zhufr/Ji4bjx+So3Fn7/KjvmOdmV
12JXbvdBQc95ypN5Tnbldi9oZ3y+ypd5TnblThN23vhc7MqdNuy48bnYlf9W
7sx92ZXbfVHQfU85NPdlV+70Y+eNz8Wu3OnIjhufi135b+XTXI9dudOWM/5R
Vs312JXfZdZc73e5Ne3Zld/l17T/XYbN8X8vx9bf72JXHl/l7C2dNp3xj7Jt
oZ3vd7Erd1q1dr7fxa7cbh7nfb9Xubdw3Pd7lX8Lv32/Vxk492VXbndRQfc9
ZeLcl12507id9/0uduVO63bc97vYlf9WVs712JU7/TvjH+XmXI9d+V1+zvV+
l6HTnl35XZZO+9/l6Rz/9zJ13S8fduWJyRkd6l3GLpzXLx925Xd5u3Bcv7zK
3YXf+uVV9s712JU7jT3jH+XwXI9d+V0ez/V+l8nTnl35XTZP+9/l8xz/9zJ6
/XxfduWJxX2X1wvHPd+r3F747fleZfe0Z1d+l+HTnl35XY7PcXblv5Xl6+s9
3KLvMn3ht+u9yvU5zq78t7J9ff7/oXzf1JaY3L3xPcxYmZJeUxpoSrBMKY8p
/zdUskOxNlQ0Q7UwKduTGjsplk9K4Q4pn9C7CS0ZF/W4Asel9LhQtkllVIYR
PWaJn6XimRqX/0PvvrG0a0XgilOuMJxvAf9SkalxOd+C/KUSTmM53oL79Zfy
hvqH3n2j/qF39zK6oP6hd7/LIuofeveN+ofe3e5mf5f655RR1D/07l6etS/9
Q+9+l1vUP/TuC5NIo/455Rj1D737wgQQ7zKN+ofe/S7bqH9+l2/0fvTuG70f
vbvd5AW93yn36P3o3b29aJ/ej979Lgvp/ejdlwivRu93ykZ6P3r3JUIj3uUk
vR+9+11e0vv9LjPpOendvd0t6Dnp3e9ylJ6T3n2xGDR6zlOu0nPSuy8Sf7zL
WHpOeve7rKXn/F3eciaJ+9K7L08U7/KX7kvvbnoN59N96d1Nt+F4uS+9+2/l
Ml2P3t20HAldj97dNB2Op+vRu/9WXlN7eve73Kb2v8tuOv7v5TenhtLkqI+P
fWSinr9J726akIx/lO0Mf2f+Jr27xRd/Z/4mvfvKU+YztDd/k97d4Rram795
yoGGduZvUhmbnkS7XS40nDd/k959vcqIhuPm76usaPj9q7yo96N33+j96N0d
PlLQ+51ypN6P3t1imvbmb9K732VLvR+9u8NQtDN/X2VNvR+9u2lWnDd/k97d
tCuO7/Kn3u93GVTPSe9usXFBz0nvfpdL9Zz07g6H0c78fZVT9Zz07qZ5cd78
TXp30744bv4mvftv5Vfj2dzcl97dNDEJ3Zfe3WE4zpu/r7Kt7kvvfpdxdd/f
5Vxdj97dtDMJXY/e3TQ0jpu/Se/+W/lX7end73Kw2v8uC+v4v5eH7fFZsTlQ
JoZrdO751+PTdtTlZEN747Po3R2OpL3xaduy6mlnfBa9u2l0tDM+i97dYUzO
G5+vcrXhuPH5Kl8bfv8qY+s56d2thizoOend73K3npPe3WFT2hmfr3K4npPe
3fQ+zhufRe9uuh/Hjc+id/+tfG48Qpf70rubHijjH+V13Zfe3bRBzhufRe9u
GiHHjc+id/+tHK/r0bubbiih69G7m37IceOz6N1/K9+rPb37Xc5X+99lfR3/
9/K+/f0WvXtig8eWO3vLuwxwaOf7LXp30yFp5/steneHrznv+73KB4fjvt+r
nHD47fu9ygrHIyy7L727aZYy/lF22H3p3U2/5Lzvt+jdTcfkuO+36N1/K1Ps
evTupm3K+Ef5Ytejd7/LGbve77LG2tO732WOtf9d7tjxfy97HI/y0P1y0bvH
Z/kuixzO65eL3v0ulxyO65dX+eTwW7+8yii7Hr276acy/lFe2fXo3e9yy65H
736XXdae3v0uw6w9vftdjtlxevffyjL3833o3ZP7+i7XHI57vlf55vDb873K
OGtP736Xddae3v0u7+w4vftvZZ77el9697vsc/jteq/yz47Tu/9WBrrPEyf/
r+WgpxbncB1NrObY1mauT+ngKdH6E7u0zFCuDzXtUC8OhdtQZQ3l0qSWTwre
pJhMqPqEBE9o6YRUjMtwXA9j4h1T4ag2IyLNVjRLmls63hv3J06Z6/D7V7lr
70ee7GFyQe9HnmzasoTejzzZw0n79H7kyaY30z69H3myzV/alfcjT77LbHs/
8mTTojm/vB95smnSHL+8H3nyb2W5p1M8J3myw28Les5Tvttzkic7PFe79Jyn
vLfnJE9+ZDzFu+y3W5Mn32XAPefvcuDxGEPclzzZtG4J3Zc82WHBzqf7njLi
7kuefJcVd9/f5cVdjzz5oenHu+y465En32XIXe93OXLtyZPv8uTa/y5T7vi/
lyvv8ZmxufQmF2B8NyNLzr+vvzM+kzzZ5lLtjc8kT34Me1qvdsZnkieb9k47
4zPJkx1W7bzxabpgiXDc+HyVUw+/jc9XWfWZrJ6TPNlh2gU95ym/7jnJkx3G
rZ3xmac8u+ckTzYdn/PGZ5Inm57PceMzyZN/K+cej5HOfcmTTeeX0H3Jkx0+
7rzxmacMvPuSJ99l4d33d3l41yNPNj1gQtcjTzZdoOPGZ5In/1ZOXnvy5Lu8
vPa/y8w7/u/l5meR7e9X5MmJCRgbxbssfWjn+xV5sukLtfP9ijzZ4fTO+36W
Lywjjvt+r/L24bfv9ypzH49x1X3Jk02LmNB9yZMdru+872c5xGriuO9neVT1
zW/fzzJ5gn+LPNk0iwldjzzZtIuO+35FnvxYVm/0/Yo82bSMCbUnT34stzf6
fkWe/Fh2b/T9LLvbyDxc5JNLPbFvY4tvd4fz+mWRJz+Wa6wujusXy7dqd37r
F8v4CYZe5Mmmi0zoeuTJpo90XL8s8uTHsn+jflnkyaaXTKg9efJjO7hRvyzy
5Me2cKN+sS3sIO2pQTIcKhPz3ukWjns+24fqfX57PtvIIUW7yJMf24oqf357
PtvLKeJrm7nR89lmNrna1IQbTrumw/Tb9Ww/pxiwbehG17MN7SLBU8P5Yzv6
H6bztiOL9ndzuU4u2sQOjC1j9qDG598uxZjXLuEwFOVDdTyUskO9NBQVk4I9
qZyTMjehxhNKNyE5E/owpv4xGY5pZkS+2VrnlY6QGPajdtct6DntR1+vw+qr
XXpO+1HTiGqXntN+1Gk1zpfntB91mo3jy3Paj5p21O/Lc9qPtlMo7EednlPQ
fe1H7U50Pt3XfvTVrdiUHC/3tR81nanfy33tRztpIexHTXea0PXsR01/6ni6
nv3o6/PcuFzPftT0qAm1tx99fbYbS3v70dfnuzEdtx+NcD9c4ZPrPLFpYysf
HafVK+18v7QfNR2rdr5f2o86jcl538/wwD7luO9nuKi26bfvZ9gcZ17ajzod
qqD72o/aveu875f2o6/hhu3Kcd/P8FPd02/fzzA8ySZpP2ra2ISuZz9qGlnH
fb+0H30N2xt9v7QfNc1sQu3tR1/D+UbfL+1HX8P6Rt/PsN7OzamJMZweE4M9
PuF2bzuvX8p+9DUdsH05rl9MD1VN/dYvpslJvin7UdPfJnQ9+1HT4TquX8p+
9DWtbtQvZT9qutyE2tuPvqbbjfql7Edf0+5G/WLa7aSgqYU1XF6Te9Vpbo57
PtNTlVa/PZ9pesg3l/3oa9qq5uq35zN9T5F40/hGz2cabxLPqU063KpN7+u3
65nep9i8aX6j65nmuwj913S/0XnTPb6m+yjxUxNgOA0mBnV8YmPLmFLJU0Jw
Si1NKZEpSTDUiEMhNRQpQ7UwKUAT4j6hsuN6HxfemF6Osz7M904vLOi+5nuH
Xzif7mu+/3hcbHSOl/ua70137PdyX/N9J5GF+d50yAldz3xvemTH0/XM9x+v
feNyPfO96ZMTam++/+iOG0t78/1Ht9yYjpvvE7wwtW+Gu2dyLSb2o8NPnNcv
ab7/6E5sfI7rF92rmrDf+kU3n6S6NN+b1jmh65nvTfPsuH5J8/3HZ7lRv6T5
3jTQCbU33398rhv1S5rvPz7bjfrFZ9vJflPzbjj7Jsey00Yd93w+r+rIfns+
n/mQ6Zb5/uOzq6Lst+fz+VVVTui4+f5jGGxS3qlBPBzKTVvtt+sZHqoyJ3Tc
fP8xTFRrTph+O2+4xI/hMkEuUyNpOJ4mJ2dihKb0/JRkndJ1U5ppKGaHim+o
piaFclKEJmTpJF2G8dI02wldz3hp2m3H0/WMlz9uf+NyPeOlabkTam+8/PFY
N5b2xssfj3djOm68TDLo1EYcbsfJxe20YMc9n9dQ/dpvz+d1DslyGi9/vJ4q
2X57Pq+panZCx42XP153kzVPrerh2m4acb9dTzeoup3QcePlj+5QjTth+u28
bok/umWSY6dW5HBdTm4yls3aJZenNOVQRw/F5qREH7Lp0C//8eeqgfud2uuX
pjlP6Lh++Y/LbdLqqd093ONNh+6367mN6uIJHdcv/3E7VccTpt/Ou238x22H
JHtqhQ/XuWrluUuSD6W66uUJHXff/zqtqnnC9Nt5zeK/mql6njD9Tse1+/9A
/P/gOQiH+31y1yfWcHwfo7OOrDBryIyN6Yt5tufeuzT7lCyd0m5TumhKoEyp
iSlZMBT9Q4U/FPYPVf2mbh2Ku6FwGiqYodwY6oahKhhKgEnlf1L2d0rjpOxM
6P+EWE+o7oSmTgjohG4+IZo79GhCGMZVPC7HcbGNK2tcUI+raZuqxyQ4pqUx
pYzJYkwNj0lhq2wj+o+oOyLliIKPyLdFhtkiZyuaLeTZKvaSOEvPLBnP0rCn
3kyZZ2rsoZx7KL4G+X1ShXacC5FiZCP57CLZWiLJuJH2vkhrWqQ53MMrzO6n
4vtUEJ8K11PJeSoeT0XhqfA7lXmn4u5TYXdXap1KolMxcypLTuXGqaQ4FRCn
suFTyXBX2JtKclNxbSqaTYWxqQw2Fb+eCl+7gtVUeppKSlPZaCoSTaUh4+FU
3pnKNsbDqRBjPOxKL7uCivFwKpEYD7uiyK7sYTycShvGw6mEYTzsiha7QoVB
MJUnai/6w1g/jOrDHD4M28NgPYzSwwQ9DM8Po/NmBh7m2mFoHSbTYQod5s5h
3BwmzYc5czM6DnPhMPwNg94w2g0T3TDMPYxymzFtmMWGuWuYtIYBa5itHiar
zfQ0TErDbDSMRMM05Lsdxp5h0BnmG99tM9hsJpl8GGB8t83ksplXfLfNoLIZ
UXy3YTpZW2gbJodhLJjM/smcn0z2yUCfzPInk3xnOE8m72S8TkbpZHhOZuZk
XD4ZljuDcDLtJpNtMssmI2wyvZ7Mrp35NJlFk+kzGTqTeaOfTwbLZJRMJshk
eOjnk1kxGRGT6aCfTyZCPhkG+vlkCOjnify/tnI7EdcTmTyRvxOJOxG0Exn7
RMLuSM+JiJyIw4kAnMi9ich7IvB2hNpEgE1E1kRSTYTUExG1I40m8mcidiYS
54m82REwE7kyESn650SM5BMJon9OJIf+mQiNE3kwHvrxgI9HejzJ4yF+PMLb
YzoeyfEQjmdvPHaPh257vsYTNR6k8Qw9nqDtkRlPynhIHo/I9mCMZ8L7Hc+C
9xuPwbGkj6V6LMdj8R1L7mO53RbRsVCOZXEsho+FcFvqxsI2lrPHUrYtW2Ox
eixU2+LkOceSdCwzYykZC8dYLh5LxbYYjKY/GvyjsW8NezTnR1Pemq/7jkZ7
NMrRBEfDezS6rYGNZvVoUlszcr3ReI5mMhrHo2FsjUH70QSORO/4SOqPJJ5H
EpodcFbUmfEzsmcETA/PG8+TzhM8dyTv3PqL65F3UgnR+7/L9cg7qXTY/d+P
65F3UimpuHvJdcg7iUL1xuU65J1EnXbj13XIO4lKK+6v6+/JOynl9sbl78k7
KSXsxq+/J++kUP8b09+Rd1KI342XvyPvpJCvSCEhN6b25J3ksrzx0p68k1wi
N6Z25J1kso1kao1kirsxnSfvJNNMJBPDjek4eWd/HapnJFVwK7V34z/Qd0vy
TiZ5J5O8k0neySTvZJJ3WtxtJO9kkncyyTuZ5J1M8k4meSeTvJNJ3mlxuZG8
k0neySTvZJJ3Msk7meSdTPJOi9mN5J1M8k4meSeTvJNJ3skk77RY3kjeySTv
ZJJ3Msk7meSdFt8byTuZ5J1M8k4meafF+0byTiZ5J5O802J/I3knk7zTakDj
M5uSvNPqwI21jVP6ucg7WeSdLPJOFnkni7yTRd5pdaKRvJNF3ski72SRd7LI
O1nknSzyTqshjeSdLPJOFnkni7yTRd7JIu+02tJI3ski72SRd7LIO1nknVZv
Gsk7Xege6uci77T600je6cLzUD8XeacLyEP9XOSdvVoVeafVpRvXNuLrn0Xe
yUXeyUXeyUXeyUXeaTWrkbzThcWh/lnknS78DfXPIu90oW6ofxZ5pwtpQ/2z
yDtdABvqn0Xe6cLVUP8s8k4XnIb6Z5F3unA01D+LvLNX8UXeaXXwxsdpnhd5
Jy/yTl7knbzIO3mRd1p9bCTvdIFi6P0u8k4XFobe7yLvdAFg6P0u8k6roY3k
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
Jo7jPZvgrXYX3/jx/R4yPIkBsWvIDuf/cBCOjiRQH5bz+qUD7mE6rl+21y70
S7uf4xRj6QB36HqpXzpQHbpe6pft/Uv90u7qUI28oPalX7aXsPRLu7HjeA0n
mK3d2Tde+uUpEiOgOnbN+KnxM7ZQgdCwHPd87f5u9HwdqAy1T8+3vZXp+dot
Hsd7OUF27R6/cXm+DvCFfYV2l8fL2xmu127zON7PCdZr9/mN5XqPV3SC+CZW
lBv9f9hu9B0M64/dY9doGk7N4fiY3MzJiZlY+YmBnpjfJwZ3PzMTOM/UjURh
noobLV0s8zf65Czl3Pshqtt1dqnmKUU6JQ2ndNyUIJuSW1Pa6ilJtUtyDOX8
UFcPRfBQzQ616lCYPtSjmzJvqLeG4miocoYaZihYHuqUTa0wKeyTCj2pv5Ni
+6TG7tTCSVGblKxJfXpSlnZKy6RwTKrEk+KwQ/XT8Qll36Hg6fcTUp07RGNc
F2PiGRVmRKHZcmbpmqk6U+IZyuZU8KPf6Lvxo2fwo2fwo2fwo2fwo2fwo/eq
4u/Ld+NHz+BHz+BHz+BHz+BHz+BH713C3y3fjR89gx89gx89gx89gx+9pRjt
L9+NHz2DHz2DHz2DHz2DHz2DHz2DHz2DHz2DHz2DHz2DHz2DHz2DHz2DHz2D
Hz2DHz13dAM/egY/eq8+TzKHfuZHz+BHz+BHz+BHz+BHz+BHz+BH71Xb36d+
5kfP4EfP4EfP4EfP4EfP4EfvXdjflX7mR8/gR2fIhvqZH53hGepnfnSGYaif
+dEZdKF+5kdniIX6mR+dARXqZ350hlCon/nRc0eP8KMzYN74JLm14RDqH370
DH70DH70DH70DH70lk78XeoffnSGLah/+NEZqhpL//CjMxRB/cOPzvDTuPQP
PzqDDNQ//OgMKlD/8KMzkDR+9A8/OkNH4xNVw4/OcHHjk1Qe/OgMA9D78aNT
6KH340enaEPvx49OQYbejx+dIgu9Hz86xbRxeT9+dIok9H786BRC6P0mWogf
nWJ340OeFPzoFCroOfnRKUiN6Tn50Sku0HPyo1M8oOfkR6dINC7PyY9OIWh8
opn40Qn4Nz5kyDL0k8AN3ZcfncAM3ZcfnQDcWO7Lj06QbVzuy49OML3xKcIn
4zMJkND1+NEJgtD1JgqLH51AdyM/+t5EZKDlidbiRydg3fhEb03SgkylJBDF
TnLqPyLr7VqZw20+XGvDkTG5yZOzOLloT+7VlhnTdexvyY+eyY+eyY+eyY+e
yY+eyY+eyY+eyY+eyY+ePGGNl7+3v/HYNP74e/tb8qMny3Dj8nf2NxbMNIED
K5H29jeWnjRR4KW9/Y1FIA1gWNrZ32ikaaDBdN7+RuNJAwOm4/a3HXXHj+6D
xklO7I6D+pmp1oNC/UxFcwOonw3N/p+/t78lP/r9P/3Mj97N/L39LfnRb9TP
/Og36md+9L6sv7O/JT/6jfqZH/1G/cyPnsmPfj+GfuZHv1E/86Nn8qPfj6mf
+dH7sZ23vyU/er+G4/a3HdXIj57Jj76Tt++LfaH+4UdveuEF9Q8/ujDHRvtb
8qM3jZW/s78lP3p3n7+zvyU/etNdaW9/S3707mbt7W/Jj960xtrZ35IfXXhl
o/0t+dH78zhvf0t+9P5cjtvfdrQnP7pwzMhNlnLf9AO9Hz96l2Ur6P340dua
pb39LfnRu3yb9va35Edvq7N29rfkR+9ho539LfnRu+yb8/a35EfvUe24/S35
0U8UKz+6sNHITQqY/OhNA72g5+RHF17aaH9LfvQuM6ed/S350dsr6Lz9LfnR
haU22t+SH12YauSJsuVHF64auUn+kx+9y9gVdF9+9PZCOm9/S350Ya6N9rfk
Rxf2GnmievnRhb9G7uKyyY/e0yuh6/Gj93Rz3P62o4P50YXLRk9D7R/lKPnR
TxQxP7ow2sgdVTzJeMmPLpw2dvJ235RtZ9fGnlomw606nFjDRTIcBU/u+bYN
pb+3ThY/+o2Xv7dOFj+6MN7A7uLvrJPFj37j8nfWyeJHF/Yb2O+0t04WP/qN
S3vrZPGjtxdGO+tk8aP3MqWddbL40W9M562TxY/eq7rj1sniR88dvc2PLtw4
DrlFpXWy+NGbRu+C+oeJuZfFhPqHaNZ0Nf7OOln86F0m0d9ZJ4sfva3f2lsn
ix+9yylqb50sfvT2TmlnnSx+9F6OtbNOFj96l2F03jpZ/Oi92zlunSx+9BPV
zo8unDpyk0ndN/tA78eP3uUdC3o/fvS26mtvnSx+9C4Dqb11svjR2+umnXWy
+NF7+9DOOln86F0+0nnrZPGj9y7uuHWy+NFPtD4/urDvyE2aej/cBT0nP3pv
Twk9Jz9609RrZ50sfnTh443WyeJH723Neetk8aP3Nue4dXJnE/CjCzeP3EVQ
ih+9y2EWdF9+9B41zpvzxY8uTL3ROln86MLWG62TxY8ufP1GfvReNAq6Hj96
S0eOWyeLH/1kQfCjC3e/kR99G4+KH/1kS/CjC4O/8cmemGTl4kcXDh+blKZf
ju/C/F2xa3UNd/hwPg7X1sPBs30e6e/M38WPfuPl78zfxY/eXirtzd/Fj56L
H73FCe3N38WPnosfPRc/eosb2pm/ix89Fz96iyHOm7+LH73FEsfN351dwo8u
3D8OCdx9kw/0fvzoXfa0oPfjMmrvm/bm7zJFujyq9ubv4kdvr7h25u/iR2/x
SDvzd/Gjd1lV583fxY/eUrXj5u/iRz9ZM/zo0hIiN9nx/VAX9Jz86C1+JfSc
/Ohd7kE783fxo0tvaDR/Fz96i23Om7+LH73FOMfN353Vw48uHSJyFy/qQobQ
ffnRpUs0mr+LH73FQefN38WP3uKh4+bvziLiR5deEakYNHQ9fnRpF43m7+JH
l4YRebKR+NGlY0SLm9o/Rt/Fj36ylvjRpWlE7iymIRlY/OjSNWKTE3an84kb
nxc/+tSiGA7h4W4c33le519pb3xe/OjSQEIVFO2Mz4sfvcVi7YzPix89L370
FpedNz4vfvQWnx03PneWFj+6tJI4JNz3w1zQc/Kjt9id0HOm8XlRTbrcr3bG
56Wrend33vi8+NGlrQRt03Hj8+JHP1lk/OjSWeIU1eqCH9B9+dGluzQanxc/
eqsBzhufFz96qwWOG587a40fXXpMpCLl0PX40aXNBC3ZcePz4kc/2W/86NJp
gjZdcZwRFz/6yZLjR5dmEydrbsgvLn506TaxydN7EIm18v0+/OhT42i46ScW
a/aSLq+sne/34UdvKcx53+/Djy6dJ1gDHPf9PvzoJ7uPH12aT5xiaE2wDd2X
H10aUKgO7rzv9yH6Sg8K1gfHfb8PP/rJJuRHlzYUqowv6Hr86NKJghXDcd/v
w49+shL50aUZBWtHxXEiffjRT/YiP7r0ozjZjENa8uFHl4YUuzhcb9oLFl1I
v3z50SfGeHSkVgud1y9ffvRWEx3XLzuLkh9dWlOotr6g6/GjS3cKVhzH9Uub
beOVjcmPLg0qWHsqjlPty49+sjb50aVHxcniHBKXLz+6NKlQBX7Bfr4ffnTp
U7FzicYWKp0qXlmh/OjSqoL1qeI4+3740U/2aHq+H370nU065DI//OjSroIV
q2I7DaVhxSv7NFzvDz/6zkYdkpo2J9/Ijz5ZqkNeM1xL0rP+h//lR+/WD3lW
ih1ou/KNUytzancM5/JwXQ4H3nCbPVxeOwZh+lDoPrvyjULc2JVvFJLCrlzB
rtxf398XkwW7cgW7cgW7cgW7cpsL/H35xOzKFbFLvk/p6CnRO6Vep7Tp19/t
UnWp/S4tNCVqpiTLR/tdyiC129TjS7uhtN4Uvun8pj5dzm/KyHR8qAg3BV76
/VCr5aY4mNS/SZGYEOAJJZyQrQn9mVCXJ6RkuzzGNDSqz4hQs1XNkjdT/JlK
pZ/ZlW/Uz+zKN+pnduUKduXedbVf+plduYJduYJduYJduaVd7S79zK5cwa5c
wa5cwa5cwa5cwa5cwa5cwa5cwa5cwa5cO4ubXbmCXXmTf0b/ZaP+YVfusmAL
6h92ZemFjWLLgl256fX9XeofduU2N/m71D/syk3Dr33pH3blNktpX/qHXbnL
kWm39A+7srTGxkv/sCu3Ocv5S/+wK7d5y/GP/pnsdnZlaZA3siv35v6B3o9d
uYJduc1jCb0fu3KXE9A+vR+7cpvRtE/vx67c5dS0K+/Hriz9snF5P3blUuk7
pWU2Xt6PXVmaZuPH+7ErS9e8kV25b35Bz8mu3Ga8hJ6TXbnLu2mXnpNdWdpn
Y3lOduVSGS2lgzYuz8muLD208fKc7MrSRG9kV+5Bs6D7sitLI21M92VXLhU0
UnppY7kvu7J008blvuzK0k5vZFfei0CwK0tHbUzXY1eWntpYrseuLE31Rnbl
HTSDUTcPawK7svTVGx8WhSFnw8yZ0lhjk4D2TcQKWiczdm3sqdU1NRaG23o4
bx8u0x1rOLJS+XvrZLIr3/jx99bJZFduqdDfWSeTXbmSXbmSXblk0DV+/Z11
MtmVK9mVS+YKs6321slkVy4R/I2lnXVSpHmbd8N566SI4cblvHVSJGpjOf6w
VbArlwjF3OTI7SiG+odducsSLqh/2JWlBzdaJ5NduXjAGvUPVa14RlI6caN1
kiW4Uf+wKxcLYUo7brROssw06h92ZWnJjdZJmieztvPWSRoNM7fj1snN4sGu
LI05chchyLJOWokbvR+7cpmhKe250TrpiRq9H7tym9O1t04mu3KXc9TOOpns
ytKnw1Wct04mu7K06kbrZLIrS7NutE4mu7J068hdZCvZlbt85IKek11ZWnaj
dTLZlSvZldvcr511MtmVK9mV2w3gvHUy2ZXbLeC4dXKzp7ArS/OO3MWyk125
kl253QgJ3ZdduZJdud0Lzlsnk1253Q2OWyc3Wwu7srTx8HUWzEdYcj125d79
HbdOJrvyYX1hV5ZmfiO78g4qTHblww7Driz9/MaHLWbIK5NdWRp6bFLzfgmx
8OZvsStXxa5FOTWEpnbDw+m+Y+jHBlD+zvwtduV2q/g787fYlavYlavYlavY
ldv9or35W+zKVezKVezK7Z7RzvwtduUqduV22zhv/ha7crtxHDd/N5sOu3IV
u/IuHtILPPR+7MpV7MrtBkro/diVu9yQ9uZvMeG2u0h787eIGl0WVTvzt9iV
pfeH2e28+VvsytL+QzSC4+ZvsSsfliB2ZXQAkbs4Xn8o6DnZldtdldBzsit3
mVbtfPNiV0YrEFYf583fYldGN9Bo/ha7MvqByMNixK6MhiByF7kvduX+84Lu
y67cq53z5m+xK6MvaDR/i10ZnUHkYU1iV0ZrEFbNFUe5KXZldAeN5m+xK6M/
aDR/i10ZDcKN7Mo7GLjYlQ9LE7syeoQbH9amIZ0tdmU0CbGL2nSnyrEyPhe7
cndbxa5Jh1Yhdi7W2JJrnX9Le+NzsSv319LO+Fzsyu1G1M74XOzK/VmcNz4X
u3J/JseNz8WufFip2JXROcQp2njf5IKek1253ZQJPSe7cpf91c74XOzKaCHC
7ue88blMcXQRIUrHceNzsSsf1ix2ZTQSoYr3Bd2XXbndowndl125h5/zxudi
V+7h6LjxudiVD0sXuzJairBrrzhK92JXRlcRooscNz4Xu/Jh+2JXRmMRopAq
TpD6Ylc+rGDsyugtIjdL2JAhL3ZlNBexi2324Lhgf7+LXVlN+di1Tie3d3yT
s5e0O1g73+9iV+7p6Lzvd7Er9/R03Pe72JUPmxm7MnqNUHX9gu7Lrtxu5oTu
y67c09153+9iV+7p77jvd9laD3sauzK6jiBdrTjGkotdGY1HiP5y3Pe72JUP
Cxu7MnqPECVWcZILLnblw9bGroz2Iw5725BYX+zK6D9CFfoLdr982JXbXU4X
0i8fduWJuRkdCW1IiFpzXL982JUPaxy7MjqRIGWuOMajD7sympEQ/ea4fvmw
Kx/2udQvH3blXk4rTrLFh135sNSxK6MlicNaN6TeH3Zl9CRB+l2xjVrt7k+4
nPd8T2zt2EIPCx67MjqTELVXcZJAvuzKhy2PXRnNSRz2vCEb/7IrozsJ0X8V
O5kE/Um82PbYldGgxGHfG9LyH3ZldCixWfmGzHy4+9Gi/A//w67cd3+Kb6Tc
vNa7b1zGwq6NPTUNp5bU1Jh5aofs3L7xTcxYQrFA7+5tz9+n1Ep6d88Cf1dC
7ujdK+jdvU36u+JKonf3aqr9oirQu3s71X5ZIujdLZVo1zO8t1vtdkn1S7td
cjed3yUyl/O7xFw6PqW5dimj9PspyZKbYneo54aiZygoJpV9UoYn9fRJtdyh
9hOSOCE347ofF+m42h7X0jY1jSo1ItlsfbOEPkvG0j/07hYvtFv6h97d2qPz
l/6hd6+gd7cY4vhH/9C712aHpHevoHfvIn9B7+6ymRf0fvTuDm9J6P3o3V1e
U3syUdC7OwxG+/R+9O4V9O4Wi7Qr70fvbq3Y+eX96N1oehov70fvRtvT+PF+
9G70PTfSu/uiF/Sc9O4Ow0noOendK+jdLZ5pl56T3t1/7Xx5Tno3eqDG5Tnp
3eiCGi/PSe9GG+Tju++1B4P70rvRCjWm+9K7OyzI+XRfeneHCTle7jssoPRu
NEQ30ru3syHo3eiJGtP16N3oihrL9ejdaItupHfvpLygdx/WUXo3OqMbHxbS
KfqgAleiNYpdPKwfWu65+Zv07ht7/mbsmr1TK/GpobZz1sfnPjLS8nfmb9K7
V9K7WxrU3vxNeneL1dqbv0nvbm1KO/M36d0dVqWd+Zv07hbHnTd/MWuIJnfc
/MVo8GJppXcvGeGnOOfd+AO9H727xfyC3o/e3VKu9uZv0ruXCHVhXtqbv0nv
XknvXiI0hYFpZ/6KbGv0fvRuNFIhSt5x81ekSR72WXo3eqnIXXQ+6d03ek56
9+JRSDRUjeYvS2aj56R3o6kK1jTnzV8ae6KvajR/aUqJzirysOPSu9FaRS/a
7vss3lY84W0J3ZfevfSosDfnzd+kd3cYnOPm72bjpXejyQpWwBXHSZj0bvRZ
jeZv0rvRaTWav0nvRqt1I717J9Mmvfuw/9K70W3d+LABT7GWpHej3YpdNLY7
7wNLTJbxWfTuDtvL2LV3h/tkYrdG1151/l3aG59F715F7261Ujvjs+jdvWo7
b3wWvRsNWMjOcNz4LHr32mzH9G70YKGa+Qd6Tnp3q68FPSe9u7+qdsZn0bs7
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
SNmJcH0iV3fk50RiTgTlExm5IxG9344M3BF73m8i6E6E1wQ1TaTRRP5MxM4T
ibMjUibiYyIwJnLiiYjYEQXj4R/P/ONx3x7u8Ux7zuMJ9pzjmT2ex/Hsjadt
PGSP52t7jsaTMx6Yx7OyPRnjgXDfY/F/LPmPBf5YpsdSPBbex3K7LaVj4XS9
Y1F8LIWPhe9YysbCpf2xKD2WIvvby6LyWEryWBri0fRiG7v6Yo+EO5LcSDwj
UcwOPzvzs+PuFXpWkJkpM6Lmi00Pzps/b2SdrLBOVlgnK6yTFdbJCutkqyuN
1km87o2lvXUSr3vjR3vrJF73xtLOOonX/UbrJF73xnLeOrmfNqyTeN1vtE7i
db/ROnl/xR84Rn/9k9bJSutkKRnatGQJ9U9aJ/G6N+of1L2B171R/6CWDLzu
jfoHJUPgdW/UP1KGA697o/4Rqh943Yta12idxOveqH+ErJyvyJVK/Wu0TuJ1
L2pgf23r5DjN75te0PuVdbLKOtlqY6N1Eq97o/cr6yRe96JeNlon8bo3er+y
TuJ1r8Dr3uj9yjqJ1/01Oss6ide9sCBC71fWySZ2gBP06TmXdbKJFqDnXNZJ
vO6NnnNZJ/G6V+B1b/ScyzqJ1/01e5Z1Eq97YWmEnnNZJ/G6107CxOve6L6X
dRKve6P7XtZJvO51ZutlncTrXlghofte1km87rXJ+/C6F3W88Zn1H+skXvfC
Lgld72OdnNVhitWNcQOve1HfG62TeN2LGt9oncTrzmvzE9tJ1w+FM9f8XWH+
rjB/V5i/rf7HrlHbbrqHa3e4ESZXY2LsJrbh8XmavyvM3xXm7wrzd4X522aF
kF2knfmL1x3dn3bmL173xnTe/MXr/lpVw/zF644e0G/zF6877/03TrBLJyhC
75fmbycWQu+X5i9e90bvhzo98LoX80fImtLO/MXrjp5QO/MXr3uj95MaxWwS
r91CiCszSqP5i9e9mFNCNOMnTpD2MoU7Dbeg5yzzF697o+cs8xevezHLBHYk
581fvO7FXBOv3azMX7zuhS0Ves4yf/G6106exuve6L7L/MXr3ui+y/zF6/7a
PZf5i9e9sLNC913mL1732qSbeN2LuSheu/Bl/uJ1Lyyv0PUu83d26ykyOUZJ
vO7FvNRo/uJ1L2amRvMXr7uokm/sIKzuhAv2+OzEBdjjs81SsWuddziU9ptj
Z3L+Jlb7iZHb/1I747MD7+GlnfGJ1x1dpfPG55ZSwvjE647G0m/jE6+76NpP
nOSBDhSHnjONzzabhexC7YxPvO5oMbUzPvG6N3rOND7xur+kKKm/zG+BRtNv
4xOvu2zGK05SP153dJsJ3beMT7zuaDidNz631FbGJ1539Jx+G5943bGKLeh6
y/jE6/6S/pbxidcdraffxide9yMlTvHTMZbjdS/mwUbjE697MRM2Gp943UVF
f2InffRHsvb7fh0wCT/a+34d2Bibo21yxifXZ/aOwOuOdtR5329LueH74XVH
R+q374fXXfbpFYeMAa872tKE7pu+H153dKbO+35bqk7fD687mlO/fT+87tjf
VhwSX7zuxQwaL+m8fD+87uhR/fb98LofKX6K1o6TA697MZs2+n543Yv5tNH3
w+suG/eKTU4ReN3Rrya8tNMvTw2r4RwdDpSjVYR+weuOrtVv/YLXHQveikNq
jNe9mGnjpZ2kfsHrjubVb/2C1/1oMVPEd5w+eN2LWbdRv+B1L+bdRv2C1x07
34pNthx43YvZN17aUni+h1N8bJvMwY2eb7SqKS48zii87sVM3Oj58LoXc3Gj
58PrvrWzKVI8Ti2s3rFrg48vGcs3dDxdD687WtuE6bfzeN2LWVnQwW1XfoIP
PJR3bbtyBrtyBrtyBrtyBrtyBrsy87SYiKklP1z4w100uZQTAz+xhxOTNLEm
T2zF7nOmCnblG23p7Mo3moLsysziIWrT3y3BzuzKGezKGezKGezKzOiNF+oP
duXE694o5Zddmbm98SM1jF058bo3Sl1gV0687o1Ca9mVmenfWjm7MrN9Y9uV
me8b/+O7sSvvoKA2rEP9zK6cwa6cwa6cwa7M/N+4S9jmU+pvSllNSZwpPTIl
LKZkw1MaYVM550NVOpSHQy03FGVDyfVQX22KFf18UuIntXpSiZ+U3Z2CN6lO
kzIzKSJPKsYOPZ8QZv28Q2N3qOOE9unnE7qlnyck6LiCxmQ2KuGIlrOFz1Yw
S9+zxKT+YVe+Uf+wK9+of9iVM9iVE697o/5hV0687o36h1058bo36h925cTr
3qh/2JUTr3ujh2RXzm0NYldOvO6VeN0b9Q+7cq/uXzhJBd6PXbnpYAp6P3bl
xOve6P3YlROve6P3Y1dOvO6N3o9dOfG6F7dR4/J+7MqJ1724kxofKxe7MvdS
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
y/XsR9IJX1nbYT/aZGh43UuaYWNpbz+SbtiYjtuPenX7xC4aNEJmq68F+/ul
/ajvop3vl/ajdvdr5/ul/Whiz8YWPjrMyTq3H0lvDGXf/fb98Lqz2lxxivWO
cyftR9IgQ/SQ875f2o+kR8Yry91+JF0ylJP32/fD6y4KaUHXsx9Jp4xXtrz9
SHplKEPvt++H1/1k1af9aJPY4XUv6ZeNvl/aj6RhNvp+eN1Zsa7YxYvH2dXh
EAkv7fRL2Y86TMJ5/VL2o4mhHp9uh0/4rV/KftTL64KuZz+S7hkvtgD7kfTP
Rv1S9iNpoHFYBcp+tEn9yn4kPbRRv5T9SJpoo36x4ooSW7Cfb9mPpI/Gi73A
fiSdNDbX1uRGSSuNw3Kw7EebbBCve0k3bfR8y34k7bTR8+F132wJHTaSsUkL
L7zuJR01Nrdph5MkdNx+JC31f4jXvaSnNjqP172kp1Ie7/neza+tTDIHFbzn
qDRWNeRCu57vbS6qXat4aswNZ8HEmI7Pa2wVL1YI8106bGPPd2mxjR/Pab7v
Ytxhvnd4TEL3Nd/bTOV8uq/5flgozHfptbt0+5SAntJ9Q+k41FcnmSfM98Nm
UTtE3/Vqhw64Xj2mI/O9w3PyRUqJ172k6zaW9ua7tN3GdNx87895neLk48zu
MJ+El3b6Jc33Dv9xXr+k+T65EhO78cHrXtKAG/VLmu9tzqtXclOa74fNw3yX
LtyoX/C6l7ThF+tHmu+bpBOve0knbtQvab5LK27UL2m+t1i2YD9fme/Sjd/s
Iua79OPYnHqTAykN+cVCUub7Jg8t8116cqPnK/NdmnKj5yvzfdhMOhwqY5OQ
fvC6l/Tl2BzGHSaV0HHzXRrz//Ay36UzNzp/me/SmQU53OPlKWI/QQ+N93iR
7hyiY53v8dLhWM73eDksLMbLE+NTHabld48X6dGS3VzPeNnJb2G8HDYX40Ua
dWO5nvEinfrF+hLGyyZvDePlSUmaEKnqcLCEjhsv0q0l4fXzpfEySXnSsN/s
MsaLtOzDvTi5stKzXyw0abxsUtk0XqRtN3q+NF6kbzd6vjRehs2mw9PykNN2
mJrfrlfGS4etJXTceJHe/T9cxos070bnl/EizVtS4t0vbS6vnaRY0r/f7Dr6
RTr45qKc3OGSFv5i4Qn9ssl1Q79IF28s7fXLQ805qdQlbfyw+XSYXR6S3g63
89v1Ur90+F1Cx/WLtPL/YekX6eWNzpd+kV6+2YMa7/s+pMDVYXx+930frvHq
sL6EjrvvQ7FeHe6XMP12Pt1XGnpUhwMmTL/Tce2ko0dJR9dJ8R84ZPjTeUuM
5J3x2Piha9+Zg9we1r47A3C5TBg1rpOKJXQCcuPU9J1abFMDZ2pjTM2Dh+N/
5/5PrOb4jkbnH1lr1uCZW89YWlIiO6G1kXLViamNQn07AXV53WCt0f4S8tAJ
oo1clJ0IunRL44cpuxM6G5meOnFz6bbGLxWuEzIbib6diHnjwzLVCZdL9zb+
sQR2ouXSzRYr/Zy7KMUsYvq5Ew8b9XMnFDbq504ktLv4+9TPnXHWqJ9T7UD5
6I36OdXokI/eqJ+Tj1M+eqN+TrKCfPQV8tEb9fMpza6fT0lr/Zy7FGw+JTf1
8ylVqJ9PCTT9fEpH6edTckc/71Iuu4SIfp7SFLUpiYe6cYS0oTgaKpmhJBkK
jofqYqfmTupZPSkskyowIecTYv2EMu+QuQm9qSfEYVzl4xp+XLDbpTKm6zGB
jsnvMa1tU8KopKOCrUf0GdF1RLVHJNpbce6lPfzJF05RujFieL8l8zqWTOie
lo0yYuWjN3q/JQNRPvoyfRtlmMlHb/R+i89EPvoKd230fkvmh3z0FZu1bcko
kI++Qj76shw0ijSXj96YT3HkcaZ5zksEpXz0FfLRGz3nJTJMPvqyrDSKHJKP
3ug5W1Ndh1XuEoEhH32FfPRlGWrkmZeP3ui+T5CqfPRlmWrkYZKP3ui+H56Q
zWL3YamXj75CPvqyrDWy4Pqaja73kBPMoNhseF+WFvnoK+SjL8tg43K9hzVP
PvraJPry0ZflsZEELx99WSYbSWry0Uktf2IX6xnhrhvLgbBOZlgnM6yTGdbJ
XmaD1O3vrZPy0RuXv981Vqe23dS8emoZbS6fyb2YWJCx4Y/tZHSqR1a2TspH
b+TEDeukfPRl2Q/RRNpZJ+WjNy7trJNmH7e789ZJ+ejc8I5bJ+Wjr5CPvmwj
jdbJ+6v8wClKNkqs/knrZKZ1MtM62dtPsKr4O+ukfPRG/ZPWSfnoy3YVvCXa
WyflowsX0N46KR+9wwf0T1on5aM36p+0TlqVhBk4b52Ujy7swHHrpHz0FfLR
l22y0Tp5j/ovnKKdY+T1fqjQOsw/ofcrX0o+eqP3k+IW8tGX7bfROikfvdH7
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
/5fy0Rfzdryq/NC7mbsbjU/56IvZO2QdX9B96d17c5OP/tLu6d0pH30xl8er
qhC9m/m80fiUOb2Y0eNYCYrevUm1x5kp86vR9QyNlKmzmN0bjU+R+Y3a07tT
JPVijm80PkVcLmb5RuNTJJfsjQ/s77fo3f2yBS9ruu+36N3JUyItSjvfjwX9
ZRWhdyeL4M4tHdvs7BXcAI2+H017cQeELPELui+9ewslJIiXFYbenVbExY0Q
r6pP9G5uhUbfz50W90Ica4589EOGPk7oXT2K3s0N0ej7yUdf3BFxqkzJRz/F
uuWjL26KRt9PPvrirmj0/eSje8oLJquTfnmENO6MeFmj6N0pH31xc8Sr6hW9
ezi2xqc4Og73Rxyrlnz0Qw4/TvldPYvezU3SqF/koy/ukjhVtuSjn+Ll8tEX
N0qjfpGPvrhTGvWLfPRtbUv56Ju0foIFTjUveje3S+yax1OjYmKDdtUv+ein
qLp89MUt0+j55KMv7plGzycffVcPS/nouzh7ykdf3DaNricffXHfNLqefPSV
8tEXN06j8/LRFzeOoOBbnuwwte8OEjbY2L5anrzxU/Cb8MfftzxZQZ6sIE9W
kCcryJO93fm7lif763421+NwT0zO4ORqTAz32OBmTZDOqN2ifJAnjzWVPFny
0Rd3VEh7dLzlSe6pxpYnuakaf/QPebLDIj+vpJkgT3b6ZEHvR57sUat9ej/y
ZKdZap/ejzxZ8tEbvR95sv4PVfeicCmOI4vaMqzMqtnn/Z/3FPocgp6e7Ogf
vMAYG+sako9+cY99rcTkyS0f/eI2a7w9H3mSG63x5/nIk9xpkrPXKTGvn+TJ
7SKN+jklpqa0gn7uoSDWz6EM3etYs/XzpaTRT/JkiyOOe6frTe3Sz6QOXBNC
ExdxXE1RPo9puKLKRiSO6HG2sHk09yVPbvnoje5Lnhzr+yJPTpGLBBdNNT/y
JPdh43Y98iQ34oPkSQW5oPbkSe7Fxq09eZKbsbEcJ0/2V+QP7PlZ5Mm+Ka+B
+VnkSW7JJQtTe/OzyJO7yJMtvmlvfhZ5ctcaruCt3eScn1y/46VYI0vm3+W8
+Skf/eIGbTQ/5aNf3KFekn6SJ4dEIC+vyJPcpsuuq535KR+9UT/Jk68XhTy5
5aNf3K3rU42RBMH92mh+yke/uGGXXf6G7msFjDGkzKTXa6MHWz76xX27pC87
7hHlo19bPvrFrdtofsb7U+TJFoNrvUFvU0WSPMn922h+yke/uIHXNdUm5aNf
3MKN5qd89It7+EHyJDdxo/kpH1127w/2+9vkySy6FsML/rT3/uSjS9PWzvuT
j/7xdpEnW3x33vvba3z9sT2cPcP7k49+cU8vUtkN3Zc8OUasTZ58vWvkyS0f
/eLWXp/qnORJbu5G708++sXdvV4v3SZPIhBbb7CifPQLYRd0PfIk93ij9ycf
/UIQBbUnT3KbN3p/MoEv7vNG708mFyn1hj0uF3kyRj3u9fXxMpInt0iki9t9
faqTkie54dfEpsVWzh2/Xm/lRZ5EhLHe4E0WqQvxBHQ98iT3faNxIXFciA6g
9uRJbv1G4yIf/eLebzQu8tHHiypxek1xowSV7qm6Sp4UBtCof/LRJ8Z8qrPK
R7+EBzTqn3z0S5jAg+RJ4QKN+icffaq8SqyD23HXk49+CSN4kDwpnKDR9eSj
XxJ8YPnbefnol7ACScTPfvTgsx89mOTiZz/q6cS20PuRMIRltLXv/eha9qOe
dtr3fiRcYWqfhqs+3HnhPEmu+cfLvcamkb3o/LuZ9u1Hwh4af0Q8+5HwB0KC
ftqPHtTPIzws+5EwiUWr0670037U6rJ2pZ/xwtuPBORB/bQfCYCD+mk/EnbR
+NNP+9GD7ms/GiP8sh+9Xn/7kUCiKUmANmIPleclfGOomC5hHEM18EYPrGtC
FV3PmeNCiSk2Jq+I0hFZMlWuqUK87Ecc+I2lvf2IQ/xB+xHHcmM5bj/qVfyD
/f7KfhShr80KBX/ae39lP+rPkXbeX9mPromWsB+1OcJ576/sR7F9R2fh4IDl
b++v7EdX2Y8Y3D/Ok7IfXROdYT9ikIbuaz9iAIbuaz9igG30/hLlUfYjBsT1
BsfLR78Y7KDr2Y8YzBq9v7IfMRBB7e1HDDSN3p989IuBotH7k4/OCnLDHpdt
P6IYwls74yIf/aJYwct54yIffTjDKRhrfLYUgPVGu2z7EUF4vckC8tEvgid0
PfsRwa/RuGz7EUEHam8/Img0Ghf56JeNttG4yEefKBwfzjXF9HwA16cat/3I
B6dR/y77kQW83qrdl/3IBG/UP56Wy4R50H5k4Bv1z44w1b8v+eiXcKFG15OP
fgkbetB+JHyo0fXko1+XfPRLGFGj8/LRL2FElLhnvXc66z0kY1HuGp/1Ltxo
sa5p1+u9t3ftirPSen+jnaz3NrPVcOJ9qpxb78c2cd3y0S/hS40//bTeeziu
D0n3st6FN32jq6z3Nt85X+5rvd/y0S9hUI2X+1rvwqE+UVrLem+zX32SXuSj
p0RcSk2Fuj4U2KEufKu4r2tC+bW/JsRA++uYmKx34VWN5bj13n/dsMelrPc4
i4VffaPMrPc2QzpvXMp6b7NkvbUBkguR2AzhWp9otbLepxhlWe9vdXrrXVhX
o3GRj34J7/pUsS/rXbhXo3GRj34J+3rQehf+1Whc5KNPFF2LgXtNkcwkJ2HD
g+W4/slHn9q6yWnEmge1t95v+eiXMLJG/dvWu3CyRv2Tj44WacO+3mW9t3nW
3653We9tri3ouPUu3Ow/vK13YWeNzstHv4SdCR545kt/Hq4ht09QwSUs7Rt9
aL60Wdj5ni8tLu+p2ZgaEsmZSQzPJYztE8W4zJcpVrrMF+yD0PXMl5989EvY
W+PleuZLm58Lam++nNKYKdWRFM6kKCVk6hIW90ZXtpi/3yKqSV7DhgjLcf0r
8yU1mJP7ijURam++/OSjX8LrGvWvzBdhdo36V+YL9kXY19vmy08++iX8rtH1
tvkiDK/R9bb50mb1guVv5y/zRTjeRJui29pTVDbJfOi3HO9xEbanFvWqqUmd
XGA0XRtqb1zafO/v0t64tDm/oOPG5aRSo/vasK9XxqXN/v52PfnoV7sBCjpu
XIT//YfbuAgDbHR+GxdhgAu92IbPfYUFNvZ9hQc2bu3dV5hgYznuvu12KFj+
dr7cV7jgutotUbD8XY5rJ2xwXcIGTe71D6y/MCQMmfw3H9UTkdP4h0z3RNbc
fr58Xfz+cd03IkvpQDPig98/LpzGP37/uFhIN343tZH24Wq+DsdeuI3CeXK4
LCZ2Nb602EAie2ZPOt+aW+hTBzg1clV3INPtcRdx5kRRMz12YNJtGBr/UAE7
AOk2LI1/iRodeHQbHpu08emAoMaQyWQTNz4doNNofDowh9Tnd2V8OnKEmOV3
ZXw6suL2GhbrivZqgokbbDQ+hdNL3GCLacan+I7FDTYanyKDTVR5eyAbjU97
Eu8lbrDR+LQH717iBm+vv/Gv8WkPUqPna0/GPcrrao9Ao+dry36Lj+uUfq5T
2nSfEonXKUV3n5Jmnm9PKZY6JR32oc6/DgW750u0/EuFug+l5nUou9ahpKtD
bbYPtc861Ec11C29ZU5KcFLekjoTJ0lC3U9o94ToJdQnIRVxzd/HdBjXTUzk
MbUe0+KYKqLyHhVvROKaLX3d5//7v9z3NmLrBBPm5GQP3CK5xA3ellWjCBpx
g7dl1ijiQdzgbbk9eLIQxA3eU5Q8yeDiBhtd78djIG7wtjwbWVzFDTZq/4dF
R9zgbdk20ojFDd6WbyPJWdwgaekv7PVba0igInzfYi2s31rWby/7RUvzO+tX
3CB1xe+sX3GDt8/EYgXVfmr67VNj4DrcsOHkO1xdk2uR2I/Y7GMr8XLXyfZY
1q+4wdtnaKGDdNz6FTd4L3GDt89To/X7jOYf6PlqhQQxxifPV9Zvf84W6672
1q+4wUbPV9avuEHRFtpZv+IGGz1fWb+TxVLWr7jB2+ey0foVN3j7fDZav+IG
b5/Rxfr8g/q5rd84NTvAC+rntn7FDTbq57Z+xQ1+smy29Stu8PaZbrR+xQ3e
PtuN3qG4wdvn26J138v6FTd4TxBwFvVk9Qh5XOIGb5/9RutX3OBtG2i0fsUN
3raDdU92kLjBWxFM6Hq39Stu8LZtNFq/4gZv28eDP+tX3OBtO2m0fsUN3raV
B/9Yv+IGb9vLg3+t373Mz73Mz71WyDljFL3F6pmfvR0t3gbtzU9xg2hKtTc/
xQ2K+tHO/BQ3OBzitrX1yaJaEyMY3+6xqc+/ctz8FDd42wYbzc92UEP9LPMz
zvZ2GEP9LPNT3CA6Ve3Mzz2VxM1PcYON+jmVis3P/Vak1c8yP9+Ko+anWcT8
IXvM/ExwejabySrb5ud+K0O57zbSn4o87rvNz7fiivmZ7DRxg42ud5mfH8Z4
1xNKuj4M367HBbPEDTZqbwqtDwOr9mEAfZkaHQ9T4GGAa4cODPNOGGYSLBGm
k8M84v2JGzwMBOtk+K+Tcb8+2XhvpvN2Ppm9k2FaJ5ac52PNHsGyloy08v6u
N8MkmRjue4QEcYMnwnudCOp1IprXiaxdJ3J1nUjSdSIh14lMXCcSb71ZhNcb
6bNPJI3rvREWdSIYXO/1iLtePLKvBywepuPxGY+F9rGY32PZPJbGY1k7FpP7
1SwiQUfSjCR3hKfZobOTZac4X+75gmSFnhUzb7zmTuvNphQ3eCsyvF6SHHGD
ja5XxkXc4E1sazQu4gYbtd/GRdzgTZxrNC7iBm9iXaNxETc4WZ5L3GBj9++Q
9yxxg43luP6JG7yJgWs4wrBbQ+1L/8QN3sTDRv0TN3gTExv1T9wgmuUN+3ri
Bu8lbvAmPja6nrjBmxjZ6HriBu8lbvAmTjY6L27wJk4y0j7yZKv1f4ZENMZb
k8vaa3myFnmSGLpY9/2u5ck2S/ldce6RJ2uRJ4mtOFyX9lMbel9TW6DxruF6
/cyuNTHEif2Iz40y8H4riELkSWJxY8uTJW7wJiY3tjxJXG78a3zIk22m+X3I
sxd5sl/Ohp6PPFniBhs9H3myxA02ej7y5LtqyJMlbrDR85Ena7KTyZMlbvAm
vjfaq8UN3sT5xp/nI08S6wW96Sd5ss3r1ycYzsVu4v93VZMnS9xgo35OifG9
Tha1fu4pYaef5MlabykS/SRPUicaf/p5viLrGkoZ9yVPjhIobrDRfd9UBfd9
QyHdd0KXxuXvvnEpvSpxROuIMGcrnCFyPfJkiRu8qTONl+uRJ0vc4E29aSzt
yZPUnAfJk9SdxnKcPNmr/g/s+VnkSU44eJPdzM8iT5a4wcbS3vwUN9joociT
79ebPFniBqcWDTVrfbLj1+SaJEbwxGaMLJl/23HzU9zgTS0zqPpJnmx3jez7
lWDNDL5+ZnchT5a4wUb9JE/WZO+TJ0vc4E3tW2jgHTc/xQ3eJW7wpg42mp/Z
zcQNoo/f601mjHFi2ALIkyVu8KZGLjTzjpuf4gbvEjd4Uy8bzU9xg2jpN3Q9
8qRqCdD1yJMlbvCmjjaan+IGG7UnT5a4wZua2mh+ihu8qauN5qe4QVFOP1h2
e+9vkyezWKi16yMNkCdL3GDjpZ33NywL5MkSNzi1y0rc4OQiUo/X2BiyN1CT
1yt9iBt8iyGLG3yNSsPqQJ4scYM39Xqh9Xfc+xM3eJe4wZva3ej9iRtUBmBD
1yNPqmYBXY88WeIGb2p6o/cnbrBRe/JkiRu8qe+N3p+4wZsa3+j9iRscaazd
mNea4tCSS9YY2WrYLciTJW7wpv4v5QscNy7iBoerjllgjS18WDLEDTa6np1A
NQ/oelZgiRu8mREajYu4wUbtyZMlbvBmXmg0LiLZbmaGRuMiEmHYOzrMZcPu
HwurMgyO6x/LzV00+ZtZYg3XrCokUHvyZPlS38wVjfonbvBmtmjUP3GDyj5s
2NcTN3iXuMGbOaPR9cQN3swaja4nbvAucYM380aj8+IGb+YNwVvPftTuqd8U
F0lQl48GG0LvR8why9No3/vRXvajvexH/fnQvvejVzuwH21xg6mJllo0H3aV
NTmPuyY2MLaM7EH3XvPvR7SzHzHD2NT1037U7vnrkySQTX/Zj17txX60xQ02
6qf9aA/7i/1oixu8mXkaL/20HzH7NLKZihu8mX8+2tKyH3WY1P4k0ccoPmwz
9qMtbvBmNmrc7ms/YkZqvNzXfsSc9GGtWfaj/gzXh/RU3GBSt5Mim9SbpDgk
tDSulphsYxqLyB3RJlPq3uIGb+apxnLcftSr5AeLNun9lf0owhoz1lfbtB9t
cYONl3ben7hB5U2c9/7EDQ4HXW8njnt/tcbmfXQV7y/abdmPOixtr5f8IM4M
cYPKpzjv/YkbVE7Fce9P3OC9xQ3ezGyN3l/ZjzrcbUPXsx+pcgRdz360xQ3e
zHKN3p+4wUbt7Udb3ODNXNfo/YkbvJntGr0/cYOj7XfYygV7XLb9KM4dUU2w
nDcu4gaVjXHcuIgbHM5UZsA1PtlhWdr2o96Wa73kveIGG13PfrTFDd7Mho3G
Rdxgo/ZW7BY3eDMnNhoXcYM3s2KjcRE3OOxPW9xgY/dP3KDyN47rn7jBe4sb
vJkh13Ceq04FtbcfKSgJtbcfKVQIHbcfMVMu5XY27Ovd9qMWO/zteizkt0JT
0HH7ETPmfyhu8GbObHRe3ODNnEnpetZ7h5HcU0w0SVxRym5mz68VyXrv4dSu
1zuz6Jdly3q/xA2mVm64JsN9kZzF+LRii7iZUT9Wq2W99+vaH3KTZb2/rF7W
+yVu8GZ+XcoTOb7d13q/xA3ezLKNt/ta7z0NNnQ96/0SN9joetb7JW7wZsad
UsehRA/lb6hDQ0UUSpOkoibUIC7LmJpuZt7XitdhZRfscSnrPc5bUYmwnDcu
4gaVYXLcuIgbHG5kZuM39kJ0I3Q96505eSnj5LhxETd4X+IGb2bmRuNS1jvi
B6i99c783GhcxA3ezNCNxkXc4LC39bLbsPu3rfdL3GBjOa5/4gZvZus1tQ0k
HELtrXcJe1B7610iGHTcemfWXspXbdjXu6x3CRew/O164gZvZu9G1xM3eAv8
heVv52/rnfl7rL3CDC/4zJcW12uc/B/WO/OlxXjne77c4gYby/GeLy3e13B6
JUbnZc9b5kuL//UhbRc3eHMwQ9czX5jfGy/XM184/KD25guzfOPW3nxhnh+K
tYRMDatff1Y37P6V+cKwCctx/RM3eDP8vTUwGJqg9uYLQw3U3nxhAICOmy8U
zKU82YZ9vW2+ELRh+dv1tvlCQGt0PXGDtw8+LH87L27wNlGG5VBZtA2fceEu
WMqkOd7jwn3Q2OPCjTA1QZRT21B74/ITN3hzLzRu7Y0LN0NjOW5cVGGEfb0y
Lj9xgzf3Q6PrlXHhhmh0vTIurc4VLH87v40Ld8RSBm7D577cE419X26Kxq29
+3JXNJbj7ttqYsHyt/PlvtwW6241smD5uxzXjvti3dwXNon1F/6nkzamCFqC
z7OZ/Nh6Hgvqz88WKcLvHhOWaeB3JQmpDeiNP797VGDatfaPqCo8WfupjXyf
mpS/9fU+reE+2Ts5QskdiG8zNqnoApERGn9M8W0o/nmsxj9UzjYQ/zweZcjz
tSHXdL4/yVVRllYbXn+GY7EaaF+ery2QjZ6vLYI/w/b1qrWlq9HzteXpZ1iX
sOzDJur5Ss44/8Vv8V80er6ii/Nf/LyGxj+er89ajrx6a59i8UnSj9FdP+P1
aw2oUT9bI/l5nY17HbZT/WzJ/Oc1N14u+ZZQ36f06TolbGtKI368jPwXjftQ
al+HrO4En9U6lH11qL/2oVi6Tmr1OhQOdVLl90lxWydVsSYFpkXaCeWrExKU
0Ivjwh/XTkzoe8V0ERU4onGGEGr/8wb4L36mZePW/g/LDv/Fz/R88K/1W8v8
rGV+1lopQpvkvyjzPz4C89PdfGa1Nz/5Lxo5WZb5Od7dZX7yXzRe2pmf/BfD
ibX4LyaHtMXwE/sSn8WxFc2/8rf5aTR8/nmXzU/+i9cJlMEc73OZn/wXjfpZ
5if/hTKWzpuf/BfKWjpufvJf/Bb/xc/ybTQ/4+3mv1AOc6+XPJH/4sPqu81P
/oufZd9ofvJf/HwGGs1P/oufz8F62YH5Lxpd7zI/+S8aXe8yP/kvfj4fjeYn
/0Wj9kKpFv/Fz2el0fzkv/j5vDSan/wXrKM/WKIBvL82JK5x3mURrIkWWN4f
/0XjpZ33x3+hbKjz3h//xdQoWPwXw3Wz+C/Gh529YKIT+C+UH93rJb3kv/iw
L5f3x3/x8zlcypQ67v3xX/wW/8XPZ7LR++O/UNZ0Q9fb3h//RaPrbe+P/+Ln
s9ro/fFfNGp/GVr+i5/PbaM3w39xKouvU6F6ncq1a6I1Fv/Fqay1hgTUZ3l9
WKiXceG/OJVN1qlUsU5Fh3UqJqyppeMzviZWX1bROky56zDKrrcoE//FYapc
hwlyHWbAdZj31mFwW4dhaR0monWYftZhflmHWWUdho51MvDXyXBfJ1N6nQzK
NSzbi//iRK6vKRa1+C9OROw6EafrRCCuE+G3pgbe4r84EQ/rRBSs42Fex4O7
jidwHUv/Opb0dSyy61hq1pGs1pFA1tnh1/nir/NFzcp8sFyP/+JnG3pwux7/
xc921Og8/8XPdsRY/OxHLa7+pgh6ks9jTPaR8K3v/ei9u/2o+C+U39W+OPnt
RzXRQ/aj4r9ovLTbgs3tR8V/EU6dcBkk9jI+8/gqsgf9as2/P2t9RmfZj1rt
uz6kRct+NJv5RDfZj4r/olE/7UfFf9Gon/Yj23LjpZ/2I9t0462f9iPb9Sea
atmP2nyzP6S9y34kOw+6r/3INt+43dd+ZNtvvNzXfmT7/7DL8180up79qPgv
Gl3PflT8Fz/iwlBiJEUkoeYJ6U2oUEIy4gqLCB5RJ1PsR5x4Z3WreaLNvL+y
H7VSVq8QRuuEpZ33x3/xI5asD5u+/aj4L37ElTW1cor/YjjXiv9iYqmik0z0
W9mP2ly210u2XPYjWZTQfe1HxJ+lPLTj3h//xa/4L37Eokbvj/9COekNXc9+
VPwXja5nPyr+ix8xqtH7479o1N5+VPwXP+JVo/fHf/EjZjV6f/wXEw1Y/BfK
W+815NPEsPWpYmA/Kv6LH/FsKYPtuHHhv5iabsS2NTljslKh69mPiHNLGW3H
jQv/xa/4L37EvEbjwn/RqL39qPgvfsS/RuPCf/EjBjYaF/6LqdJQ/BeN3T/+
C+W8Hdc//otf8V/8iI1rarGq1g61tx8V/8WPONmof/wXP2Jlo/7xXygfvmFf
j//iV/wXP+Jmo+vxX/yInY2ux3/x6+lQsPztvB3oR/yc3YvZRhRpr/c2/+4J
Eouy9Ykytd43/0XjpV2v981/ofy5873eibdTEysc3eFWTO5NYiZje3ijWpf1
3ubn/SFTX9a7LGjovtY7cXkpt+74dl/rffNf/IjRjbf7Wu9t1t7Q9az3zX/R
6HrW++a/+BG7Gy/Xs943/0VKnqWEQqjYQ6GZFMmkWiVENqamifJtc6VqI8al
rHdi+7cKifW++S9+xPmlrLzjxoX/Ymo3EvPf3FBZ5dD1rHfi/1KW3nHjwn/x
2/wXP2pBo3Hhv2jU3nrf/Bc/6kKjceG/+FEbGo0L/8VUWWk3wobdv229b/6L
xnJc//gvftSMNTWXN/9Fo/bW++a/+FE/GvWP/+JHDWnUP/6L3+a/aOzr8V/8
Nv/Fj3rS6Hr8Fz9qSqPr8V/8Nv/Fj7rS6Dz/xY+6MtHg0t5Voen50p/HmqTC
T3Ua8+Xiv/hRcxp7vlz8Fz9qz9T4TM2R5BC/VW6W+dKf2/oUf+W/aHQ98+Xi
v/hRlxov1zNf+vNcUHvzhRrVuLU3X6hTUxomqd5TfaeHecPuX5kvF/9FYzmu
f/wXP+rXW5u7X8+G2psvF//Fj1rWqH/8Fz/qWaP+8V/8+jVv2Nfb5svFf/Gj
tjW6Hv/Fj/rW6Hr8F7+L/+JHjWt0nv/iR42bakSNz7j0NlVTpPd38180luM9
Ljf/xY/aN7XKfz0tN9TeuNz8Fz/qYOPW3rhQCxvLcePS03vDvl4Zl5v/4kdd
bHS9Mi7UxkbX47/4CSyD5W/n+S9+1Mf16+W04XNf6mRj35da2bi1d1/qZWM5
7r4UQlj+dr7c10a9fr1tFyx/l+PaUTfXj7pJqP/vv/2MlvpoIofkLEFLEf7h
n/XVZlsBQ3uh/SPCNAoeb4Xqk13SilHj1u75ZP1x229VqzW1AHaFMy85fonN
TkxcbJ3RMRvPv1ZEuI1ktyz9bAXiDW6nb36yX1rCb9TPlrj/eNyFvuNU39LP
ljz/GIbGSz9b4vtjWBpv/WwJ7Y/h+WTb0Dcb3bd3/jeJm77Z6L69A/4xrI3b
fXvn+WOYGy/37Z3ij+Fe6EZO1bA6pX/3KSF6nZIR65QmqlPiZB/q33Uoqmuo
F0NFkJTmpI4mJSWh/wm5jKsnJvWYMjLFXivJom+iRVHdzPujb45xf9E30aZo
5/3RN/+YButTHW15f/TNP6bHmlqsi745nN6Lvjm5OqbNerOj6JuN7lveH33z
U42tvD/65h/TrdH7o2/+Mf0avT/65h/TcL1V3eibja63vT/6ZqPrbe+PvvnH
tG30/uibjdpf3h9984/p3Oj90Tf/mNaN3h99c7LFFn2zsceFvjlkBIu+2VjO
Gxf65p9F32wsx40LfXNql1km661uR99sdL0yLvTNRtcr40Lf/GNZNRoX+maj
9tu40Df/WG6NxoW++ceyazQu9M2purfom41bJWP9o2+eyuTrVPBep9LxOhWB
16m8uk6luXUqqq1TeWydCk3rVDJap2LMOkz76zDSr8P8vQ7j6joMNOswrazD
SLIOc8M6DAfrZJKvk4G3TqbaOhlB60Rir+PhXscTvI7HbR1L5zo70FhDuetl
GfZ6b/FrT/JRnHifLETrveibjZd2vd6LvtlYzvd69zmZmsupARXu/nA7JCcv
vu0363FZ7y3+7U8xrmW9F32z0X2td5+nxu2+1rvPVePlvta7z9anKiN9s9H1
rPeibza6nvVe9M0/PnONl+tZ70XfTGntlOpLya+UaggVTyg9koqZkIbJAm0x
SvVI41LWu8/kt6qk9V70zT8+n43Ghb75x+dUbcJVb41Cn9VPdUr6ZqPrWe9F
32x0Peu96Jt/fIYbjQt9s1F7673om398nhuNC33zj890o3Ghb07VzKJvNnb/
6Jt/ir7ZWI7rH33zj896o/7RNxu1t96LvvnH575R/+ibf3z2G/WPvvmn6JuN
fT365p+ib/6xHTS6Hn3zj22h0fXom3+KvvnH9tDoPH3zj+1hsoXRiakq2vOl
h6uGlOZTbdR82fTNP7aVxp4vm775xzajhuWqqWUZbqq3aukyX3r4C7qe+bLp
m39sS43b9cwX29OD5sumb/6xXTWW9uaLbatLji7HzRfb11CKTTXVVtM27P6V
+bLpm43luP7RN//Y7hr1j77ZqL35sumbf2yDjfpH3/xjO2zUP/rmn03fbOzr
0Tf/bPrmH9tko+vRN//YLhtdj775Z9M3/9g2G52nb/6xbU512cZnXHraFryc
73G56Jt/bK+NPS622cbL9YxLT/OC2hsX22/j1t642IYby3Hj0t3dsK9XxuWi
b/6xPTe6Hn3zj2260fXom38u+uYf23Wj8/TNP7br9aeHZ8Pnvrbvxr6vbbxx
a+++tvPGctx9e5kWLH87T9/8Y1tff3oZFyx/l+Pa2d7XH9t7vJywsAQ8O9Ep
QpKk4gTnfFkEesNs3No9n56/LvOtNtwbXuN2/plSXYNn7dR2TE2ecDYl1z4x
ax/WAvt7o/v2xvOSZNnfG923d4i/utu43be/zH91v/Fy3/6S/vUYnyrJ9vdG
1+svxt9lf290vV6pf5f9/a/Hbrxcr2d+o/Y9g08J3pTyTAmmUOyFqisUCwlV
fFkclv29scfF/j6kYcv+3ljOGxf7+99lf28sx42L/X1qDhvmT7Vo+3uj65Vx
sb83ul4ZF/v7X6+l0bjY3xu138bF/v7X62o0Lvb3v15bo3Gxv08V62V/b+z+
2d//Lvt7Yzmuf/b3v15zo/7Z3xu1L/2zv//1+hv1z/7+1zRo1D/7+99lf2/s
69nf/y77+1/To9H17O+nwvM6lWLXqfC1DsPlOkyO6zDCrcPksU5E7LB9oO1U
5bvnS29vNeRyn+rf5kvZ3/+aZo09X8r+/te0U5N61dSmDtfkW0Xc/t7oeuZL
2d8bXc98Kfv7X9O18XI986Xs739N38bS3nwxjbuU+HLcfDGdhyp0qpuX/b2x
+2d//1v298ZyXP/s739N/0b9s783am++lP39r2XRqH/297+WR6P+2d//lv29
sa9nf/9b9ve/lk2j69nf/1o+ja5nf/9b9ve/llGj8/b3v5bRVHtvfMalu1Hw
cr7HZdvf/1pujT0ull3j5XrGZdvf/1qGjaW9cbEcHzQulmVjOW5ctv29sa9n
f/+77e9/LddG17O//7VsG13P/v5329//Wr6Nztvf/1q+62/Dhs99LefGvq9l
3bi1d1/Lu7Ecd9/L/v7XMm903v7+1zJff/u1FCx/l+PaWe7rr+UeVh/43ztu
/O+ZTtHpkEgutLzOP1OwcTv/TJF/lvXeWI4/Q9S151elBn04ZRd63wu6Xi+Q
f9ymsVyvF8I/btu4Xa9n8D9u/2DPqEbte2b8s6z3f3SrcWvfb+If3WusNZTA
C+3wBbt/1vs/ut2of9b7Px6jUf+s9388zoOlf9b7Px6vUf+s93885oNb/6z3
fzzug5f+We+NfT3r/Z9lvf9jGBpdz3r/x3A0up71/s+y3v8xLI3OW++HaXmh
Yb7gMy5lvf9juBp7XMp6/8fwNfa4GMbGy/WMS1nv/xjWxtLeuBjeB42LYW4s
x41LWe+NfT3r/Z+y3v8x/I2uZ73/4zU0up71/k9Z7/94HY3OW+//eB3rn229
Nz739Xoa+75eU+PW3n29rsZy3H239f6P19bovPX+j9e2/rms93+8vsZyXDuv
b/3j9S302Rf871ka/7v2vw43PiPTWI4/j/7v8v7+1bzxcr0e4Ebte2D/Xd7f
vy7TuLXvEfnX5RrL8Uv/vL/Gvp739+/y/v51m0bX8/7+dbtG1/P+/l3e379u
2+i89/ev265/y/trfO6rG419X91p3Nq7r241luPuW97fv7rX6Lz396/urX+3
9/evbjaW49rp5vpXN9f/Lf1s/O9S/+fPxucO/+dw49a+O/B/TjeW49v19PP/
NGt0Xj//T7P1f6Wf/6d5Yzmunebr/zRf/29p//9AYzlezmv//8D6/9b5wfdo
ueva3s6QwCepK87RKK3Z3DLpM3jp3Llp5WnKdWu7biGr/09DcN3ixF1FuV5l
E15lca7ykv/r5vrOnv9mluvt7Xobmf/akvPW5uRem/FhbULK2j5e/z3u+n5l
19TuTc211LpJDYzUNgiXf7j1D3f+cPiFeyU578mFTY5jcvqSY3dy6CbmObFm
iUFJbEF86fFtH9/1+ApiQ4xtKLaQ2CaO7WF0kciYkaki4xwZZvakfIPzTTzf
vFnbWWtnLc2crszB9ZnNz8S3+pf5UFO8IMmIcerH2BKhLB/rLPqzqCpfE/Ph
vx3F9cp8qDIfqsyHKvOhynx4fgbNh+y2/z2162zzobb5UNt8qG0+1DYfnttC
8yFaXakl/TgG/V7tpYcY2e/V2liltsSzPPz+jrfHfCjcCw8Bst/JtV0lt/RZ
Tn53ouNLrONDgKy92JZVYjmeZaf9YZcstuv/0HwoNrhnWWpH9/0PzYciwz/L
1Xmyzyp7/bN8Hbd39Ftv9K3MV//ZKEg3y3vbU5QjSbYJVokRMcpGhJCzmVWk
JO/tP03Cdcp72+W97fLednlvz2uG3lu08P9Gwe+397a397a39/bfYb/f3tt/
nyG/v+Kd89622pMPMbDfqQW0thovz2fL7042w8Y59RADa48DYG253c/nTfvD
BrrF1P6H3tsWQ/V8/rTjA/0PvbfN5v18Fp1nU3lG33G64dpk6V6ljWSQSJ+P
4MpasYzzNUVwktSe4LAY7aPcH6G/Yu0wzlcZ56uM81tiPqXcU4L9lFqfUs0p
iZvSqiklmpKdKbV5SmpOycKUvkupt5RUM85T8mxKZqVEVEoxpYSScX5LAhnn
t2SOcX5LzxjnKQ0zpVyMc0qyHOvPeqnKQwkdauGQcCSYNU7GY4yseIVD/RcK
uVCmhZoslGKHOuxk0bwUP6G0CXVMKF8OtctQg4QKI5QToYo4lBBDfRCKgVAD
HAqASbE3PpMCPynrxiep52/KalIDk2KWlKqkLiU54wTNTOpGUgAS8p7Q8oSE
n9DvCR1OqGxCUhNKekJGJzQyIYgJHTwhghOCl9C5EyI3IW2eL6Fpb8hPQkcS
KpGQhIQSnJCBcTnHxRpXZlyQx9U4LrW4ruJyOq6lcd3E5XJcK+MKOS6P49J4
TeEx/cbEGtPoMYGOqS8mtZjCjslrTEoxBR2Tz5hojinmmFpeU0JU9qjaR6Ue
lTWq5lEpRwU8qt5R5V4VKarNUWFG5aioDEd0j4hfEdEjeh8hP4eKdkPeqTVF
mkK6kODFOJVifIpSGuXmKA8Vbalcj7xTi7xTi7xTi7xTi7xTi7xTi7xTi7wz
VoRF3qlF3qlF3qlF3qlF3qlF3qlF3qlF3hkr9SLv1FvzOLUmU4MutcVSS+vU
thru7HAehmsqHDThFgmXxuG2mBzD5HYk5juxvIldPbGkE5MTX318sPE5Hh/g
2Ppjw43N8tgQx9YT28axNYyufHTXoxvWinbrvRV5p2qKj4VMJEG5cZbGqBpj
y1HaK9Yf763IO0+ghuuQd/5D763IO90cem/xKhR55wnc8HvyzkNo6/fknb4N
9N4SXVTknSfhyu/IO/+h91bknUcs97uTjVnknYe4VnvyTncfem9hMS/yzn/o
vRV55xHvtSPvPFKF8+SdR+x3nrzTwwC9tyLv9KpqJO/EqvZ8PXhfyDu1p9hf
yHsSBJ/ghDgxjnGz4r0xzpu88yRu+T155z80zpu886ghfn+itzZ550ng8jvy
zn9onDd551Fb/O5ku27yzkMwqz15p18zNM5hid/knf/QOG/yzqP+aEfeeZ7C
efLOoxY5T97p6QKN8ybv9FerkbwTb9azG4hSI+/UNcVJQzaWpJ0EUx2n64lq
u8g7TwKZ35F3/kPjc5F3HrXM704W8EXeeYhmtSfvlBLxrb5pf9jzlVh+0Pgo
3dvqnXbknVKCdJVSn632OU/eKSUdWw10nLxTShC2Oth4ovVKiZvmT7hhim2H
PDNJqCc4mLxTqKK7ro725J1CZdtqpvbknUIF+aDnQzHYaqh25J1ClbYKJVmr
p86Tdwr1VKurjpN3ClVSq62NJ/u6UEJ0PZ8L6uchUQ8ZyVQtkPL5oH5KJWz1
VzvyTkmJWiX1qNVi58k7JcWk1WTHyTslJaLV5cZTJaGE/j7ovkJKp/hXCRV8
0H2FoLWa7Tx5p4QatdrtOHmnhMa0+t0oNOFB1+PybrXcefJOcW22mu44eae4
4lpdb+SyWcU10uq74+SdYspvNZ4QsxxnIh6hpphEY61t+y8vhP1trymqGZKs
JJskCCjOwjgRjjG64s0o17G/7WV/28v+tpf9bS/7W3+mIWdSvOPL/vYEmvm9
/e0hyPV7+1t/3qEgjkTHLvvbk2Dod1PDO7V9U7P11CidWiThkA53Zzj9wtV2
uMmGqyE5ssmdS07UyQGamObEOiaG7cRsTYxEfN/H1zu+seMLOj6FWvEWGeey
v+2aIrYhpUtyV4Lu4pw/TrtKFIJxLvvbk6jo9/a3Xfa33gahcU70cdnfnoRF
v7O/7bK/9bYJjXNYGsr+9hDWam9/6+0VGudUNSn72y77W2+/0DiX/e3pjfP2
t8d85Lz9rbdpaJzL/tbSdKP9LVEZzyoXZW1/23uKbodEM8moCRI+wUQnKnvb
356ESb+zv+1tf2vxABqfsFds+9tDXKu9/a3FCGh8Uu1l29+eZtrZ3x4zmHb2
t+fnztvfHvOY8/a3Fkeg8dn2t9YyGu1viTZ/vso/6Pku+1vIoEOqkGSXYeW4
7G8P8a329rcWe6DnSxWby/72PJ529rfHXKed/e15bOftb48Zz3n721aqvM16
jtvftpLPbd5rPKwhW6m7rgd2Qf08xUFCsjVVdpSKeFA/Uey3mVA7+9tGAb02
yuM2Hzpvf9uoUduc6Lj9baOYbLNiI+qxrkN2QfdFjTNFLTfKjQfdF1VBmyOd
t79tKc1tnnTc/ralhraZslFK1YOuJxWlzZfO29+2kPU2Zzpuf9tCf9us2Sgk
sL/iBbUX4kR7bbS/baEQtNnGcpyrNl709tuLrvKdvNYU+Q5pZ5JfE5Sc4KUT
1FCJziq/9528lu/ktXwnr+U72eIwFEy4TjbG8p28lu/ktXwnr+U72eIzlBS2
DlvN8p18iH61951sMRsieVtTOyw1H8K1HQ7ew606nErhskiO+8ldnpyj5CKc
GPOJXTwxaSdWpVai1oxP+U5e5Tt51ZAMJ1k/SRQn2PJkqZTv5JMo7He+k89n
wu98Jx/zs98dFp/ynXwIf7X3nWx1AhqfOtWuynfy+dxo5zv5mLG18518Rt15
38nHvO2872SrJdD4lO9kW1OK2btx+04+q/gHPd/2nQxZfkhnkgw47ETbd/Ih
DNbed7LVH+j5tu/k81Ta+U62egQ93/adfGaT876Tjxneed/JVqOg59u+k20l
avSdDHvS8+sb6uflO5niSSEhnCpjl+/k87nWznfyMfNr5zv5zHbnfScf87/z
vpOtxkH9vHwn24rV6DuZqmbP6Qu6r9KGU/T3+ZnzvpOXUjXtTnDed/JSMqDd
C477Tl4otNvN0IiKslfphq6HKq0/Ro77Tl4oa9aF4oP1rdF38pI621JrQe2l
aH0q3ftOfirTO56K86ei/Iky7fhXWWJT6TqVpEMOHpKNJD+dIOmTVbamwm4q
2KaibCrBpsLrqeh62LbWVBRNhc9U5lSRYipsTuXKVJJMBchUdjyVHKeiIibo
NTUgMDqv4fgrx8O5Mrmv5e8TO1/W7zObfjAV1VLhLMUuQhp1knmt30+Fq1Sc
SqWoVIDyfDWVlFLZKBWJUmnoVBaaCj+e76244/neijiebyrbWL9vZZpTgWZb
v5/KJ6lEkgoiqQxySEQrFTZS8SKVKlKB4lScmMoP+vlWYtDPt1KCfk7Fg6lg
oJ+pTHCtMP2HeT+M+WHCP8z3w0Dvvi8jvPu+jO3uO8zr1u/LnG79fhjKXe9l
DHe92/r9MHW73su07Xph0Ead+2Ww1v5n/b6M09bvhyHa8TA/H2bnk8W5Poy+
YcwNg22YZ0NmdpLMzc8Pg2kYRcMEGobPw+g5TJlhrgzjZJgkD3PkMDiGeTGM
iodBcRgPy/EwFw4TYfn7cB68/8JsF6a5MMSF+e0wvQ2DWhjNwkQWhrHDKDbM
XmHkCtPWYdYaJiz9HEarYajSzzBP7RUmpzArhREpTEeH2WgYhsIMFMafw/Az
jDzuO8w6w5TjvmHAuczPD3NMGGEOA8wwtrjeMK+Yny9zivn5YTLRfhhJzM+X
UcT8/DCAOB5mj8Pc8WGyCFNEmBvCuBAmhcOcMIwEYQhIZn8y9k+G/mTKJ8M9
mesnU30yy2W+TYb4ZHyXv08md823PpnKyTBO5vDJFJ6M3WTaJoP2ZMxOhmsy
V0+m6mSeum8ySvdKRmcyMZNheTIqJwMymY0nk3EyE10vGYdvZmAy/k6Gn/f3
Zuh5f5+MOsePUzOZcJ+MsmR4JTMrGVcnw2oynZKhlMyjk2k0mUHJ+DkZPpOx
I8I/mTg1ukUyWJKZcjJRJnMkGSEnA2QyOlwvmRpvRkUyJU5mxGQ6nMyGk8Hw
ZiKczAPjkgyCT+R+Iu4TSX8i5yfSPRHsJ2J9ItBPxPmJLK8V214iu08k90Rm
n0jsE3H9Rk6fSGn9S8TzJyI5kcYnsngihU9k8IkArhWf54ncdb1E4H4iaE/E
rPOJfD0Rrc9fiSRMBFkikhIxk8iQRFAkQiERA/H0x4N/PPbjoY3HLx6peF7i
oYgHIBb5WNJjIT8W8bGsxvIXC1csQbG0xPIRi0UsEcfyMBpxNL9oSNFAohFE
ko+EfiTykTgjmUXyiSQSCSKSwZEEZqfMTpSdIV/0fKnPl3m+ePkC5cuRL8L5
AsxKzArKyjgrYWZuZuSZgTOjKjNkzVzyv2QzMOksfvTnPynCETKrJBknGSlJ
CifYvZIV4b3xoxeHdaP3xo9eHMqN3hs/ek02HT96ccQ2em/86MVR2ui98aPX
sGXwoxfHY6P3xo9eHIaN3lvYgvnRi6Ou0XvjRy+Ot+c/p1o2P3pxiDV6b/zo
xaHV6L3xoxcH1fMfOZgcTo37vBXvLW+HH32yTThoGo0zP3qtPcVuQhqXZP4k
/Z1koErWonHmRy+G/kbjzI9eDPSNxjlsJPzoxQDeaJz50YvhutE4h42ZH70Y
jBuNMz96MQA/eKqR86MXw2yjceZHL4bVRuPMj14MpQ/i6mH4bNxn1hvnzH5+
9MniZDhsND786FOMa11DbhnSkZOcfFha+NGL4avR+PCjF4NVo/EJSzU/ejEU
NRoffvRi+Fk1Vdr50YtBptH48KMXg0qj8eFHLwaSB3HrM3g0Gh9+9PerwI8+
7DMMCI2ejx+91ikquQ45c0izhn37Lbmc0r0pVZuSsJ7vLYWZkoopIZhSfafE
3pRg83xvaS/P95aW8nxTekntirfk0CkB9Jb8SGmFUPSHkj7U74eyfSivQ50c
quBQ8h4q3aFaDbVoKDz186WQ1M+hWByKQv0M1d9LfRYKrVBGhZrpUCoN5U4o
ZkLlcihYhkrEfYdqY6gq3DeUD2+Kf1Lakzp+Ur4ndTkpwie1d1JjXS8ppm/q
Y1IMT2pgaT8pcSdF7U3ZcjypTye1qN6Qw7ji47KISS6qfVSoiOIRPSPiHdFs
ulKuY38rfvQHFRfjR38QeQo/+vP/ki/XTnZ4+b39zYevUZE/fvTywWpEdrAO
2xM/evkgNF5+Z3+zkBuR1a3Dcr+mBnNqX6YmXmqd/bSfWgfhmA73bDhFD4fm
cIKFKygcMIfzZDgGkjt+cqUnt7T8fXLyXlnbOPOjlwdqTBG3kKGGpCbJ7CfJ
tZJ9b5z50R80zvzoDxpnfvQOA/T7w6bFj/6gceZHf9A486N32KDfnSoC/OgP
Gmd+dLeHxpkfva2R2tnfih+9ww+1s78VP7puQ+PMj+4xoHHmR3+lMn70YSMo
fvTmn/pB47On2GRIm0OmdUg3DssYP3rzzPud/a340Q0fND6prsCP/qDx4Uc3
zND48KO3lVY7+1vxo3d4pXb2t+JH93qg8eFH97qg8eFHf6VVfvRhTyt+9ObF
v6HnO8WSU3QgZJBTNYIf/UHPx49uWkDPx4/e1mft7G/Fj95hoNrZ34of3XSC
no8f3fSCno8f/ZXC+dGnqkXxoz+on/zopiXUT370to5rZ38rfvQOP9XO/lb8
6KYz1E9+dNMb6ic/+qsl8KN3XYEbui8/uuUA3Zcfvb2Rztvfih/9WS7uy4/e
Ya+O299GK+FHf5aT6/GjW17Q9fjRLTfoevzor3bDj/4sQ+350Tt81vFaZ1PR
nh/dMoWOnyD14kdPdnlbHbCK+E5urqsHU+QyZNEh8QrZxyEBqLCSlN/7Tm5+
9AcVm+VH97mASHfWYRfkR39w+53v5OZH93mBSFPXqabCj/7g1t53cvOjd3iw
9r6Tmx+99lurOjVsT23SqUlUzg9H/OX8cHaW4+FoG+6f8vfheqixdRkffvQH
jU9NMd6Q2ods8JASHdZFfvQHjQ8/+oPGhx+9w5r97lSZ4Ud/0Pjwo/vcQuPD
j95eKu18Jzc/eodHa+c7ufnRfaah8eFH99mGxocf/dXK+dGHTXLzo3edjBt6
vlNMPkVZQpY71XP40R/0fPzotgfo+fjR2/umne/k5kfvMG7tfCc3P7ptBXo+
fnTbDPR8/OivtYEffar7bH70B/WTH932BPXz8p3c/OgP6ic/eoePa+c7ufnR
bWtQP/nRbXNQP/nRX2sIP3rXGbmh+/Kj2xah+/Kj9+xx3ndy86M/26b78qN3
2LrjvpNjfeFHf2af6/Gj22ah6/Gj23ah6/Gjv1YcfvRnO9aeH73D3x0v7WPt
4Ue3XUPHTxLP5kcPu1Jbm//AfsMXP/qDKaKdYhQhCT1kYocl1RbTdVn8zvq9
+NGJCRAZ9DrVoPjRH9zaW78XP3qH52tv/V786A9u7azfix/9WeXLeev34kev
U1O9Tm28OjWJ6tQqCWf0ax1bh3uuxrfi+fjRH/R8/OhTTOniR3+rXPGjP+j5
+NGJP9Dz8aO3d1w76/fiR+80A+2s34sfndgEPR8/OjEKej5+9Nfqx48+Vbgu
fvQH9ZMfnfgF9XNbvxc/+oP6yY/e6Q3aWb8XPzqxDeonPzoxDuonP/prleRH
7zo8N3RffnRiH3Tfy/q9+NGJg9B9+dGJh9B9+dFfKyg/+rMruB4/OjESuh4/
OrESuh4/+mtN5Ud/xE3t+dE7PcPx0j5WV3504mi9Vtgk31386GElbq/cD/bI
3fzoD3YPTpGvkK+/VdeIrg9u7c3Pmx+900C0Nz9vfvQHt3bm582P/uyey3nz
8+ZH7/QR583Pmx+900kcNz/HyrxOzYAaH3r+6Sc/OrEb6meZnzc/+oP6yY/e
6SnamZ83PzpxHeonPzrxHeonP/prBedH77pON3RffnTiPnTfbX7e/OjUAOi+
/OjUAui+/Oiv1Z0f/ZFKXI8fnfoAXe8yP29+9E6jcdz8HOs9P3qpeL+oG1D7
Y7wZKz8/OjWkXqt/kkJVDp9qfj1KN+wnUMF4UV9qivT2ZNPO+1NJdlFv4K2d
96dS6aL2wMt570+FTek9jnt/453gR0+MVL7xD7ovP3qnAWnn/alIt6hT0H35
0alX0H350V9vCD96qbDV6Hr86KUCFaXCce9PBaZFPauPV4UfvVT8WdQ2qP0x
uo33hR+dOlevNybJvCqnKIN7w+65yhaL+gdv7YyLygmLWggv540Lxn/pTI4b
l/EC8aMnJjc6BXUSul4ZF4zi0p8cNy7jTeJHL8zUi/oJtWd8e71O/OjU0nq9
UEluxvDbaVLdP8yyi/oKL+f1DyOqdCrH9W+8WvzoyYmJTa8wXb7G0fF+8aNT
g+v1hiXpGkNhp1319TDuScNy3PXGe8aPnlzh8aYleRsD2qJW13jZktQdjp3C
YBW2LDRd2N3arvzgs3U9+HwiNoaCxpAxh7QxZG6HFKzCEmdMiLoPXq7Tn6YH
FXvySqn9EInf2mERLb9vTWbLrGi8/X4rtsauvEX2d3rZ8ruWoLZI48bL73qn
Z16AipysU8WUXXmLHGy8tO8v6hZZ9+DUzi3tppZZalSdmkxTY6KcH07xy/nh
rC3Hw705XIXl78Px9sZuZO4ZZ3blB41zTVGtkJ2HFPWQJVZYWo0zu/JmeWs0
zuzKzCrQONepqsCuvGmijcaZXZkZBhrnOlVi2ZU3ybLROLMrb5LXg7dxZlfe
dtzFnAONM7vy9kVfzDzQOLMrM/tA48yu/Hqh2ZWHtdYvGo0Pu/KDxmdP0b8U
YzikzafaBLty1zP0uzI+7MrMTdD47FM9l115L3blvdiVmaWg8WFXbm1Au8v4
sCt3WqN2t/FhV2bOgsaHXZl5CxofduXXO8+uPFU0Frty11+8oedjV55itesU
EVrsyi1taV+ej12ZGQ16Pnbl1nK0256PXbnTL7W7PB+7MvMb9Hzsysxx0POx
K79RB+zKU7V4sSvvxa68F7syMx7UT3bl1sK0K/1kV+60T+22frIrM/9B/WRX
Zg6E+smu/EZFsCt3/cobuu9byt19p0R4ue9bWtd9p2Trdt+35KT7viUF3Tel
6t6SV673lgpyPXblU0pk7bd0x3a9Kc1wShG8lO3aDxV4aT9Uz1v7l6rW8VCg
HirNeilfkgqdlLGkRCS0OiGsCYVM6N8JsRsXcEzlMQVFpYzoHhEwIs8RLWYo
yu98J4td+cHb73wni1151zrVstmVd7Er72JX3sWuvItdeRe7cmv92vlOFrvy
LnblXWtq3JfzU3P0cn5qQJXjqfkxXPLl78MdXBM7GdnP+LArP2h8aoqipljN
IbU/1XfYlXexK+9iV97FrszsDI1PnSri7Mq72JV3sSszT0Pjw67c1hDtfCeL
XXkXu/IuduW25jrvO1nsyrvYlZm5ofFhV36jkNiVp6pQsSt3PdYbej525Snm
XafIWhvioedjV97FrsycDj0fu3JbebTznSx25U6f1s53stiVmeGh52NXZpaH
no9d+Y2uYlee6u3FrryLXXkXuzJzPtRPduW2QmnnO1nsyp22rZ3vZLErcwNA
/WRX5haA+smu/EZ/sSt3Pdsbui+7MjcCdF925R5d530ni115F7sydwN0X3bl
N9qMXXkXu3K/JR8Ba6TYleejUOzKnV7uuO/kRK2xK+9iV+bGgNqfIIyJbmNX
5t6Ajh9Sp2JXDgt/a1N/YK/fza68N7tyihinuFSKULzVstiVu/6v31m/mymF
WwUqImhLaiuK9tbvZlfmfoE/7a3fza68N7sy9wy8tbN+N7sytw28nLd+T437
fWpf71OD8I0GXKeWSU2sfmwNno9deW92ZW4geIokWr+bXXlvduW92ZW5i6Dn
Y1duK6x21u9mV+70fu2s382uzM0EPR+7MrcT9Hzsym+UI7ty1xX6Qf1kV96b
XZm7Curntn43u/Le7MrcWVA/2ZX7K+S89bvZlRsct343uzL3V32iMNmVu97z
Dd2XXZmbDLovu3Jf1nnrd7Mr920ct343uzK3Wn2iPtmVn+64Hrsytxt0vbOZ
b3blpj9w3Pqd6FF25X6cDbVnV57gqYkyZVfmvoOOHzK2za6c6nRtVfrB7tLF
rtzDtmHPz4tduV+C9ubnxa7cw6u9+Xkx9XX9bO3Mz8tU4EaEt3bm58WuzL0I
L+fNz4tduWkcHDc/J6p2nRq0NTlZsSnnn36yKzftg/bm58Wu3NNAO/PzYld+
poV+sitzb0L9ZFfm7oT6ya78Rv2yK3f98Bu6L7sy9yh0321+XuzK3KbQfdmV
uVGh+7Irv1HG7MrPtHU9dmXuVuh6R8i82JWbvsJx83OildmVe9pvqD278gT1
TVQzuzK3bb1RziEJvNiVux7ZD/b7u9mVe1lt2O/vZlfuSaSd93ezK3MHw1s7
7+8mKnETw8t57+9mV25aDce9v4nGZldOzm18hvnGczND9y3v72ZX5n6G7suu
zB0N3Zdd+Y3+Zld+PhOux67MbQ1d7ygHN7ty03o47v1NFDm7cn9mNtSeXXmC
MSfanF2Z+7ve6POQO97syl3v/oY9Lj92Ze5yeGtnXH7sytzo8HLeuLT4A7fj
xmWi3tmVw/GQGJXoFE0z4rxx+bErN+2I48ZloufZlftzuqH27MoTnDpR9uzK
3Pj1Rt2H7FIF96Yn6f6pbL24++HlvP6pYIzGxHH9myh+duVwLCVGNDa9CZqd
aH92ZWED9Ub/h4RTxb+20vT1VFxDf+K46022wHK9wz052QMh81RhaAlDqMkq
CMlnONu3yhapBtJYqjv1szx4/eAzxR58hrS3rz3FmdYp2rLeqlD07ge9e3r3
g7fft4QsLAIqjrZOtVYi9oPb7/qTeGHIWcIooGLW9O7+qmrfX9wLU8QSbgF/
2veX5JIx37i165V2yex+sGf4JSN4CdOAl/NTc7kcT43Nqd1W/j61empyFeNr
ydowPvTu3uY3TFHYUzzuVLGldz9ofOjdLRb4HVfaonc/u4zxoXdfIpQajQ+9
+xJJ8+BlfOjdl0iDJewEGh9698XTu4SjQOND7xaeAo0Pvfua7BZ691TnXfTu
i+Wz0fPRu4W3wFPMvDwfvfuiKTd6Pnr3RaN7cHs+evdF4l3CZKDno3dfJI4l
fAZ6Pnq3cBro+ejdb9YOvfsykxr1k97d4teG+knv7ptrV/pJ7xamA/WT3t1X
cX7rJ727xTjHL/2kdwvrgfpJ774Wvbul8wu6L727aYW0K/eldwsLgu5L7xYm
BN2X3v1mMdG7r0Xv7qff0PXo3WNcW/TupityfLtesqHo3S2Obqj9lGIv7adU
89b+LXnpeEr3nZJe9VJghxoyFFqhiAnVRFL6kxp+UqEnFSYhwwmJS2hNQhji
Cj+u3zEFx9QRlSmiaUScs6XPqyntrN+idz94a2f9Fr37Knr3VfTuFs8dt36L
3n0VvfuaLLN1aofW5MbHtx9ZzPPRu4VvQc9X1m/Rux/0fPRuYV7Q89G7W1vU
zvotevdV9O6r6N29epy3fove3WqF49Zv0buFjUHPR+/uurU/qJ/07lZLNtRP
enffVDvrt+jdwtCgftK7e3U7b/0WvbvVG8et36J3C1uD+knvvore3dqzSWD9
Fr27aa/WZ3IUvVvYG3RfercwOOi+9O43m5DefRW9u79KG7oevXuM4kXvbjot
x63fyUqkd7eatqH29O5JPprsRXq3sDvoOL27abce3PTulqJ/sOfnpne3Orhh
z89N7+7B1t783PTuVhu1Nz83vfva9O4ePe3Mz03Vbbov7czPbaoIC4SX8+bn
pnc3LZjj5udka9K7w32S2K3o2vron37Su/tm2pmfm94t/BDqJ727dxfnzc9N
72412HHzc9O7hSvWJ5uU3n1tenfPJh8n83PTu5u2TLvKx8t96d1NZ+a8+bnp
3U1v5rj5Odmr9O5r07t7V9zQ9ejd46zZ9O6mQ3Pc/JwsWHp3q/Mbak/vnqS4
yZaldwu3rDd7NuT6m97d9a5/sN/fRe9uc8GG/f4uendPEu28v4veLYwT3tp5
fxe9W3gnvJz3/i6f4qZpc9z7myxfenc4rhKjG5tqvvFN56ZdZdNxX3p307w5
7/1d9O6mfXPc+5usYnr3ddG7W3rZ0PXo3eNku+jdTRPnuPc32cn07jafbKg9
vXuSGSeLmd4tbLXerOYURbjo3c/pHpeb3t1mmQ17KG56dzbflr6cNy43vbvN
N44bl5veLSy2PtnU9O5wKiYnJD686BTjdLzp3U1j57hxmaxsenebiTbUnt49
yZ2TvU3vFn5bbzZ3ikTc9O4engt2/3707qbBc17/fvTupsVzXP8mO3zp34/e
nZzMxNBM0ulkkdO7hfvWm1We4hU/enebvTbs6/2hdyd59c1Cp3en1sNkpacI
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
DLFjSI1hNAbPGDRjuIyh8hgox9AYA2IMhDEExvB3DH5jwIuBLoa4GN6OwW0M
aTGYGecxjI3hyziPgWsMWceAdQxWr4EphqIYfmLQicEmhpkYYo4BZgwoMYjE
0BFDRgwWMVAcw8QYGGI4iGEgBoAo/EfRH8U9inkU8CjcR9EeBTqKchTjoxCP
wmt8RrEdBfYorkdRfRXMKIxRBKPoRaGLAncUt1HAolhFcYqCFIXoKEKj2ERx
iYISheQoIqNgRJGI4nAUhlEIPN8I/iPgH8H+CPKvIB4BOwJ0BOUIxkcgHgE3
AmwE1QimRyAdQTMCZQTIIziOYKifIwCOoHcEvCPQvYJZBK8IWBGojiA1AlIE
oQg+R+AZgcZ9R3AZAaUigBxBIIJFBIgIDEdQGEHA9WbDn429snGfjTYbs/az
Ac9GW9lIz8aYDbOyIWbjOx/ObFDZYLJR5MOfD3o+2Pkw50N8PsDz4cwHMB+0
fKjyIcoHJx+Y82GZD0MWehZwFmgWYhbeWXCzcLIgMuEzsTORzwSeCZkJl4mV
iXQm0EyMTIC88POi50XmxZ0XNi+mRlKp/xmwPHgeJB1MB3KjXPhccA4YH3bl
5/+MD7vy57TvJF73RuPDrlx43b+X8Z3E695ofNiVP7fxncTr3mh85va+k3jd
v93xnZxupfo2u3LhdW/0C3blwuve6AbzOL6TSe55OqG972SxK38e23cSr3uj
52NX/gyL7yRe90bPN8PlO4nX/Tt8vpMzjKkqzq5ceN0bdYhdufC6f4fddzJJ
2sWu3DRZ+39ei+8kXvdG/ZzX5TuJ170+r893cl5jqp6zKxde90Y3Ylf+vG7f
yZCB4XWvzzTwncTrXp9p4Ts50yNV1tmVC697owvN9PGdTDGDdzr5Ts60SrV2
duXC616f6eY7OdMuVd3ZlWcapso7XvcqvO49PXv9bnblTlv4wV6/m125ach2
faez9XuSILrTfmfmbHblpi3zu0x/PcfrLltNexMVr/t3mZh4eN1l8WtnQrzL
yIvH646tzfksLy8Ir/t3uRnoWXbsyoXXvZeh56upERdO33AMJTf8LNfk6ozt
wfOxKz/o+WZZW7943Rs9H7vyZ9lbv3jdGz3ffA6sX7zu38+D9TufCXblwuve
nw39ZFcuvO6N+jmfFes35ApP57Szft/PjvWL171RP+dzZP3idf9+nqzf+Uyx
Kxde9/5suS+7cuF1/37OrN+Q+OF1/37mrF+87t/PnvU7nz925cLr3p9D12NX
/nwerd8UIXk/l9bvfDbZlQuve39GtZ/PqfU7n9UT3IPX/f3M4nWvwutehde9
P789Py925U6/vGHPz4td+fOZNj9PsmgPivYm2sWu/Pmcmzh43bFkaOeFvp97
Lw6vOxZE57MNGGC87t9twUDN9sCuXHjde7vQT3blpre4arjjPttJcq7Hppx/
+jnbjfmJ1x1Lo/PZhsxPvO7fbcn8nO2JXbnwuvd25b7syoXX/buNmZ8hl8Tr
/t3ezE+87t/tzvycbY9dufC69zboeuzKn23R/ExxnHebND9nu2RXLrzuvX1q
P9uo+TnbKbty4XV/t1e87lV43avwuve22+8Pr3tjvz+87t9t2fs7ZC09ytp5
Me+27QXgdcem6Xy2cwOF1/27vXvg2ebZlQuve2/77suunFocH3HAD4+PMN/0
j5jg/eF1/4oN3t+ID+zKhde9xQnXY1f+iBfeX4oaveKG9zdiB7ty4XVvMUT7
EUe8vxFL2JULr/srpuB17+QGx9mVC6871psL9ri8Yo1xOSSphdf9K+54cLzu
X/HHA4wYxK5ceN1bLHI9duWPmOQHJwblIzYZlxGf2JULr3uLU9qPWGVcRrza
xgWv+ytu4XXvZA/H2ZULrzuW1l1fsUz/TvGpj5imYyOusSsXXvcW37QfMU7D
Eeeqjq1O/yLe4XXvJBTH2ZULr/tX/HO9EQOX6+F1f8VCvO6T+1J43UdcVPWw
0Xm87lV43VucfPTu/pVkwNa7O331Bx+9u2mCLvjo3R8xtPXuk0ToYf2+cPfT
u5teyO9L7v2IryXXkt7db93vWu9uOiK/a737I+623t3ptNq33r0XvXsvevdH
LG69e+N1byztWu/+iM2td2+87o3lfMTp1rs3XveveN169ytm07s3XvcWu41P
Ta3c1DYI12I4csJNkJzlk4s6vpisHeNjq3jQ+IxYrxTwIjn310p7JXQWieoj
/ivxgNe90fjY2T7qAUpKvO6NxmfUBhRDeN2/agSqh1EnrJyN173VC8/nF03/
cEPPRzH4qCFcYuuQZywCetNNaW/LftUVnzq87o2ej6D7UWe25yOobrzu9VFz
Ls9HsPyoPbfni/pDQNx43avTuH9QPwliTe+74VGXcNCsQ362CEJN/6td1KnS
TwLLxrxbHzVr6ycB46N2XfoZ9YugsDFvVtNp3NB9bdQfNW25r43WYMKjvpX7
2hg/6tx236h1NriNoama5uuCrjdq33K9UxTwVQOtgVEHbQwbw0ZtzA/1UROX
9lEXT5C9DP0a9VGGeG2Z2LVlHrda2eu3fLg6Hf8He/2WD8guH4qPGmr91hrS
AaHCFt4uC2vXmpL0R21NKe8p7Ul2WVMCi0j6lqyxla+h2i/thhr5qL+hlB0K
xnJ+KNMu54dyqBwPVctQW5S/T4p+TYpPQqET6peQoYRmxMV/XNpj4o5sFlUw
IndEtyOqzJTzfPTuXaOuW780mkaNR423fkmiX7Xe+h31nt69SQyt7usnvXv7
MjTq55gDrF8jS1nRzvp9zQXWL153Z52PGcH6xeteH7OC9TvmBXr3xuteG697
o/vSuz9mCOu36N0ziK95wvrF614fc4X1O2YLevfG695P43r07o9Zw/rF614f
M4f1O+YOevfG614br3t9zCDW75hDTnIMXvca8whe99p43WvjdW+zSc/PTe9u
ep8b9vzc9O6PecX83PTufnjtzc9N7/6YYcxPvO5YIrUzP18zjfmJ193bdz7m
G/MTr/vXnGN+jlmH3r3xureZRz/p3U1LSJde4Ww/ZqBwnE0MV3Tu/DtmIvMT
r7vZ6XzMR+YnXvevOcn8HLMSvXvjdW8zk/vSuzde96/5yfzc9O5Z3K9ZyvzE
6/41U5mfY66id2+87r2aXI/e/TFnmZ943b/mLfNzzFz07o3Xvc1e2o/5y/wc
Mxi9e+N1f81ieN1r43Wvjde9zWX9/vC6N/b7w+v+Nad5fxe9u59WO+/vNbd5
f3jdfUWcjxnO+8Pr/jXLeX9jnqN3b7zuba5zX3p3D5uPb8x43t9F756P8mve
8/7wun/Nfd7fmP3o3Ruve3/1XI/e/TELen943b9mQu9vzIX07o3Xvc2H2o8Z
0fsbcyK9e+N1f82LeN2bFMBxevfG64719YLbZhRzpHG56d3ZpD5mSuOC1/1r
tjQuY76kd2+87v31dz1698e8aVxuevfH3Bnd4Zg9y7jgdW8zqPZjDjUuYxbd
xgWv+2smxeveJAmO07s3Xne7066vOVX/8Lp/zav6N2ZWevfG695mV+3H/Kp/
Y4Yt/cPr/ppl8bo3eYPj9O6N1/1rtnW9Md8u18Pr/ppz8boP18TG6z5m3o3X
vckhHKd3b7zubQZ+5MnuBRKqliebJu6G9wV/+3/Mxi1PHtIqL83vSq1C8mR/
Rvb/mJkLBxl5sme/9tuaJE9+zNH9SpqeTruWJ/tztP/HXN3y5IXXnfSx/8eM
3fLkhdf9a9ZuefI1b5MnL7zube72fOTJa9XUYkxtiHD6HrN4ONYmZjQ2vnxz
PN+Yz8vzEdx6V9BOCdzXvK5kJV53UpXzMbsrrYHX/WuGR5E85niCy4XXvc3z
+kmAaPrdC+rnmO+F7C4beH+stbNXv+Z9Jli87qQ+52P2t1Xgdf+6AS79jDvA
BnbhdW/3gPvaWHq7IFzHbbDc1wYwQvfrTjD2eN2/7oXtvnEz+PBeeN1bSnU9
H8iPG2K5ng/dxy3BFjLuCR+sCzNy9fa1ofY+MK/7wgfkwlxZ487A+FcXhru6
MJe1m6PnZ1lgTcd4w56fZQF83CHmZ5mw/bDam59lQn3cJuZnmQgtnWg3JZov
7VJSdUrAUTnG3ZLSL1MSoBwPhfdQ35a/D7ViDaVEUm+TWpYUleO2SUj5hFLF
dxNZMv+Oi2BMGlGNIoIeUWameC6ln3EDkScvFu52C7kvefJi2fm6i8zPIk+O
MljjRjI/Sexft5L5Oe4l8uRlh28tyfXIkx/3k/npjX3dUebnuKXIkxde93ZT
aT/uKvNz3FbkyQuv++vGwuteF173uvC6t3ur398mTza9tsH0/l73l/e3yZMZ
7BaztPP+NnnywutOO3Q+bjPvD6/7143mkuNOI09eeN17FNyXPNli3K6v2837
2+TJUeK9xvmmX3jdv+4572/cdJbchde9tVnXI09+3Hje3yZPftx63t+498iT
F173dvdpP24/72/cf+TJC6/76w7E695kUY6TJ5uW9YY9Lhd58uM+NC4XeTJG
jY9b0bjgdf+6GY3LuBvJkxde99bqXY88+XFHGpeLPPlxT9axQRsXvO514XVv
t6X25MkLr/vHjUmevPC6v25NvO5NnuU4efLC687qsOvr/tS/mzz5cYfq37hF
yZMXXvd2k2o/7lL9G7cpefLC6/66UfG6N6mX4+TJC6/7183qeuNuXa6H1/11
v+J1H86yC6/7uGUvvO5NGuY4efLC695u22c/6lH6wWc/6uG64L3/x73b+9Eh
lbYotO/9qNWY/T9u4MKFbj/qYddusxWMm7j3o34dzl+MbeM+7ql643X/upN7
P3rdyvajG697u5n1037Ur9mmsPRz3NDrcLZPTlo2j9g0shedf1s/bQgf9/XW
Tx/2jztbib9xa/tA33jd+6vtvj6crc7t/3F/Sw1cPnBjhHzd4mRUvO5fNzkT
1LjLfVhuvO5tZXM9H4CPO325noX8ca+X68XNbkHeeN3b7a79uN+X9nHDWyA3
XvfXLY/XvTrdsNEEbhrYH+z3VyZMq6+7vu5876+80Gz2rd5q5/2VF9DL1Xnv
7w0D8P5qTcnfcjwlGk94gAc6JQ1Qbt0VCpVQBHzDCJLaOSHxMSK7b0XHGJeU
+44JcVSTepdcW0Ndz370CUvw/sp+9AlT8P4mXMF+dLMgdfiC9hPG4P1Vwhns
RzcJ4Q1vsMLq9qbqxuveUkePy7YftZlg1zccwrhs+1GM6Z8wCeOC1/0bNmFc
JnzCfnTjdW+rsOvZjz7hFcZl248+4RZ1fKHGBa973XjdOwxDe/vRjdf9E5Zh
P7rxur9hGnjdm5zRcftRf/Yv2P17wzn077IffcI79G/CPOxHN173DvvQ3n50
43X/hIHYj2687m9YCF73Jo103H5043X/ho243oSP2I9uvO5vOAle9+HOvPG6
T5jJjde9SSkdtx/deN171jzrvZvfcBPae71/wlR6vZ8iTRHqG/f+nzCWXu+9
nTrf6/0T3rLp9Nb7J9yl1/sb9mK9//C6t/TsvtZ7m6P2/4THLPe13sc5ZHrH
htDhM+5rgXZ67fqG01h4P7zu7c1wPQvkE26D8mGZ6J/wm3K9hOGYsD+87h2W
o/2E5yztE6ZjAv3wur9hO3jdm1TUcS+4X+cNe1zKQH/CfIxLGag4yz7hP8al
PNgnHMi4TFiQDp7ShKGsDLXXN2woVBiTouV61vsbTlRxsR7TmPX+CTMyLpVw
I+v9xzP0hh+xPDXJquPWe4tlF+z+vWFK+ret90/Ykv5N+JL1/sPr3uFM2lvv
nZa8vuFN1vsPr/sb7oTXvclfHbfe26y5/yccyvUmLMp6/+F1f8Ok8LoPR+4P
r/uET/3wuje5rOPW+w+ve2udz3zp3f6Cz3z5hF31fDlFsuNU/YZj9Xxp8+v+
n/Csni9vmJb58geve3v7XM98+YRxLdczXz5hXeV6JkRnQ/n7cj0v9BP2tbRP
+JcX8wev+xsOtgxwp1s3GrgW0y/Y/XvDxvSvdPgTRqZ/E07mxp2evYYy9xtm
pn+VcDP/44RgveFnZb50+naj+dJm6/0/4WmutxOmZr78wev+hq1t8yVcyn/w
uk84W2eJ+dt5vO71B697e2WfcWlr2v6f8Lcelzaf7/8Jh+txecPijEunhS9h
ctobl04TX9+wOePS6eLrE0a3PGinjTd6gDbX7/8Js3O9SridC3c6+fqE35UG
4ZbutPL1huV1Npy/nd/GpdPLl7C9576f8L2+7xvG576ddr4+YX3LfQ+XdXX6
+XrD/Trbzt/OlxOdhr4mHBDLm7/Lce06Hf0/7HT0HsP15KP7NfL6Jx+98foD
7x/83fDPBf9ueMIOn3z07mxI8DNo23VKjd7OR29U06bz0RtP2GLh7O98dLPa
7zdfUOejN5KdOh+98YQ7bnOj89F95f3u2n53XX533X6X8Mjrj9/dS/ubMN/5
6I2X9gmjvH/a/5Z2P0bMzkdvvLT73dr9Wc7/KecTfvnncv7vcjzhmH+34ycs
s/PR95KP3rPPONcyzp0p3JhayKlhl9pBqSmSWhGnNsJwJuQjE59bbCWRUbN3
5Zt01uA2zh3K0Wic2/XaaJwnjHQb5zbV00K0//+puhclyVFdC6BIOKt6zv3/
/72dWki4Y6ZDYSeFMealx96Sgh0eveQJN5UiGh69pH4OKRpvOKrUf/DoJfXz
hKlKxQSPXlI/h5QtE74aUnLAo9cqqn8SRSM8ekn9kyhj4NHzFf6K0mLlJKXp
Q4z+Sba2lXScNeGy9jR49JL6J4UywKPnK6yWqxUevaT+SabOG3bLhAaPXlL/
TDgulQYePV/huY4+E6abtjZ49Fzw6CW9X3meSnq/LVfnDe+VO2ltXDCtLK8t
lmBtNuAbBuxMDo9e0vuV5TZfYcLp/coSWtL7Tfjw9n5lOcxXOPHj/TqsuCx4
ueDRc8Gjl9TOstiU1M4JQ17aeZLTtjMDHj1fYcpsVfDoJbVzwpdTO0ujzFc4
89bODmsuzS4XPHouePSSnluaRb7Cn5fn1kk9JwjuhkXzocKj5ytMOj23w6Xr
hJkLHj0XPHpJ9U049VJfnXzyFV4d6usw6zqB5IJHzwWPnq/w66V8h2Ef0mF4
9JywbHj0XPDoueDRa3eudTKWdTKWdTKWdTKWdTKWdTKWdfKGeVsnY01SnT6E
oSJc1slY1slY1smY8HDrJDw6rcLfWSfh0UuydUw4uXUSHp01RnnrJDx6yRN2
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
f2/Ekvn7inBxvyNATsRDXo9uexzbs9YeqPbwtMfleErG8t4W5rbEtqWzLY/H
YjiWrLb4tEWlLRzHMjEadxyN1iAZzXA0pdZcjsYxJ/aYk2ycE0qcnTjOjhVn
R4izQsdZWePM+J4ZPfJ6JPQX7JaR/Z920rsDHj3j0iwYn0O3QO8OePQE/Cc9
l94dl5bB+IRHfz3tTB549ARkJz2X3h1D40DvBhzXWvWdVl+aB+MTHj1ftA/G
59A/0LsBmb+S3v2ihTA+hx6C3g3g+5WHLgIePQFrv5LeHfDoomYfsr4fPPqb
ZsL32/TuBlNVpyjn+216N4Dj+ysNPYWegEd/01X4fkNbQe8G6Kuv7PvBo5f0
3KG38P02vfuOirPobXp320x7DQcIixcdBr0bUMuoUt8ZXZcuw/eDR3/TZ/h+
Q6NB7wYcigTwiTe9hu83NBv0boCauLQb8OgJyPKV9G6AD7LeCR79TdOhX+DR
X7PjbBbw6AnAEG86D/0ytB70boABs0t9Z5Zd2g/9Ao/+pgHRL0MHEq0b6Bd4
9DdNiH4ZupDUL/Dolz4EHj0FVH8lvVsAcszsf9GMaB88+pt2RPuGfoTeLeA2
UmBsvGlJtG/oSejdHeMydCXw6CkA9Cvp3QIn401nor6hNaF3C1SMS3MCjy63
c0l6d9OfCKgr6Xd49BRwVqtgnSfrr37IFBRb58lczpO5nCdtX+Svv6/zZL3d
CaZNf1fnya98/F3Tr9R5MpfzZH1l5RMXhPOkbZEUU+08mfDoJVO5pnGp86RA
i/fqPvQudZ4U6BBvupc6T+bQvjhPCiyotWB5P+fJXM6TuZwnczlP2p5J7xeT
q6jBGs110RjFxoacmPGx+fUa5P2Gdia9n/Pk3bWGjmZ7P+fJvPQ0j/drmhrn
SQ7B2vWkjl/Ok+U426R2Dq2N1FHLeZJDitTOob2BpYJHf+2qQ4eDsgQendfI
fdDToclxnuT4qF1ZaAw8enIkkJ7rPMnA/97Fz6F2OU8ysJOe6zyZQ7/jPMmg
7RSgvnMauPQ8S33Oky+6nlBf0/Y4TzKwfqXz5IvOZynftD7OkwyPX3lofuDR
k8HvK50nM5wnazX5kAkUZHyG86RjGfnj74zPWAMiSuWNzxg6IeMTHh06Vjnj
89INGZ/w6K9T09AQGZ/w6LyB7hufQ0/kPElxjkLlaGdMCmjtjEmVqJ3Rqc0m
pYd2Ok86XsZg/ChM8TrV3X/aGUO1oIqBRg+kUDsbspITutWhCe3ibFfScUmM
CSXOabKPvOfoNFOqm+65TbvkPOngF+lgFvc0GkPLZHyG8+SLpsn4HLom50kH
kUgHBlJ558lL5+Q8aYP+ykPvBEmTNsavdJ60cZD1/dJ50gIeb1oo3y+dJy2U
9+UteOSjnO83p++hk/L9eBzf9FK+39BMOU+akJEmCum5zpMGMum5zpP3tO88
acDE+N7bFtBreA59lfOkjo7UEXG1BitreoGSvp8RfYNzhvbK1E14dCLjTYfl
+w0tlvNkwqNfmix49Ex49Ex49Kqu+gUeXfW0G/0Cj16PW34/Ws+KNh5sv+uX
S7+lX4aGy3ky4dGrueo72tOl6dIv23nyRdulX7bzZNuWEx7d62a8ab30y9B7
OU8mPPql+4JHz4RHz4RHr26r9h2t7kULpn3w6G+aMO0bujDnyYRH1+0Zbxox
7QO3nZxdHSs99GLw6Jnw6Jnw6D5fxpt+TH1DQ+Y8mfDol5YMHr1yubnvPNl0
ZQmPngmPngmPngmPXsPlux9VKz7kt80Fl9zkk//QntV+VLCRz4BYDWblaz+i
jpIf5Ws/qtGuXFokhz4tYbntR1frHlq12o82PPqbZq32oz10a/ajDY9ew1w7
7Ud72Y9q+Fukl3bajwp29bzIRHoRX/ajCqNYEzvwsgrE7EXn39ZO+9GGR889
dG/2ow2PXtPNc+1HNf2S9Fz7UcFQ99sKYT+qcA2/iyW69HHOpEMjZ4ZuePSa
zuo71ow1NHNCRZb96EU7x5Q19HP2ow2PbjlIUnn70aWnsx9tePQcujp49Nzw
6Lnh0WtZqe8X9qOC3W5y21x9v7AfFTxOOd/vbL4vGjzfDx79Zb0ZejzfDx79
TZfn+w1tnv1ow6PX8ua59qNa7jLe9Hq+X9iPrrXIflRhLH6fWLC2TR+dwveD
R2/qhw6pv1ansB/tmFCfcW21ifyYIkfFiTt1Lb9JKm8/ujR/9qMNj55D+weP
nhsePTdEcS3j1S9pP6plPeNNE6hf0n50rWb2owqz8bt+SfvRFsn2ohW0H20R
KLVNqO9Y39J+tHnSbB/u65e0H106QvvRZlmzzWS8aQr1ixO55ICu9YuVsaT7
9qMNj17bVbXvWAVfNIfat+1HL9pD7Rv6Q/vRhke33WW8aRG1D5x4ckc2Zmfo
EuHRc8Oj54ZHt21mvOkU1QeGLPmha/U1zSI8euUUdd9+1PSLGx49Nzx6bnj0
3PDo1Tvf+V699JDfwVnbd/5D31jzveCuz5A99SH7Te9Y872av9/W16F9rPn+
wKO/aSA3Hb7pIM33Bx69jguea77X8SH/oY1cnmu+X2uv+V5hT2tiPd/0km07
2J5rvj/w6HUcUd+xGi/zvcKk/B7qM98nyHvoKc33Bx7dcSb/oa0U2rvM9/Le
umYqajpLePR84NHzgUevY1H1S5jvdUzKf+gv9UuY79fqbb5XWJbf9QuYcMlc
b7pM8/2BR69jl/qO9TzM9wrj8rt+CfN9gt7DfO9YhgcevSFcb/rNDnnWL5Ht
ij0mNPP9gUfPBx49H3j0Ov5V+45V/0XfqX1pvr/oPLUvzffyirvWvjTfX3Sf
2pfme+eIbWze0ICm+f6wQOTj5OcYmvGmCVXfNt/L++5afeDTJd033x949KEV
feDR84FHzwcePR949Dr2fsdLjZ5NfsfLi460xkstG/vtDTFeKlzN7zVeXrSl
NV4ufanx8oFHr2O1+oyXF73pUp/x8qI7DfUZLyfmJT/w6I7l+Q8d6lLeeKmo
BNepvPHygUfPCosrabzUsrivt+dFp6p9Yby86FW1D5y6ZLjWvjBeXvSr2hfG
S0VHrIvhHFrWMF5OSFZ+4NGpGfkPbav60nip6ArX6kvjpaItXKsvjZemef3A
o2eF45U0Xj7w6KXWfPvleL/etLDVL6Xu5D80sdUvly5Wv/zAo1OL8h8a2aW8
fjm5lRvTeulll36p8L6S+qXUq/yHflZ9oV8qisS1+kK/VFTJmtTeDakeutqK
NnHt99QvP/Do1Ln8h9a2nnvpbT23wgPXi+52eW6FCZb03KbBrWgW134Pz61w
wTU0uSXDdbivXIUN/pUVNlhz5Rv4R8YvmUgOvnGDJZ+H/Gzyh5ezaXi/cYPV
2eu3yRF6UJLb339dStRaf9/0vV/XSq12y98lMpGKGyyJE6/iBkseut/EPVFx
g05vym+H5oobLGkPqbjBUp+Xck8o9zACDm3w8yj3WfvtzR064c/2+89yv+mF
f9L9QzNccYN7iRusWaR/YumfiiwrqX8qkooa74zbNMXr93Bs6J8YspXe5Joz
sLmamsPlcHNMLG77Btum02fp3mPP2rn1T3lumQ+Ua3rkrX/Kg8mscLzd+qc8
iMwM7jeN8kf/NJ1yed72EjdYu5v3Kw9LSe9XHoWS3m9omJf3S6mdVw55VytN
3m/omnEKiRss6f2SbfHSOTvriRvc13s/NM8oIsUN7nVpn1F1Df1zovIRN7iX
uMGS2rlBY8QNbu45Uju3EDxxg3uM1GvopLmaxQ3uG10wNNNsHuIG97q001S4
oZ/ejnjiBvcSN1jSc+uEul801ctz68S3bzTDCVYSN7iXuMH9orPmexta6zqp
7CVucC9xg3uiIi7t9doH7Ki+ocEO9TUddu1ke4kb3Evc4H7RZC/lmy67Vvi9
xA3uoc8WN7iXuMG9xA3W7lfzV9xgyUR2ZP6KG2TeEtXRNNzmbyzzN9aQJPXh
dPs78zeGttv8FTdI+1Te/BU3uLlTSSH/y/wVN8isplzTf5u/4gaZ204UChP8
Mn/FDe51acLN36ELX+avuME6jXq/MH/FDZb0fmH+xtCMm78Rk5q9Sffa2NEc
tM39dzjBBtPRMSbtG2ibzNHVhkI7TnSN9xuK16GMjEM96P0uNZn3a4qlHMh+
Q1Ib2tYQooaiHOjFhNB2KF47mTp05oSKjGu1XVjtCtnH1NKmxDZJHRPMqKwx
R+6eeqTnbvM3hobd/BXos2+U0Qky7D8SmLPXpWs3f4e2fZu/Amr2EiCzJ1op
htbd/BXQsl807+bv0L0/5q9AlL0EmOwXDbz5O3TwH/NXYMgeengBH3sJ8NhL
IEdpSTU+BVKUTOSOxqdAhze9vPGZy/jMNWSQbYTbyhufAgTKTLyUMz457t80
9cYnx/srqmvo641PjvI3nb3xObT2y/jk4C7rk3aG8cmxzDzNqWl8chSXUVk7
w/hspyeH7XC3Lg7YV9RZjG9XO+8/7UR9vYZWP4xPjs4yh3tuGmocj/tFv298
chy+otzS+OzBzNEHDem+8Tl0/UzMi4epzO3qMwVfdP7GJ8vzftH7G59D849p
e7EQMtcnqTzm2psGABPqYmHYkxaAhrsXTXIvmlNZDev7OVGVTKTovp+dtuRH
ed/PCjfOauEd5KOc7zfRgRDES09wK7jv+3EkvNITQOYtjoFyP3hu+H4M9e80
Br4fQ/srGjF8v16EGMbf6Q46NmfWbs8VibcYqG9U402L4PsxKL/TJPh+ky6B
Z3oxBHOPZLzTKPh+k06B52AxzN70CgyuezGw7sWQWm6W6heGTm6XjHc6Bv3C
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
/Bcl1We+J/+F7CtBKm++J//Fk/wXj+lFum++S5wiKqP6hf8CPD/J6hf+C2bM
/WZFNd8bjJL8F7LBuK9f+C9Khmv9wn9x2VX5L0qqz3w33V/J7PgvJvdC8l90
qtpOxdgp3TpFRFPNN0VoQ0AbStYhwG1KY6bdl/XVckJuv2sf/8Uk2bPMkOFa
+/gvZMMJUnnzPfkvJnewZYl033xHlBboD5Ks+vgvHssXGa7Vx3/xIBoqqT7+
i8cyR4ZrvztpPggPRO98x8uJ4kG/kOR3vJQ6o1yNl2peDsl5g5bQNLhf42Xz
XzyWUzJcP55rvGz+i8dyS6rPeLH8vpId8l90jo7G3KKDSFJ548UyTSpvvFi2
SfeNF4AGLMDVPv6Lx/JObr9rXxgvpXa5r338F49A4kBLkaTyxottgVTeeLFN
TKrXTj3TUHL0FklWffwXj+2EDNfq4794BJiUVB//xWPbIcO13/kvHo4urMjf
fqleSvLbL6Xe+b36xbY1SSkf2xcZrrf69IttjVRevzBQTc7tx3ZHuq9fKN6B
1iPJqo//4rEtkuFaffwXj4NrSfXxXzw2QjJc+53/4jGBAo1Ikt/nljrpfj23
TtmuU3nP/fBfPKVelvRc2zIZrv3Of/F8+C8e2zYZrsN95X74L55SN0vXKX3T
7P+Q6XTw1TfRoAh++eqbJX/83Vc1eJ0i1pBrdbBMHzo/yn+3pldUYOmbH8cJ
kjGs9M0Xy3bpmyW337+f+OPYQab73y4rSYcrfbO6WzvPKYe+ibYFFm9pZ2k8
PsvzjlqsE/kNMqZvcsPtNwt4nThxrq3G+HVsdsfEta2zdcyS51+daG6UJH3z
45hEPgcM6rm1Q34cn14gUfrmx3GK9NzaMUp6bvJp0DehkA6LufpqJfws+ubH
MYxUX60oJdVXK8Vn0Tc/jmmk8jXTSipfM+jj+Ea6/2GioG/WtKjvd06ni76J
JgdZrO9H3zR9nneU6fL96JtjZF30zRdb+/L96Jvodtz3/eibH8dIMlz7fvTN
G9VK3/w4bpLPAfF6bvh+FMsL7qUwfhxLyTzYmXUw2fHyRS2KG7TYYZvPk9J1
nxQe66SKipNyJg8V8zqU4TFUmHGoIeJAzONAeeNAhOJAMeKEwMZxvcVxccQx
LfWUD8vXExPluxz0P47N5HNAzcvv+sUBfMDOy8FaFj/39YuDcslwrV8ccC/b
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
tL+3v8Wyv8Wyv323Z39vfxsv4LK/fYEu/s7+Fsv+9t3O/Z39baLSl/3tS4iq
vP3tu+0rb38bNrhlf4tlf/seC5Szv8Wyv31XPb/b374Eqe7b32rXKWl/+x4j
XP93dBifuLW671dn5bK/fR3dourtbxH2twj72/cYcpR3/dzWsZhkWE1u0UGi
7bxrI99R/u1v42W9OYI7N2PnbOtcXCf31HBMd/R/czI1V0tzcBzOicHgNfah
Y6I71vXEdk6sSvuw2zd5fHFj+26b5rHhjc0jXjpi3fsl23qof9L+9lfqn7S/
fbsjSP2T9rfxPuckz2synA4qb2f/cQrY3wYNcVNnd6roTsl8UilPKlr9c1N4
dqrMk+JyUiB2yr9Orad/bmo3/TOpzyZ1mP7pFFx7UsG0d72p+5sCvinPm1r8
UIIPZXActEdTfDZZWoOOTjDYUOY19VpTjTWl16HiGqqmpiZqCqBD3TMUNE31
cihahuLE+zVVyKUGiINGaShvQ1cbInqgnQONa4hVQ4oaunMgNwPJaAhCh/qf
EP0JNe+Q7hOKPaHMJwT5hATfEMkOtevQsg7hOqFXE5rToSgd8nFCNSbkoF37
xyU/Lu3jij6u4esKbNdXu5iOa2hcHO1KOC6AMaEf0/cxRV8TaZsijwlxTHDH
dJbHFLLatHNMMjGmh5XrvRX2nyTrv3UynXC+8iMI3jqZduJSI9RjnRyvwZpk
gU3+00H0HdzQTpBjHLVOTtTJsk7msk7msk7msk7msk7msk4O+mlZJ3NZJ3NZ
J3NZJ3NZJ4dtdFknc1knc1knc1knc1knc1knc1knc1knc1knq/UlrZO5rJO5
rJMZ1sn2pmRYJzOskxnWyQzrZIZ1MsM6mWGdnGicmOSiTRbWoJsOhjpOU+vk
oMLCOpk313HnQD25LSdXg/653IbNeXa4rAbD3tjBxhQdrMjEeHbs14npGV/x
8QEe30BaJzvKKNM6mWmdzLROZlonM62TmdbJQbvlJJ9uMskGZZ5gWevksMum
dfK7fShnnUypz1dKof2V3k9q5pVS7X6l95PC9XsK835SdJa6WnJbJxuNl1LA
VJ6YJLVTioqKb1XOOpkooodsu0krKiM2qZ0oKksd9rt1MlHZmU0lrZOJEqzU
5JKoYoZtN1E7rERlUGq0ctbJBLVdCVo6yY8SJK+yK7pvnUwQo1K7XVsnUwh8
sSslqT4hupXXxn3rZArlq0nk2jqZQpMq/02SygsNWMklXer7e7FLrqtS411b
J5NpvezQvzle0PL3i4Yzf/cyf+szkzV/9zJ/9zJ/J3puTVLgJvlrsFwHMZ5g
B/N30JvL/K3hQwIbL/O3MuuQoZz5W5lnSGQny/ytYUfiil3mbw1DEgZ7mb+V
uYQUO7vM368j44fs6EDvF+ZvDWfS+4X5+3WQKn9QqTFJ45sEtsHUJ8jd/B32
5zB/iwmd9H4xuX2ak725cA9H5nCdNMb8YE8HA3Big08MUZq/jZr9zqJNamea
v1+zi/Lm77BTp/nbJPlNNlPMtKR2pvlbzLAlzd9iaCW1U0rxMuO4Nn+LiZT0
3G3+bqmRysyjnPlbywLpuajd66O5b/5uFLtroyQts5Br83ejsirWsyTVh2ql
8hq5b/5ukPeaPK7N3w3qWPmPklQeZGFtId5lXnofUrbQsDIzuTZ/N9d3+Ud/
cqJVK/4e+tn4rGWPrPH5yOxYcTjKH5T0Mj5recwB9zfoojpXucNCvozPR+av
Mm8pZ3zWskqm343PWmbJcN/4fGQyKnOYa+OzmEHyoriLCYPUTplMymymvPE5
LOlhfHbyhiZBKuYBUjtlLChzm9+Nz5MroznKm3uqOT8ai+WZ/nluGp8P5vAy
0ylnfNb2QXouxun6WO4bnw/G5fVgQi6znmvjsxCypPow35a5z+/G54P51Wkw
Lequjc8H82nloUpSeRRQ60GdUuZB18bnA+JWZkLXxucj1LLiuz456Pvix9lk
fb+PT1HmROV9v2G1X77fSbrR5FVV2O++XyFryO13368QLWS67/t9MP+UebJk
+H7Nol/bMum5GFGKr8fvvt8HM8ckQaztm/RcjBOdC7NzGDUXYK+9xY6YpPog
+iv/lvu+3weivTZj177fB/K78nQlqTxE8/pAGpfZ1LXv94G0LfOpa9/vA4pZ
eJsnJ6tAzcokq19+LA3FU+R3/VKRkTlJIWvRcV+//EBGrR+IpTLHutYvFalH
qg9Cpcy0ftcvPxAatJV0OHGtX06O5D6DV9bpIJUXEV9mXdf65UdEeJl3XeuX
HxHTxcO0yWpfRfqQ2+/aVxE2ZLqvfb8iNcscXDK0ryJPSOVF9JWZ2LX2HdtU
mYtda9+viK/Km5Zk1VfaWkn1VeRCjpK7/oiYKXOya/UdX9oqDz8Zrv3+n4iF
Misv0QNfu/KJIhBWIeqk7Mqx2JVjsSvHYleOxa4ci125zNPqK7vyjVpZk0S+
SWEbXN1B7x0c10EzJ/gi9VVH+bErx2JXjsWuHItdORa7cpnF/X3ZlWM1GoRd
ORa7cix25VjsymVG93ePXHrNOsKuHItdORa7cpnblf/gGuvsHezKsdiVyxyv
3A9MHrtynVL9/gNzwK4ci12Zll7yj9guduUy3y/RQPr5RAUtduVY7Mqx2JVj
sSvHYleOxa5c5n/1hH7uKEp25VgxJMlNNtAgkA4WPUFkqZ8bbcOuHItdORa7
cix25XIz+LvJWaifL8d/c383p/PhMB5Ot+bSaY6N5k44XAGDfWxMVGNdDrZj
Yqk7RvbEhE4M3YkZO7FHd852lKn+YVf+Sv3DrvyV+oddueLO/F00Gkn/5JCp
NylJg8VOUHnqn2a7YVeOxa4ci1253C3Ky2k5WWPYlWOxK5c7Rjlcf4tdubQj
v+PUWOzKsdiVWYdKiqlf7MrlvinJrjzoqsWuXLxmm/R+7Mrl7vF3Mm6vZvFh
V57kGmsPWdUBEcsQPNlw2JVjsSuX20g5OVQXu3JpfX6Xi2CxK8diV2b1Kglr
vdiVy81Ukl15WIYWu3Ll6UtSO9mVCzepHGbUxa48yceaxHOxKxdLst8xWC52
5crr5z4Gx8WuHItdudxbrnELLHblyQ602JVjsSuX+0s5iPfFrlxasN8hwhe7
cix2ZVbAkpDKi1253GUl2ZWL3TlJ9bErV15B9yE3FruySUGqj1258g8mqTy7
cix25XK7uU7l2ZXL/eZaJOBiV654sz85UZO1S4oSt06Go3GEI1aEI0WErbvc
d+qxTsaKjjJPfz8k8k3G0iC5DqY/QbbWyVjZKMT0d9bJYJmKYFEqN6G/s04O
uxXNO4ImHEGDLXei8tbJyQ5FI4mgSZS7UTnrZDjxlvXD79bJcOKLcFJj9S1p
nQwnnnJPlrRjTdR9WDkizLAIIzjCiIowEsqt6e8NCajHkvonJtlEkzY1mPaA
bqyTw/rFrhzBrlzVKG+djJjcv/rn5srpHBr653KiNhddc1Qd7qHhDGgs8cGI
DvZI/3Ss+T3LNurU+7Erf6X3Y1cud62/s04Omxm7csRJPhQ5ZH6HZME6OdnA
2JWrW5SzTga7cgS7cnWX362Twa5c3ee+dTLYlctN7No6GezKw7YWe1KLd4rq
Tsl8Uh9PKlPtvKkHO9XeITueFF6dCqpTH50UQ5MyRjsnFYl18qaasE7GpSBv
quemDG6K3ENFO9SbTeHYlIWHGtA6+aI2OxRiQ13luU2JdKlVmqKjKSkO9YN1
8gVdPxDxVN9AgA/k9UIDlR/ImXXyQoqsky9IhPsdan9CtvOGsrTLr03abRpr
E0Srsq26HRVplvRucvq7SRLTZGsNgj9gOfM312HnY1eOZFeuaaK8+ZvsyjFZ
7diVaxopZ/4mu3Iku3JNL7+bv8muXNPNffM32ZW/Mlybv8muPOjwZFf+Su/H
rlzTNUjvx64cwzrIrhzJrlzTWvkmRzF/M062PnblmvbKmb8Zkyve+8XkVjs5
l4Y72/uxKzeXTHNMNBa1bRnDipjsyl+pnezKFe6gvPk72QTZlWvZUS4OSbn5
m+zK9TZ+N3+TXbmWJ/fN32RXrvAJ1+ZvsitP9sJkV67lLEjPZVeuLBF+N3+T
Xbk+gvvmb7Ir1/Ln2vxNduXiE92k+tiVK0zD7+ZvsivbdV6TINmVK3yjJLty
LadBKs+uXGEdrs3fZFeu8A7X5m+yKxe+5CeHtaCsKA9Z43MzVdYyHeSPvzM+
sT2WlDGbXblJYZuspzpPuZM1kl25lnvljM/NrhybXblGq9+Nz82uXNuC+8bn
ZleuMBTXJ2M9u/KwdO6YzN6dabszZJ/M15MBWjvZlWu7US4Oef5k8NVOduW4
GW6Nz1cmWO2MyWmgnXE4vnJsyv2vM1t2RkrPZVeOV+ZEz51MhsbnK+Of594M
e57bGe/Yld+Z2dQ3mdKMz1dGMfWdxflm5jI+X5mplGdXfmdwUv4EVbwyGLnf
GYVOhp+HXbnZVcuausnONNIZQk7mj8mA0RkmOuNDZ2o4SQ8mg4G1a00mgMPw
P4z64b7v92KeD9e+34vpvJnEm9m7GbkP0/YwVXsuu/KLydn3ezEee+5lGPbc
ZvzN8en1GtyMsocp1vd7Maqq72yql5nU93sxcyo/TJm+32Wm9P1eDI7uN6Mi
u3K8GPma8a4Z6Jo57jDCDaNaM5w1M9lhHNMvL2audH+YsML1YaZiV34zKDXz
0WE00i8v5h/1nUPGZdA5zDfsym/mF+Uv04ryqV9eTCPuN/PHYeJ4MU40A0Qz
NxxGBu17MRdAmJ9D02UAOMh9duU3cv0g0rXvIsC174WUPjYq7Wsk8QthW/Vd
xKv6LsJUfS8kpvuNjGRXfiP9wrXfGwl3kGbf0o3YaQRIIxQ6Er8j1jsivCO0
O7L6RExPhG1HgHakY0cEdsRdR8B15NqJSJuIqI786QiZjkDpiJCO5DgRGhNp
0B759ni3B7o9x8cjPJ7R9jy2J7A9eMczN56t9jS1h+h4fsbT0h6S4/kYj8Tx
NBwPwbUUtyWzLXZt2WrLUVty2gJzLCuj2bcG25pea1Kt2bRGcjSNOTH3ybJP
bn2S6hPQOdnMDt87aO9ovROdHWZW6F4xe6U7K9isGD3TzwyemRU9wtfpuZ+Z
4+48pPejd3//83707hQAV9L70btzneS+K4cs/5AYpvfLkw2b3p0Ct0p6P3p3
CqQq6f3o3SnQqaT369bSu1MA0vc/HDICfdawkgvIKamd9O4USLNSAMy62brp
3SlAZU3yIAElJbWT3p0CQar3tJPefXuT3p0CLVYKoFgpsGFNdnABCSU9l96d
AgVKei69Ozn4l04mPbe/Hr07OdBXcoyv5LguqT56d3I411dXH737joKjlHLo
ruSordGhPL17RgvHZ0nlTxAph2NJ9+ndyeEHXvybw0aRHFola/5yPJWs+cuB
JIzT35u/HDQl099NMtYmNW+yuUNKY/5yQJRM5c1fDgLhocqbvwz0JVM585dh
vcJHl9/NXwZuYaVnVi33zd+ZZfTuZDAWbmr2mb8MqyW9H707GThLej96dzI0
lvR+9O5k8CvZSS4O+aihxbBW0vvRu5NBrMJcvR+9OxmmhL+e1cL7xeQI8X4x
HK7erzmgcmII+synnfTuMgcEqZ307mRAKKmd9O6Mk/SL4l5SO+ndSeGu1Uw7
6d13daN3J4V2JUV1JQWypOfSu5OCV9Jz6d1J4SrpufRunUt67qRMN39vSmXz
l4KwTuq3dVKIrZMya50UPOukcnmtyseYFJPiwPyNS6Ws/FDQmr+XotL8jUv1
5X5TFh0qk7xQsw7J75DTDl3rEKEONTmhFeNqaVNimyRa9WsV4hyZZ+nrLkzl
jM+kd6eFv2T43fi0YNcu5Y/p3XfXonenBfErjU8Lz5psFhaIktpJ704Te6UJ
WVI76d1pwqxJRmeAl9ROencamLWLaie9++6q9O7O2dRc2h271bq2Z/rnufTu
1PCSnkvvTg+8narAaxend1d4tmvjM+ndfibVR+9WnFRfnwaOkTPp3RXOXZLe
XeavyHtqSHp3hXm7Nj6T3l3h3q6Nz6R3F8/QJycLSWmHm6zvt+ndFRauvO+3
6d1ei9zK+X7fl/O777d90gon97vvt+nd99RD764wc9e+36Z3F4v5Jj2X3l1h
6Mr5fpveXauX332/ngyb3n1PWfTuClt37fvtnBjatnn2Gqw+eneZCd0/pzV6
d4W5u/b9Nr27zIiR91Qnc7zwd9e+nwzhwuBd+34yRqOVfsjql4feXebIIB/l
9MtD765V3O/65SwOZbZ0/5wy6d0pk6Cw+pL0bsOOVB+92zAk1den1dAvMkEJ
wy9J726f15xqZaQRnu9av8g8IkzftX6RiUIaxk1W+zDmC9/3u/ZhYn+dnpf2
YQ4X1l+S3p2YnO8pG4OxcH/X2newhR0Lkphchf1/JabKklXfOa0nxkRwANfq
w4wHFuBafYcLITFpgQe49jtmJfCAhc3se548rGYl80Puh3w2+Unye57cEM9o
nX7eLLbOk1+59yTFKdmkxYfcMMVArpPlyBJnuSElEfMJiqdVuTpPWo7IrVyd
J7eI5GWZItPvdZ60bJERb23IeXKLRAR/WFh5vZ/zZI2uh/R+zpNbZAS4hL8L
7xcne5PzpGWS7CRph7w+vZ/zpGWU9H7Ok5tlfFleSe/nPGm5Jb1fa3kxuQC8
X3OJ5sSitu2w1zLtdJ4sOIfyQlGcZJflnNTOkyzWSWJZ5kntdJ607JPa2Vqo
8+S2gqxtpq7tS5b0XOfJchsE6bnOk7YR0nOdJ+ews5wnr9brPFlwE9eP5zpP
2oZI9TlP2pZI9bX2fJyOy3my4CklnSfLbRGk8s6TBVtxnco7TxZ8xXW47zxZ
PFw/OazRteo9ZI3PcJ4sd0iQP/7O+Ix1sok5T9pOyU7ed5IqGJ/hPGm7Jbdy
xmfoYtswmX43PsN5stwv7h/rgvNkwWxcG5/hPDnZzsJ50rZOaqfzZPEmK2d8
hvNkuXWUMz7DedJxgNRO50nHA1I72/rhPNm5PzsnS2MA2mfTZ0jP9M9znScd
N0jPdZ6cQ3g4T15ri/NkwYVcG5/hPOm4QqrPedLxhVRfW22cJwte5Nr4DOfJ
k9L7WnfiplZV3nnypL5ZJ4XKOqkV1qFgrhDqpvxoaHRD/xpC1FCNE/I/oW4d
ytEu4Xa9HRdOtsmpVddWEc5Rc5ag/tTnT3y/dJ7c6TxZPNoP6bnOk+V2C9Jz
nScd70jPdZ4c5SmdJ681zHmyYFSufb/MwWK177x1+bMG+37pPHmtas6TBbty
7ful82S5/SKv9S2dJwuO5dr3S+fJgmW59v3SebJ4xR+y+mU7T5b7MMhHOf2y
nSdrNfW7fjnKZLkZ3dcv29ZXMC/X+mU7TzoGk+pznnQsJtXXVkXnyYKFudYv
23myY6fG+ridJwsu5lq/bOfJgo251i/bebLEJqt9j/Nkwcn8rn2P8+S1ci7t
e5wnt0zgyzGeVP5YQ2XKBT9zrX2P82THFG8ZHcHQvvLjPLllrhqr6pYJCTzN
tfpkTAFTc62+j/PkxrgOruba75icwdWWrAXf/ehkL5A+5iH3Jp8kP0H++Lva
j4p1XPnaj6gxkzx2naQ+BolyyUduPyo3sXK1H9Xn8HstrQ9EI/ic3x9GDvvR
tTrbjx5IIbC6JbumdtqP6jNbVJZ22o8eEbUFv9NO+xF1i9RO+9EsSst+VKcN
v6d22o8ekQkvq7j96OSgXic3WGPROnagbRm9B4H7+SdUmgXT6cbvQjfa+MMy
87LC248emjd4YEn7ETWRVJ/9iNpIqq+t+fYjieRLbvXZjySAf1n9l/1IYvdc
Q46w7EcStJcM9+1HxVP8ycmOWtPOZuD7hf2oYInK+35hP6Lekls53+9sJtRe
ki3WfkQNJiPeXgufXiLuBHMsaT+SIJv0XPuRhNclfb+wH0lQTXqu/Uii6Xx5
SexHEkgn2OTKwQJ37FbbklsHoKaT6mtvi/1I4uUEsyxpP5IwOa9XJuxHEiHn
JbUI+5GExrlOavp1Ugai+nqyKWOaEqGh1Q1h7dD/Dm3tELkORRoj5jHhv7xE
VxWLu8QsiXJJ9dmPJL4tqV/SfnS9TfYjCWoTDLSk/ahjeMcrlfYjCWNzDclH
2o8kfk0w0ZL2I4lZyWrfth9JtFpS+7b96Hq/7EcSoiZYaUn7kUSmeb1k234k
QWle8pFtP2psi8SiCXb6lY/9SALQHG+bBJ9kuFbfYz+SoDPBUkvajyTUJMO1
32UKA09dsh9/53sVf8h06Kv5XmEqQX6Ur/le26ZyNd8lcCSfNYfGxYxE8rmY
78xKZMTbq2i+S4SYYLElzXcJCknPNd8lHCwZnmu+SxBIeq75LtHf24tpvkvg
l2C2azD/HaPZPqPW9RezF6m+9oaa7xLfJVju4iVV3nwfrykNE1x3vUhq7PRg
u67DffNdojey+iXMdwnayEc5/RLmu0Rq5F7XSSEh2tuLa75LdJZgwCXNd+Y8
Un3mO/Meqb72BpvvEoQl2PC63C8dqz9e4zDfJex6kfaE+S7xVoIVlzTf61i2
s6nEmiqnKTcaCtZQh5d3ek0oRqwxwS3mSFJ5812iKFJ587050RrDJrFTgikv
3u+qb5vv7Q2XYIkM1+rb5rsESQnGXNJ8l9CIDNd+l9gXnHml9IEP+R0vzKrk
d7xI9FOyxgtzK5l+r/FynFlLgp23F994kTgnwaNLGi/MtaT6jBfmW1J9HQ1g
vEg4k+DUaziCGtNxowaW8SIBzIvMaRkvErkkuHVJ40WiFbLaF8aLxCmiEZb7
2jfRCcaLBCcJnr1ELShvvEwUQxgvEo68SKbCeGmso0QhCb69hkq3KQcnGuJA
RRsKNWRVEm+Q7hsvzfUrQQYZrv2+jRcJLSraovqFuZz89osEE6IxlvvVLzc6
Q79IBJFg4UvUhvL6ZaI4ln6RmOFFtrX0y8F+go2X1C/M9WTVd6JBJDYgY13S
LgkKSPf1S3MfH2rppuBsyDR4+Vdu/cI9QH6fe6JPFkJ+MtaQhC3E+qT7nnu4
lhcCfDJc+z0891CeLwT0ZLgO95VDGJ/g6NVX64tHL9ms9ullvnj0ko8sel88
eskfSdO+ePSSfyRd+OLRq5VLPdHZElI9Xzx6yU7y3cnXOklLJ284SQCmUztb
DJ9P4dFLOiMVHr2kOVF49JqtBvnanQUw/d3e/m4//m5LAll49NotLeaFR7d7
Kv9s5Z9H+Udy3MKjlwzlPqncZyv3eZT7YSQrPHrJ9PvP9vvvcv833D9RSoVH
Lxmu//PdYunnWJ2NQj8XHr2kfi48enAzkfq58Og1K/RzRGfj0c+FRy/ZSe47
+WAnKTrJS2Yx6SyL+rnw6MGdRernwqPXaUQ/Fx7d6UT5rZ8Lj15SPxcevaR+
Ljx6Sf08OesnB2+c3Jz6eXIMTk4v/Ty5iSaXi37uHBg53BEd69u+x7YZ9Vm9
9/Bem89aBHK7Mjr7pP5JEIBy35GdjPQkLZtDhf5JoQvl5iP1T3KtwqOX1D/J
tAmPXlL/JBMBPHpJ/ZNUGHj0kvqno+PSFguPHgsePWrZ/iE7q6b322yD5cEh
vd+2B5engvR+hUcP7knS++1OQj1KpPcrPHpJ71d49Fjw6MGtSXq/wqMHNyfp
/Trqb8vxDY8eCx496njyIbXzEaNQlhZSOx9nfXj0ktpZePRAlERq5zNGc+0s
PHogMiq5tbPw6HGjEguPHgiHSn6084M7CR49uGlJz/2wVcGjB/ct6bmFR48J
PoJHjxsFWXj0QJRT8vHcwqMH9y+pvh++Tnj0QERDqu+A++DRA6HMVxYePRDD
kMoXHj0QvpRM5QuPHohbSppz8Oi1S9Y6WTObTIce62T1JFnrZLWIrHWyai5p
nYRHd3rw99ZJePTg5iY7idtJ7jSHrc46KxZjWSdjWSdjWSdjWSfh0UuG8tZJ
ePSSj/LWSXj0kqGcdRIeveSjnHUSHp030+/WSXj0kuH+iXpd1kl49Fjw6HWK
0j+xOnub/gnrJDx6cOuT+iesk/DoJTsbr/4J6yQ8eslO1nySOo7SpX/COlnh
AqT+CeskPHpJ/RPWSXj0kvonrJPw6CX1T1gn4+as1z+To3hyX+qfznWWw6XU
2JeOxWkfStuuWqc9uop1MtI6GWmdrDAH0vuldbKNawUMJb1fWicL6FnSOgmP
XtL7pXUSHr2k9+so57ROwqPHgkePBY9eUju3dRIePQAPSe3c1kl49BCOQWrn
tk62MxEePQD0SO3c1kl49LhR2Ns6CY8eAHNf+Vgn4dFDuAfpuY91Eh49hIGQ
nvtYJzs4Ex49btT3Y52ERw9Ar6/8WCfh0QMgi1TfTSmvvklVbp28qaitk68U
tcpP6lNj5qa2tE6+UvO53ynfTuqwAgKRTT3d1KpN0dhUeE2p1hRih6prqEUa
Ot8Q3IY6NmSuIWIHijXGkg4d7hDNDvXr0LYTQjYhIe16bxduuyyPa3BcIW1S
bxPyMdWO6a1NTcekM6aEGNU0zxbVn4D0fhhvvtL7YXipY5+/M3/h0VnPlDd/
4dFLer8Y47j3C/M3Iarr+Kic+QuPXtL7QaIuePSS3q9RBxCCCx491smBXGaQ
w6XX2MeOxWwfevsujk3T/E0R+cKUSO0UOT5BAPDoJbVT5K5wJlI7GxUhonLB
o8eCRw8BtKTniowS+Ep6rsgZ4VGk54rwmKBqePS4KAyedwGkJc1fePQQXkWq
j4dOuBWpvkZz8JzMYIFHD2FZpPIH9QGPHgIhS5q/8OghoLGk+QuPLs3iD9nZ
6pNzxfiERy9Z4xMevay3S3njEx49hImRj/LG53HWCFgjxXjrYQFoJY1PeHRR
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
iz62xF7bmrmomYQOA5CTBEeP44ffm4HFDvBiCNHOy4yhnc0ccZkFGoHfCPdG
nB+kOBX0hTD23EHqalIfJtYgQAdB6bmNMLwItkaIqW+QVqG+iwRS30XAqK8R
Ihe5oPwgAEL5iXw/EeY3Utr9jiQ+kbNxIwM7cq0jtDqSqSOFOnLnRNxMBEdH
KrRHvz3m7cE+nufxiLbnsD1z7Sk7Hq7x3LRnJP3eHoaxuNuJx3I9lt9jsT2W
0WvxastOW0DawtAa/9HUR4NsTas1mdYsjkYwJ90+SWrnnMjmhNInhrPTz04Z
s4PkWWF6JvZI75HXI6Z7op9E9n+e6zyZfciNZg9znkwHxK80Ph3MAtz5VYsD
VYA/k+prFjLnyXEaO4gEmDSp/GErs7GXVN55Mm2oJd13nkwbWh2z6/vZCKAt
NtmpLDtl4Ek95/tZKEtyBa+hgOa6cZ7UOe9eG8oj389CQLt1fyCf4fpAimJC
6zp0pF3Q7eo7LqMxcbWq3F/rHG1nyeuhdZro+/kgX+n76YgAL399bS8wPvLW
2XutTX8Q4+yHRw+CVN55MuHRSyrvPJnw6CXdd55MePRSV6pf4NGhDJPcRqV+
gUcPj32PVufJJg1rZe2y2zlPJjw6evhllKvPeXJGPTx6eA1Sfc6TQ8LfwQ/w
6JPruXNzDJvedp5sW212smt4dHTzrvULPHrNvmofPPrMxoRHD91JhvvaB48+
QRkJjx66nVTeeTLh0dHWu9Y+ePTJVdUxwgmPHj4fWfUdlsCER0dr71p98Ojo
7V2rDx6dehhkuPY7PDqa+1WrUe1HBQf5kN+2FVxyk0+SH6tX7UcFG1G+9qPq
feVrPyp1VPnajw6o08dVLnHE2Y8qnEG5zUduP7qrpf3I8CUZEdZhUbQfbXj0
2PDope5qp/2oRscmtdN+VGESyod22o9MD1I77UdDVtGLxKzmpoxpRGpnszza
jzY8emx49FK3Pdd+ZPoN50nJgzmfGIK2aeTZRc6/9NxjXFlWqA2PXtJzzYAN
jx6m9WsXgkcP05xUn/1okmV0kBI8elgOSOXtRxsyvKTy9qMNQVrSffvRhkwr
s0F9v7Af1aze5LY4+35hPyp4nHK+X9iPyuygnO8X9qNe3O+uaz+ybJGMVPaj
LVJBegTXvl/Yjwr+u0nPtR9tHpHa1T3XfnR3efvRkDO2UYyli/nDte/HUlCn
A/XZj+a04MQ9sVptO+4z/7ZT3+AyO0VYfknl7UdbT5ZU3n604dFLum8/2vDo
Var6Je1HlnVyO9XoF3j0sNzn67RjP7L85xgJSytwfyjBHHXXobyIgRKo75ya
Mjq0KdqVpz770VHlbrBd9pJlP+ocUcOymvaj9hlueHTmoiDdtx9tePQ6vVX7
4NHnNLfh0cM2Rob72rftRx0EuOHRw3ZHKm8/2vDo0lS41j549MmZ2FiVDY8e
tk2y6jvssRseXRoL1+qDR5fOwrX64NGZu4IM136HR5fWYtUhq+Z7wVkf8jvf
bd/k49Rb873grsrVfLe9k1u5mu+HTKgPca9Ts/nuGEAyQpvvDzy6dBquP9pp
vld3bNJzzfcKb1IuPNd8v6d0833IV9vovcz3Bx69pOdqenX3nlxA97S/zPcT
k9k+ohe7r/k+QaPw6OE4Qypvvj/w6CWVN98fePSS7pvvDzx6zf7qlzDfHZPI
6pcw32uY+F2/jLZivjcZbTsBLiux+f6IEJQ+ZNFy1Ge+j9YT5rvjGKk+832S
OYX5/rCgy/2eObnghgU5zPeODXhoSMygQbpvvj9GcGlf1b4031sbq7Awv2sf
PPqLbdl87+DeQwXZkLGGRFxW5owJ2VA+jsnOfO/cqI1Je+DRwzGUrPrg0Zln
Xatvm+8PPLr0J67VB4/OjBtkuPY7PLo0KKu00RovtTxs8jteyvwb5KNcjRfH
47cWa7wc0uJ2Fr1YqY2XDzy6tCqL9qs+42W04WW8OG6T6jNeJtnXMl4+8Ojh
WD45Ay8L9jJeTgyJZAsljZcPPLo0LSWNl1oWN1ntO1p6hcv5XfvCeLls28ZL
B39XGN3Cwq288TKs3GG8VHida+0L46Vz6DZ28UNDCGoGWfWl8XJSFndKzk4R
0tDRhkZ1qJa0MF8Jjy49jGu/w6NLD7NYKb79Qr0Zq4W0MX6vfimzfLzZxvXL
CYaXTmZhIVdevwwr+dIvFdbnOpXXLyencGM5pZtZ2MyrvtAvzW5eZn/X6gv9
Um6AIN3XLxX+t5J7IMhYk7q7IdPS0izs6d/nlhshhk2dO8F1PbfCA0t6boUJ
ug73PbfcDkGGa7+H51a44F9Zbokgw3W4r1yFDf6VFTZYY/8b+EfGL5lICb5x
gyWfh/xs8ifJX9apb9xg9cry9xH+PtLfx/b38fj7+Pj7+PH38buaBKEHH4kr
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
v52wc+y3uEHeCu3GEzeobHtR532LG1S+vajzvsUNKuPu2n1xg8q4h8/Ms1+q
+/7z2an9UuZx/Wq/fD5HtV/KbB7fz5P90s4baUGua79c4gbrM2a88zkL49kv
7+fNflGVD9ip8eyXS9zg+xkUN8irEwfDeTClJkZE+lGi2u2XS9xgfU5rfu9n
1fzSfnk/s/aLKoFAWCNfMNZL3OD7ORY3yMuk3fzEDSpXX9R+ucQNnhoGl7jB
81kvtSbRpd14ywKWGyBOqYmBUh9otwnVkj6VaLp2X9yg8vaBjTzr8mEntS7l
Logve7EuqiQCpY084LTrFjf4sqGwLqopLmlarlN/63KLGyyq3brc4gYPOyv1
LNGl3XjiBivIR3/rcosbXLe4wXWLG5QGlmi6dn950C1ucNindLFEl/Z6brkp
XC/9PbfcFa5Tu+eWmphounZf3OAqt8UvLTUy0XSd2vUr98UvLfdFYO/xD80f
dCmm9fgvil77jxjw+C+K/vP3j/+iaPq7x39RdO8/YsPjvyj64+9O0a4Jlp6P
X4sXSy3H8l+UuAGjs/wXX/Fjy7Ep/0WJI3yDRyzprM3yX3zElPJf8NZq/wnX
P+n6n/Up/0VRv+8x1KJ+3xF3wu8r/0V9tf2+8l/4iu8/YlH6feW/qI9PdLHF
SXIZadTvK/9FiVF+3xGnOhu1/Bcf8ar8F0X9vvJfFPX7yn9RXMU8y3+By+w/
4tmpqdm19g5Wau4/4tvJdeociOOjbbHu6DQt67SYt5Q+5794qNKz/Bc7+C9K
HPTcDcL+FQ9BDvNflLjouUdszNVZuruDB6LFyWwQIs/dUgz5L3bwX5S4abwj
dgqZ4L/4iKEX0zf/RU3WeA26zX+xj7jKf7FVfyya+pf/Ygf/xQ7+i6Lay3+x
g/+ivsq1P/kvfKUV67Q/X7HY/uS/KCki9Lc/+S++4rP9yX9RTDG6COgkX41W
tPWzP/kvvmJ3Z0OH/XnE8LA/+S+kibq2P/kvSsoxz7Q/+S++Yrz9yX9RYr15
pv35ivn2J/9FCdfRxcpb/F9j9DXPUQfS/uS/2MF/UdQ80/7kvyjquUeNsD/5
L0qtiMaibvXC/uS/+Kgb6/gs2lZ0/nnusj/5L77qif3Jf/FRV7b9yX9Rh8h4
2/7kv3jVGv6LrepoUfuT/2IH/8UO/oui2m/7k/+ipNN6f/wXpFXF4Udt8v74
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
f5fQkPJXX2itywszY11uS11xq+5bl4oUQLf71qU89PsUqamX7tq63JAOKv51
7y98jXW5ZXy/cDYykkut1W5dbhm056M3sDe3jMZSd7Vbl1sG3tTgG5m21F/X
1uW+2vbB5PCB0TG/H5/AF1YnzK88TFuZOdfm1x/jA79TnhhU/zS/HxGbpUYX
FeFX6rRr82ubzMD4VJ2RRJd245Ulf1Ozi6bx/okEKHW7KA9z1SVJNF27/x+P
VKndwRvy6N1lv/53vCNFN+9r6d0Z9O6MAzNUenep7cYpvbv8AT9fry29O4Pe
nXHgiUrvLnXf35feXX6w+xvN9iZtTTDdON3bGbe9c3p3xmTfHdijLfiT3p1B
786gd2ccWKRLcjS9O4PenS9c0i0Hk96dBz6J3l3mCO3/xNbQu8ssEbzX1ofe
fbzZQe/OoHdnHDimsD707vKj+Lu0PhPlR+/OOPBNaX3o3eUf1P8Um57sxEnC
nODYDqLZ1ofeXVFj+m3rQ+/OoHfnCw91WR96dx64KHp3mVu0/1gfeneZXUK0
ot9H7y5vWUcx+n0Hdir8Pnp3+Tn1T79vsi0PPNWpGd61oE9to8Gk9/vWSY7v
pIWD+eL3vTm4nVt5ciImVrpjYE9sVcfMtC/9/TaZZ2eDxoHJwnKC3l1xNvql
eR4YrTRPenfFs7s/8Fprigg0GA8MoKB3lzlKu9yYoHeXWaoovbvi4jfqufTu
Mlvpl5574LuUZgh69wvnRe8+xc2C3l1mLtdXC7dkohf+K4xH737hwOjdZQ7T
LqU96N1HSB7YsKB3l5lMe+pP7y5zWVF6d5nNXKd2enf58f6hdX7rQ4RuUbbO
bx6YMuc36d3l5/R3zm9GTnTu9ncDa+b8Jr27/PH6nyLxk0U8ydMT1N7Bb85v
0rszY+DRnN+kd2fSu/OFTXN+k96dB0aN3l3mQO3Ob9K7yyxYlN5d8QI3OlHH
ft+BY3N+k95dcQX6O78nK/rAtjm/Se+uuC/9nN88sG4H1KKTjZzfF+7N+U16
dx74N3p3mS21O79J7y7zZVF6d8WZXehkbzd8nPOb9O6KQ9PP+X3h5ZzfpHdX
3oX7Azt3MN4bROtgeA12SmMqnNw285zY2FeW9Fx6dy1Hop5L7/7A2jm/Se9+
Ye7o3TlFCZPeXWZY185v0rs/sHjOb9K7X5g8eneZa7U7v0nvPsrtwOklvbvM
uNqd36R3lzm3KL27zLqund+kd1dcwQ9a+7Oj4Es622jD9tmfi6hXcS36258n
Sz8G3s/+XPTuiiPUz/5cMfB/B2ylk+DszxcW0P5cNME8MIE0lTI7a7c/F8m6
zM9FSSYVt3ihgybQMIP25/JFrbhG/bzSF4bQ/lzeXOXduD/whGuK0jS4m/25
6N1l7tZufy56d5m9i9K7K39no55L7y6zuH45pcQ8l97t6UXtz/WWYOiSA/Zn
Y05NLvDo2sbyb6D4GnrO/vxAIjUEkP35QoTYn+tNRZ6U1k7htD/fFC/78xMq
36Hh9ueEAu7XdTem6TFxjSlhVNJWwQ4rnSM5P33r5/1teneC3yo6xYQalM/7
2/Tu3PTu+ky49v42vbviXC/Uc+nd9TnxcO9v07s/cJPe36Z3v/CT9O5T5HQm
v+nd5V4oSu/+wFV6f5ve/cJX0rvLDaHd++tad8dY1jbJ+UaWe0K797fp3eWm
KErvLneFa+9v07sr7vdCa8yL3l2z9zKsy0Uk+8BqWpfLq3hhNundU/R1Xma5
P1xbl4ve/YHltC4XvfuF6aR3l5tEu3W56N3HeDhwnhe9u9wn2q3LRe+emvfj
QxqZttwpRa+ONaB3f+BBze+md79woVh2uV20m99N7x6j5oEVvend5Y7Rbn43
vbvcMkXp3eWecW1+HQMx8KTFPhJd2o33Q6Qqt01Rene5b1wb74feXewm0XTt
/j96d7lxQvTyI09WfNvPiWYuumVnlTy54sCmljxZ7h9/X/JkxU/e32wu8uSK
A7Na8mS5i/xdyZMVX3590WXigPBMcmQnUWw2KfLkihi41g00jDy5gjy54sC4
XmrUkCfXgXUlT5Z7SvuPjxR5stxUISvN7yNPniy1IE+uOPCw4feRJyteVP/0
+zIHPadhZNPvI09WvLx+y+/LgZk9oGidrL79vgM/u/0+8uQ6cLTkyXKjab/9
PvJkudOKkicrPv9CB92n4WzDPMmTFb+vX5rngbtV4T3Ik5WX6f7A4J5aQQ2+
us3zxeBrbK6DkWCek2P12iTnG+m55Mly8+lH1YwDs0s0CPLkioHdJU+WOzA+
zCnIk+UWLEqe/MD0hvHIky9sL3lSAeSiy3jkyeMEGXjfIE8qSFw09SdPKjD8
UPKkwsFFUzt5suJPf9Danxkni7L2Z8bACNufSZ6seGX97c+MHDSnhhu2P9Mn
r/Iv9LM/MwaO+ID1NYiC/ZkxMMX2Z5In14EtJk+WG1S7/ZnkyXKHFiVPVr7H
hQ7aVMMe259Jnqx8EP3szyRPFjfWz/5M8uQHLtn+TJLYC59MUij3q3b7M3G2
csMW9YWp/N6Neq6dV25a/ezPPHDM9meSJ1cOPDN5sty52o/w5LmrsWXIkx84
5/PPeORJhRVR45EnFUzcr3NuYKCTPKnAYVH7M8mTChbuUJAQ1U6eVGBwS1+4
0Xp/izz5gZn2/hZ5svJ19PP+FnmypCf9vL/lyH7gqb2/RZ584arJk+WW1u79
vZXMvb9Fnqx86o16Lnmy3Nf65VS+9VzypLdV1Ptb5EmF1PYr7K5T8dL7W+TJ
D3x2TKU+45EnS73Q7v0t8mS5x117f2sfH/fo3P2t9P7WgX71/tYLraR9oDs6
xXe/oYUTOjMu+HF1tsvsmPjGVDAqWYv255M/R6tf0VEC2CLJk5WnvlHjkSfX
i9xrXT7IssYjT36QUK3LBwlTf/LkF5FR/0Es3CcmqW2k1mWQ2C7y5PogVA1i
VCM9md8HiWhpN78XOcf8Psgp+pMnvwge+pMnv0gN2smTJ3P/k6ld470Zz8Z7
M32N98kM1U6ePJmCn0yydO3+ZBZ1hsrz9IlQnwjqiRSeiNqJWJ0I0o78PJGE
EzE3kWUTuTWRVB0BdSJzJoJlIkQmYqMjLU4EwXjox2Penu7j+R1PbHtQjwey
PYftoXs9L+NhGEv8WLrH8twW42PJHIvfWNTGwtWWqWNxGYvGWBjaMnAOy2iu
rXEeja01rdZoXol3JMORvEYSagnmcObhfMOJmoOcL+p84frLdE52zo6PEzsQ
35nPSP0fl4ZAi6LGw4+2QAcvrSh+BLge1R8/AkhfdOmPHwGWL5ra8aPNgSgd
+9oHlXJz2BWt98fxJl1bP++P46ro1s/74yAqmu57f+fXxvnIsYHiR5uDQziK
a++PIR/c1EY9Fz8C1G0VPRc/Aqz9XV38CEA26rn4EeDrLbyl34bx8COA1J+3
xKAXgKVR4+FHAKP3G8ST+8Raje23ZXbvj4FGmExR/AgQ8xYuUxQ/ApCM1rpQ
HAOwMXr1bgr3rQvF6rPL8CNAwujSvsf4xCeGHwH4RY2HH53dSjANALyo8fAj
wLr7DWoiCAVAXFR//AjQ7Y4udXxiYsdH1yUEoqEdJ4XhWyYiJuSvT9NxJY5L
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
h4HOH9SVhhxvt0nmQKEOpGZDSK6BpBtos4by2gN91FA/V4dAe3/lWUYnxbVT
Ok+K2KQadWrNSUXo0PvdLu6YEL8JFevQqBNK0qET7RK/zjeuXS55TGtxxVeU
mU/ibL35CZf/tdsIp4oLJyhxy33rcjmBJX5pty4NDj+DHfdTWeRR46V1KUs4
ary0LmWhRo2X1qUsxKj+UprhuqP6SzWB645qFxI0MuS4xeC6ozW/2xaD646m
dvMrixqars2vLFqo/ml+ZWlC9U/zK0sQql1GB1z3SxjlQmu8H59euO5oujZe
WSZQ7Wm8sihcYBMSTdfulyZ/ESeDdfiRJ0u//0EfebKtxkXbjVjyZAZ5ssRQ
f1/yZNlJ/F3Jk2V98HclT2aQJ0ts9XclT5Zd8PrjnlwTXX7pX/Jk2Q2vP+7L
kxwxQSvt3Gq3JnkygzxZYrH7txxw8mSJydp/xEaSJ0tcDu5Rv488WXbK64/b
NPw+8mSJ1/4u/T7y5Me9mhM17/eRJ8vOef1xvy6/b1CiyJOvWzYPKN4kl3XQ
3+X3kSdLnNd++33kyRLrg3vXPMmTH3dvTFS/eZIny+56/XEHp3kOihV58nUT
kyczyJOlNri/zbPBb2NNMvllnuTJUid8rMJzj9s5PLdRs4I8+bqj98EqHozI
xo47GACTe9k5WSc2Nr8fx3i/tcYjT8J1L2rKQZ6E6150GY88Cdf9oeRJuO6o
/uRJuO5Fl/7kSbjuRVM7ebLsbz9o7c8kT37c8PZnkidLPfJ39meSJz/u+pws
jkt/+zPJkx93vv2ZsQa17NKv3fxxwBon6bGDUe3PJE+WOqbd/kzyZKllRcmT
Zae/0A4fiMkyMU/yZNnx9ZvwAvszMwdVzTwn7IA8Wd3ctz+TPFl/pn1ADuzP
JE+WOoiJ2p9vGIP9meRJ3K5ohzeQJ+vx7tufSZ6s6Wi3P5M8Werll2lPmESS
J2vaiRqPPFk/Q3s2Ru4a7JPOOe9cgOvIkvNPf/IkoOmLmlqUPAkw+qKuFiVP
lr37Ruv9veEcJzuo3t8iT5afRb8J9/D+VuSg4F36dRgIebKW233vb5Ena/m1
DziF97fIk6UmE368vzesxPtb5EnSyfUJNyFP1mt03/tb5Ml6rdq9v0WeLLX7
K2xN2MoiTwKaRY1HngQYixqPPAkI9qKmFyVPAnBF9SdPAma9YjCeRkeebxtA
1Ysa/9BNnvyE1ViXTZ4krV2fcBtbs7aj+9Zlkydre2q3Lps8WWYB1y2E4ugV
t7rQKdHVpZ5ySoBMqYWG7Lcu2xsDkHmVGWEgtwbaqCFycqAlGqLAumzyZKeQ
RJ4Qc/Lk8/bGdDkmkFE1W2U5rGw+Gb31zO8iT+ZFngS0iOpPngSciOpPngSA
iGonTwI0vKR1LLTGu8mTAAfRdG28mzwJMPBi1ihKngTwh6Zr93/IkwD5hFc9
/Kj8Wjf68KNP2FXxo/osJPrj74oflb/0+hOelZM9eOlf/Kj8qdef8K3iR/V5
0a/4UcWX7AMWXHSS7zsp4qIz40dlftF+e1n4UZlhQniYeeJHn3CxmOxG88SP
yr97/QknS/PMHNRO85wwM/yoPnvuL/PEj+ozmB9wndlMgR+V+SeEq3nuCVsL
z8WP7P5vOBt+VJ9T99Nz8SPATKjn4kcAlz7K4oTFBX5Un+FEjYcf1WdZezZW
+zIeftS5aGPLGB7EHOUfUTfwI0BBVwACQrXjR4B9hOvV+0v86BO+d7JSL4fT
+0v86BPe5/1l5KCsXvEN+8OPin247/0lflTsRPuAI52PAdkSPyp//3V9wwi9
v8SPfK2uT3ghfgQABfVc/AiQCeq5+BGAkutV8idMMfEjwCGo8fAjACCo8fAj
wB4Xs1xR/AggB6o/fgRo44rBGhxb7cjYADIuZruHLvzoE0ZpXRZ+5Ot9fcIr
8SNAEeh237osPx3QQ1HrsvCjMXqcMM2FHwFYQI2HHwFKQI2HHwFAuJgNi/pC
AS5A9bejABJczIlF8SPAAldMjePxiU34qAR/tOa38SOJ+mhqN7/tEyLh/mKG
LIofSZRH9cePJMBfzJNF8aOGPIyGmopOAR4X5bg6xqQ8quqoBPMpBs+WqHb8
SGL3BbYt0XTt/o0fSbAWTvuc94qTuf6E157s8wsTrvNecTTXn/DbOu8l/uhX
5/0Ny3XeSyxyv857Lfs6RVuYT+Mwe2ZU13cb1cJznXeJrh+U5nDe3/Bf510C
Kuq5zrtEUtRznXcJoh8jXjjvEjlR4znvEjJR4znvEixR4znvEiRR/Z13CY+o
/s57+2RGl2bmLXq3r9d5/4Q5x1Q8H/TqrvDd4c/Ou0Q9tCsIW5d03iXaFbUu
6byPUfOEUafzLsEN7QpyOZXMjOe8S0RDjee8SyRDp5KL/s67hLCL+bmonSax
62KGjtf3PeHdEqzQQaRthNgcpNJBAm1kTvNbzrsEp0ta6UIHqa2R08xvOe8v
8pTz/kHsMb9BHtnOuwQftDPjjfdmWhtvO++fjEzjTWbZ5by3q3hMfHEi0zti
9Qr7pbp3hMhEUkykQkcOHA/0eGrHE9qeyeMhGw9Ue4SOR6M9DG0Efy2QY6kb
S1hbpo6FZCwQbRE4Gm1rmK1RvRLsSIgtsR2JoyWA5njvlynnRMwvjTfcX8A+
WvNjWJUOrN38GCTBM7o2P4Y4acML1d9+EdiO6m+/CFBHtdsvAs4v6ccLrfEI
+GAfXRuPYAsGMlHt9otA7Qs8ZKLp2n0flAm9mvQHac8LfdZFAPMlDVp7rYtA
5AvMpOtaF4HFl3TphepvXQQAo/pbF4G8qHbrIjD3kna90BovrYvAWTRdGy+t
i8DXixuiqHURqIqma/eXdRFYeknzXujzXIGgF1hM1/VcgZ0XmMxEtXuuQMwL
fGai6dr99FwBkRd4zUTTdWrXT0DixX1hVz/+i6L5g657ot3/pLU8/ouiP5Jb
H/9FzSr83eO/SNvgTxrM478oevu7x39RbyX0f/wXRTtdZg2azaX/479I2+lP
Os0BdZpk2z6l56PGFlP+i6J4Y/kvisIMLP9FWYEZEcp/kcF/Uavt95X/Im3n
P2k84feV/6Ko31f+i7Tt/6T75KD0+H3lv0jH4k860PL7porEfHUmTShP8Z4B
wWtwgiP8+X3lv8jgvyjq95X/ok6DeZb/ominH8WgCJln+S/ScUU7PSnNc+VU
u+ivY6ctlf8iOfjR3SC25ln+i+Sg/xhx+C+Sw91X1nNPGlR4bvkv3q/wSY8q
/0VyTKNd82ZFYxcPZmRjyR1Mj/w6Y+P1EY9tb3SqlrW4WvgvihrvYlLgv8jg
v0iOU1T/my7Of5EcoEWX/uW/SI7Mop7JfyGM+Aet/Vkrh04260UJsD9rpKL2
J/9F0U4fy0GNuvS3P/kvinZ6mf3Jf/HhftFpZ3GKSg04Y4NmHKWETTzsT/4L
bkDX9if/Rfr8o53OFoNqZZ5pf/JfZLzpbvYn/8WHO08aXNqf/BfJUVDU/uS/
SAb/6zUu8l8kA/6V2BHaaXX2J//FKw2cdLtlf/JfJAN3UfuT/yIZqovan/wX
eYIEJm2P/yIZiFHjbfuT/yIZeIvan/wXyWB7JUMsOj6LthWdf/pf9if/RTKM
FrU/+S+E9d9ovT/+C1kIjUZ2MdZ6f/wX3/RD74//4iNNRaclhvfHf8H96r73
x3/BHav9GIf5HsP747/IeNMcvT/+i1d6O+mP6f3xX3Dnuu/98V9w72r3/vgv
3uCOSaPkv0gGFdR4y/vjv+AO1u798V9wCxfd3h//BTexdu+P/4K7uH2v0TF9
+fmWMRBc0oMutNM8rQv/xZFm46R/hnXhv+Budt+68F9wP2u3LvwXJ9jlpJHy
XyTFEzVemiv/BXe1duvCf8FtXXRZF/4Lbmzt1oX/gju76LYu/Bfc2kWvaNND
TMj1hG5OiFyHWh0X/Lg622V2TM1tsmxTxsvy5tPSW9T8+C+SInAlQR/VzvJK
cL/A1Cy0xuO/AHft2nj8F+CvE9WexuO/AIudaLp2n/+COz2k+z78qAS9G334
EUENvRijih8RvKQHh/7Fjwg+X5RC/IggQ3uK6086cfEjAsVXu4pOM45T3HBA
ghu86RjH+GbxIwwa9RLwI4wUNc+c9OUYNEXzxI8wqD/pzWmemVPVq7XATnvG
jzAA1DzxIx/yD9j/OLdmk/BfpA/rnzTq8Fz86GibMenV+JEPF+q5+JEPEOq5
+JEPyyc4LTpNm/8iHXjUePiRg4saDz9yIA92XjpYx2ee7asYHpQZ5x8XFP9F
2uhFvVr+C2lkN1rvL2PSyQ8K5sVZ6P0lfuSFoUu/nCpsrbV3Gjp+ZMHQ7b73
x38h/CJep+Qcbj+A9u+5+JEB0an61lYC74//AnHf++O/0Kzd++O/ENbhuoML
8aPkv/DniRoPP0r+C+Ef2r0//gthIEXxo+S/KKo/fpT8F5n8F6aRqParZWv8
iBp+fdP6rQv/xbGWSP9F033rwn8B5kq7deG/8DNdW5cOsjywAfwXliFR4+FH
yX8hPEW7deG/EKZSFD+C647qjx/Bdb+ErxTFj+C6X8JYiuJHA2eQ/BeWPdHt
vvnxXwh30W5+/BfCXoriR3DdUf19auC6X8JhiuJHcN0vYTFF8aPkv/B6E13a
jcd/MS7kUV1HRZhPs7CZh/JfCJ9x7T7/hfAZzLLOO7PNH7iHg3b7nPcSU/Wv
8774L4qu9a2qOFa4aJgI533xXwjPcb/O++K/EK4TJ/hgmLiwnWDV81znffFf
2Mb5sfrxXxT1XOd98V/UNvdc533xX9j2rrfnZgcPO++L/8KxSNR4zvvivyhq
POd98V/k4r+o46O/8774Lxwn16m/817HK0/M3+jOCdedlbPWJZ33MrOvt6rl
WEHLjNmwHOm+dUnnffFfOLbarQv/hTCleIOoD6xHOu91vBM1nvO++C+EM2m3
LvwXwpqKOu9w3VH9nXe47pdwp6LOO1z3S9hTvLl5Azey+C98ThLd7psf/4Xw
KO3mx38hTKqo8w7XHdXfeYfrfgmfKuq8w3W/hFEVdd4BqqM1Hv+Fz5dr4/Ff
+Jwlqt15B/h9TWrqpLhNaPKY+IRbBWv4s1/KfN1wLM9+qc9jHmv5B57Fftn8
F8K03K/9svkvhG1pr/2y+S8m2P6FeeG/8LlN1Hj2y+a/EOalfRnPftn8FwlA
FtXffgH0iupvvwBYRbXbL53DeeBnapkXWvNjOQNvqN38WCx89l2bH40PDOJC
9bdfAFOi+tsvACFR7fYLQMap4DmVLqeS5FQWnMp9UwFuKjxNBaWpxDMVOgaR
exCvBzl5EFVPynidpsksnwzqyTTuTN5al4sht+iKyRSbTKzJ6JmI+4lMn8jv
iQSeSNuJ2JyIrIl4msiZ8aiPBXwsxWOJHcvcWL7GgjIa0mggI8kOh7uwz0TT
tfs+tMLffilAG/R5LqCaC7t1Xc8FIHNhv4lq91yAKxe2nGi6dj89FxDIhW0n
mq5Tu34AJy7hcrxej75Z9FffXKb9B17p0TeJAX79o2/WKoT+j75ZtGGYctDv
Z7Xu9q7F9Qem6dE3iRP59b5FwzeVvknMyAEHnuCLEWJQsVelbxaly5S+WW/J
PEvfLNqwUDHo/PM27/b+mWcObFSaZ+mbTld84aRK3yTmuL92F40zz9I3i674
BE2O8YG+uWyDP/BU4bmlb67jjaRvFvXc0jeLem7pm8Qp7ctzS98smt/kJvpm
UeOVvlnUeKVvEsO05+oaYNG1KfNgtE+O38RmT0zc2DpHxyza/24uFvrmktj0
0B+vlr65HA+0YbpOVYU5hXd7a0O/gfHy/uibH29uNLxXeH/0TeGUXewvtHt/
9E1iZL5Go6BvLscVbbgw74+++XqP6ZtFPTe9P/pmiaOem94ffZN46tr7o2+W
VBINS2a85f3RN0uMNd7y/uibxFrX3h99cwmwRvXf3h99cwl8Lur90TeL5sdn
IwD4Ait0XV+4NOtSO+k63vSgbxZN960LfbPE6tBuXeibxGzX1oW++cKx0TeJ
4YkaL60LfVP4qXbrQt8Uhlp0WRf6prBU7daFvik8tei2LvRNYaofLIigb4L3
XWjNj74J7le7+dE3qQOuzY++CRZ4ofqn+dE3hbu6Nj/6prDXU4rxEvbaKdbR
UB7ZkACrU2WiU7ryhCpf7SK92hV1tQnw6k/zRR1JNF27T98UHssIW+cdu/sD
o3eqpwy3vTsKI64/MHt13pO++YnSiIbfc96Tvll0u1/nPembRVecoPYxDq+k
by7s9w+cX3iu8570zdIGouH+PNd5T/pm7U7Pdd45sC5ql+vtuc47xw9qPOed
w6ZoGs9551C5qGuul/Gcdw4JVH/nneMA1d95T/rmYqA/vtnFYC4KptaFvlm0
1oW+eaJkkr5ZNN23LvTNxeCKpnbrQt8UhhxvEi4DJGo8553hsKh1oW8KV9Zu
XeibwpaLOu8MYKj+zjuD1SWcuajzzlB0CWuOF/OFwQSt+S3nnaHjAp+t3fzo
m9Rc1+ZH3wSzvVD9nXcKN6q/807RRbU77xTNC1z3Qms8+ib12bXx6JvU6US1
O+8UkWsgkAZKZVJgJ5REOHWIlnr2C8ERffYLAfBEU31gL+0Xghe63a/9QjBC
l/baLwSZk6y9CBCo8ewXjL9oGs9+wZgvZgDXy3j2C8aG6m+/YECo/vaLDz+q
3X7x4X1hPX3Q0JoffRM8unbzo28yO7g2P/omGPWF6m+/ODCo/vaLjYpqt19s
lAsc+0JrPBIqc4Zr4+HwzBuJardfDHQxeySart2nbw402cCc6r7QZ102fdOf
a6912fRN5hPXtS6bvukxC9Xfumz6pnB110t/6wLX/RK2XtS6bPomc0yiS7vx
6JvC2YtaF7jul7D2otYFrjuart3HCbvi1iDCDfLZIIQNktIgDg2yy2TET+b4
ZOhOZtREnE1k1kTAjOdxNMKL2SjRdJ3a9QPceQmH51x9+Pv2Z3/gak9VtNGi
746ijOsPnO3D35mn8htlGQ1zW/yd2cr9h7/bHtof/l50xSSrjdO36B0dtem5
xd9tq4V6bnaUZ/F328399Nzi77af9uW5xd+ZyVzv/IJH4O+260KNV/zd9tWe
xiv+zrzmehmv+LttvlD9i78zv7lO/Yu/M8fl5IpPzNVDb+8Pfy/asMHWBX8/
Ua6BvztW7lsX/N0x025d8HfmPtfWBX+v4xgNT2y8tC74u2Oq3brg78yErq0L
/u44L1T/ZV3wd+kLrq0L/i6NwbV1wd8PXHLg78yPiW73zQ9/l+6g3fzwd2kP
RdP88HdpENrND3+XDlF0mR/+Li2i6DY//J2ZM9Gl3Xj4u3SJomk8/F3aRNFl
PPy9IdKuhraYENFL+kRHOz/7JfF3n8eFPvsl8fd6WjTMdLpf+yXxd59R7bVf
En9nfnVd+yXx95p1NFy18eyXxN99hrWn8eyXxN+lb7jexrNfEn+XzqE99bdf
BCRdzLyJardfEn8/8NmJvzMHJ7rdNz/8XRqIdvPD36WDFLVfEn+XHqLd/PB3
aSJF7ReO3ku6SFH7haMPrfHwd+Zn18bD35mjE9Vuv3C0XMzUiaZr9+2AgRwd
OHFsb6HPuiz8HRvUXuuy8Hfmbte1LgxbF3a5UP2tC0MNqr91YahAtVsXCvuF
7S60xsPfmdFdGw9/Z1bPLmwfXWg+urB6dKHsLpid0YWp43oLMuOI2HwX3Mwu
pLmiC1V2wcqMLgwZXQCxCyFq91wfqi6Y1oXTMrpAWVxvYS78nZk/B5F1kB0H
kWci268BdL+a+LMGvB0A2wGm7eyHjAZ8zQZwXQ3MuhuYNBr4NBvQdDUQaDRw
aB5wpQ/cvPPO7dBAkbuBEqOBGLMBFlcDE0YDGeYABjZwXTQwXjbg3WqguGhg
uRwAtwYgiwYsywEGO5ieLwx+OO/cHA081MBC5ue8S+NpoJtoYJwcAJoGQokG
WskGUFkNPBINVJIDCNKAFtEAGDlAEwOs0Ins0Yny2QnwqxPHoxPNcxK6OyE5
OoE5J1F4EmM7gTE64TEnsXAS6Q608CkLQNzsxIdJaOiEhYxOGMhOBFgdQB8d
cJ8T2N4B1hPAnR2YvTqgOToAOifQuANlowNrcwJYJ2CzA+QmAG8C6zpwznjO
+5UnYMy6pPP+CUSyLum8fwMl3HfejwN2Oe9Fx8HSDpTjyMhxGLTBewzkOYbo
Mby2gWwMajmGqzHUjALegvYI5jkC8Ah8w8jngMeUc0B/3x+3V6Lb/ef9cYNp
f94fd5jr5/1Jdypa74+bLFH96/1Jg3K99K/3Jx3KdWrf5uf9ca8lurQbz/uT
JlU0jef9SZcquozn/Umbcu2+9ydt6pem98dtl+jSXs9N7086VVHPTe9PWlVR
z03vT3qVa/e9P+lVv3R5f9KsXKd2/RhYL2lWcVHLFvo7T2lX2p95Sr9yvfSv
eUrDcp3al/HMUzqWa/fNUzrWL03zlJblOrXrl+YpLSsu7spE03VqT/f1l54V
l/QsQmjEPzR/0HX/2baHe9202fhhnIp//j7D32Xef7b5lC3J0YJvf5c//m7F
/ec4THmTNVW/x0t8x/e4xJQ/+ZUB0CmC2NmCJ9l0gjbGmNZC9y32/IlARhnf
n4hjlK32iTh2PP2+35W//xzXKbsSo937fU8kqOPs951jPeVZcqqZj/f7ju+x
zynfsvy+J1Tlm/2YXdblCXFA/b6c4rAn+X6C2Nq5cPt9j2v89hoEcYd5ns/N
lIuJqbY+3vk7vp+jNeVk0jwfEyfaWZpdZuYxjaHm+Ziuim7zfEw66Oqg8gHH
6SDzu8EhYz6DXbYmPPdRvdDOCs0ub5Oe+4jaqOc+IivquY9IWXRPreX8glFW
wD06mEuDddE58Dm5DBND2rFlx8eXYxsoevtJFSCP6v980lD9n0/THfKzUO3P
p+C2PTmL7M/nA3HfX/ZwqgiO1ekWXWF/Ph8S/YeNTLkf+/P5unU0xt1Zts1+
phyQ/VkB2mhn43aZoLA/K+Aa7aLFBxRigivb6WV/VkD17RhJLrA/X/Y25Yfs
z+fr29Eid2cBNzuc8kT2Z0UCo50t3GWL0v6siFjUPNP+rEhUdHWyw4A2dfLD
3aClMWy3yyDZnxWRiHZ2cna5JPuzIvNQz132Z0XEoZ677M+KYLt9DorumHJL
xtv2Z0VqFbU/K2IKNd62PyvC6fb5EGsQg0E82HGN2ZOTi5WfmARt/mm/7c+K
sLmxvfv+iiFTDsr7e5ato3zuztpusWXKRXl/5VlHO7u7y0iF91ceZnS77/2V
ZxddnaQyYFudtHI32GyMeNRlqby/8vChnU2eXb7K+ytPF+q56f2Vhwn13PT+
yiN0+0wWXTHlr4y3vL/yfBT1/soDgRpveX/lMbh9Votu768s86j+2/srS/rt
c1v0isFQb+zL/H6jRkwsPaXLc9W6lGUU7ez67PJd1qUshOh237qUZQ5d2q1L
WdJun/GiGVP+y3hpXcpidDPLarcuZam5hd+4ti5lUbmZbxeq/7IuZZFA9V/W
pSwGqPZtXbr2hPwsdCD1B7q8IbBzoFEHgrKhDNdAgDWU1O4Q7ZhU5En57NTB
nJSbTt1Y7WKPCY3KcbmPab639LDO+UT1Vjfe7YtZ7KdoGq8k7BsbKrqM90OE
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
6vm7/4Djv+D4HyiVhJw=
    "],
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allvars", "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["x", "2"], ",", 
     SubscriptBox["x", "3"], ",", 
     SubscriptBox["x", "4"], ",", 
     SubscriptBox["z", "1"], ",", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"], ",", 
     SubscriptBox["z", "2"], ",", 
     SubscriptBox[
      OverscriptBox["z", "_"], "2"]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mbeoffset", "=", "48"}], ";"}]}], "Input",
 InitializationGroup->True,
 CellLabel->"In[14]:=",ExpressionUUID->"6aa69e89-79df-47c3-bd6a-43613b37fe48"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mb", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Times", "@@", 
       RowBox[{"(", 
        SuperscriptBox["allvars", "#"], ")"}]}], ")"}], "&"}], "/@", 
    "mbe"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mbmap", "=", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{"mb", ",", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"mbeoffset", "+", "1"}], ",", 
       RowBox[{
        RowBox[{"Length", "[", "mb", "]"}], "+", "mbeoffset"}]}], "]"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mbrev", "=", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{
     RowBox[{"Values", "[", "mbmap", "]"}], ",", 
     RowBox[{"Keys", "[", "mbmap", "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellLabel->"In[17]:=",ExpressionUUID->"bb565efa-42d6-4be9-92e6-e3f8c80c767e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Dealing with monomials", "Subsubsection",
 InitializationGroup->
  True,ExpressionUUID->"433c828a-0b3d-4517-a118-92c00fb255e9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "pack", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pack", "[", 
   RowBox[{
    RowBox[{"f_", "?", "NumericQ"}], ",", "args__"}], "]"}], ":=", 
  RowBox[{"f", " ", 
   RowBox[{"pack", "[", "args", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pack", "[", 
    RowBox[{"args__", ",", 
     RowBox[{"\[Sigma]", ":", 
      RowBox[{
       SubscriptBox["\[Sigma]r", "__"], "|", 
       SubscriptBox["\[Sigma]i", "__"]}]}]}], "]"}], ":=", 
   RowBox[{"\[Sigma]", " ", 
    RowBox[{"pack", "[", "args", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pack", "[", "args__", "]"}], ":=", 
   RowBox[{
    SubscriptBox["br", 
     RowBox[{"Times", "[", "args", "]"}]], "+", 
    RowBox[{"I", " ", 
     SubscriptBox["bi", 
      RowBox[{"Times", "[", "args", "]"}]]}]}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellLabel->"In[20]:=",ExpressionUUID->"4e56be59-eb2f-4deb-98cd-a2fda6516f4f"],

Cell[BoxData[
 RowBox[{
  OverscriptBox[
   OverscriptBox["z_", "_"], "_"], ":=", "z"}]], "Input",
 InitializationGroup->True,
 CellLabel->"In[24]:=",ExpressionUUID->"4330540d-71a3-41fb-b120-0daa2e22a6aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"conj", "[", "expr_", "]"}], ":=", 
  RowBox[{"expr", "/.", 
   RowBox[{"z", "\[Rule]", 
    OverscriptBox["z", "_"]}]}]}]], "Input",
 InitializationGroup->True,
 CellLabel->"In[25]:=",ExpressionUUID->"831e8066-1c19-4cb7-abd4-c627a261f3d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"br", "/:", 
   SubscriptBox["br", "x_"], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"idx", "=", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"mbmap", "[", "x", "]"}], ",", 
         RowBox[{"mbmap", "@", 
          RowBox[{"conj", "[", "x", "]"}]}]}], "]"}]}], "}"}], ",", 
     RowBox[{"Tooltip", "[", 
      RowBox[{
       SubscriptBox["X", "idx"], ",", 
       RowBox[{"Re", "@", 
        RowBox[{"mbrev", "[", "idx", "]"}]}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"bi", "/:", 
  SubscriptBox["bi", "x_"], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i1", "=", 
       RowBox[{"mbmap", "[", "x", "]"}]}], ",", 
      RowBox[{"i2", "=", 
       RowBox[{"mbmap", "@", 
        RowBox[{"conj", "[", "x", "]"}]}]}]}], "}"}], ",", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {"0", 
           RowBox[{"i1", "\[Equal]", "i2"}]},
          {
           RowBox[{"Tooltip", "[", 
            RowBox[{
             SubscriptBox["X", "i2"], ",", 
             RowBox[{"Im", "@", 
              RowBox[{"mbrev", "[", "i1", "]"}]}]}], "]"}], 
           RowBox[{"i1", "<", "i2"}]},
          {
           RowBox[{"-", 
            RowBox[{"Tooltip", "[", 
             RowBox[{
              SubscriptBox["X", "i1"], ",", 
              RowBox[{"Im", "@", 
               RowBox[{"mbrev", "[", "i2", "]"}]}]}], "]"}]}], 
           RowBox[{"i2", "<", "i1"}]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], "]"}]}]}], "Input",
 InitializationGroup->True,
 CellLabel->"In[26]:=",ExpressionUUID->"b93dfee4-df7e-4cb0-8480-7c1dac130bb4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"isreal", "[", "mon_", "]"}], ":=", 
   RowBox[{"mon", "===", 
    RowBox[{"conj", "[", "mon", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iscanonical", "[", "mon_", "]"}], ":=", 
  RowBox[{
   RowBox[{"mbmap", "[", "mon", "]"}], "<=", 
   RowBox[{"mbmap", "[", 
    RowBox[{"conj", "[", "mon", "]"}], "]"}]}]}]}], "Input",
 CellLabel->"In[28]:=",ExpressionUUID->"7ccd15c2-7997-c445-b907-0e14b139bd51"]
}, Closed]],

Cell[CellGroupData[{

Cell["Index calculation", "Subsubsection",ExpressionUUID->"065399bf-a2d8-4dba-8b47-f824092d622c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LowerTriangularize", "[", 
   RowBox[{
    RowBox[{"toFull", "[", 
     RowBox[{
      RowBox[{"Range", "[", "10", "]"}], ",", "\"\<LC\>\""}], "]"}], "+", 
    "16"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[354]:=",ExpressionUUID->"5dc848ba-eb1e-4fbd-85ac-580434f02f2f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"17", "0", "0", "0"},
     {"18", "21", "0", "0"},
     {"19", "22", "24", "0"},
     {"20", "23", "25", "26"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[354]//MatrixForm=",ExpressionUUID->"e5e43223-e48f-42c0-b8ce-\
65e19b5f79fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rcToI", "[", 
    RowBox[{
    "dim_", ",", "row_", ",", "col_", ",", "offset_", ",", "\"\<LC\>\""}], 
    "]"}], "/;", 
   RowBox[{"offset", "<=", "col", "<=", "row", "<=", 
    RowBox[{"dim", "+", "offset"}]}]}], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"j", "=", "0"}], 
      RowBox[{"col", "-", "offset", "-", "1"}]], 
     RowBox[{"(", 
      RowBox[{"dim", "-", "j"}], ")"}]}], "+", "row", "-", "col", "+", 
    "offset"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[30]:=",ExpressionUUID->"db9d8441-bec3-4220-9424-1af16a34a24b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "col"}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"col", "-", "offset"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "col", "-", 
     RowBox[{"2", " ", "dim"}], "-", "offset"}], ")"}]}], "+", "offset", "+", 
  "row"}]], "Output",
 CellLabel->"Out[30]=",ExpressionUUID->"c11749ad-3c88-5d4c-95fa-42e7c69992f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"dim", "=", "4"}], ",", 
     RowBox[{"offset", "=", "17"}]}], "}"}], ",", 
   RowBox[{"MatrixForm", "@", 
    RowBox[{"LowerTriangularize", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"rcToI", "[", 
        RowBox[{
        "dim", ",", "row", ",", "col", ",", "offset", ",", "\"\<LC\>\""}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"row", ",", "offset", ",", 
         RowBox[{"dim", "+", "offset", "-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"col", ",", "offset", ",", 
         RowBox[{"dim", "+", "offset", "-", "1"}]}], "}"}]}], "]"}]}]}]}], 
  "]"}]], "Input",
 CellLabel->
  "In[384]:=",ExpressionUUID->"be0ef48c-46bd-41e5-a8b0-c05b46d97a39"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"17", "0", "0", "0"},
     {"18", "21", "0", "0"},
     {"19", "22", "24", "0"},
     {"20", "23", "25", "26"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[384]//MatrixForm=",ExpressionUUID->"3f9b5161-636a-4ac9-a581-\
53f1f7393642"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"UpperTriangularize", "[", 
   RowBox[{
    RowBox[{"toFull", "[", 
     RowBox[{
      RowBox[{"Range", "[", "10", "]"}], ",", "\"\<UC\>\""}], "]"}], "+", 
    "16"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[355]:=",ExpressionUUID->"36df0116-ee48-4895-817c-15e1b30dadca"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"17", "18", "20", "23"},
     {"0", "19", "21", "24"},
     {"0", "0", "22", "25"},
     {"0", "0", "0", "26"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[355]//MatrixForm=",ExpressionUUID->"fb3f779c-917f-4f41-bbda-\
462d22f1838f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rcToI", "[", 
    RowBox[{
    "dim_", ",", "row_", ",", "col_", ",", "offset_", ",", "\"\<UC\>\""}], 
    "]"}], "/;", 
   RowBox[{"offset", "<=", "row", "<=", "col", "<=", 
    RowBox[{"dim", "+", "offset"}]}]}], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"j", "=", "0"}], 
      RowBox[{"col", "-", "offset"}]], "j"}], "+", "row"}], "]"}]}]], "Input",\

 InitializationCell->True,
 CellLabel->"In[31]:=",ExpressionUUID->"7d4386c0-380b-45c3-b2a6-3a5f49053354"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"col", "-", "offset"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "col", "-", "offset"}], ")"}]}], "+", "row"}]], "Output",\

 CellLabel->"Out[31]=",ExpressionUUID->"e336e6f2-c2b3-f944-ab7c-0c40a725d770"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"dim", "=", "4"}], ",", 
     RowBox[{"offset", "=", "17"}]}], "}"}], ",", 
   RowBox[{"MatrixForm", "@", 
    RowBox[{"UpperTriangularize", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"rcToI", "[", 
        RowBox[{
        "dim", ",", "row", ",", "col", ",", "offset", ",", "\"\<UC\>\""}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"row", ",", "offset", ",", 
         RowBox[{"dim", "+", "offset", "-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"col", ",", "offset", ",", 
         RowBox[{"dim", "+", "offset", "-", "1"}]}], "}"}]}], "]"}]}]}]}], 
  "]"}]], "Input",
 CellLabel->
  "In[386]:=",ExpressionUUID->"d2d5c580-346e-408a-b858-39e713323f60"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"17", "18", "20", "23"},
     {"0", "19", "21", "24"},
     {"0", "0", "22", "25"},
     {"0", "0", "0", "26"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[386]//MatrixForm=",ExpressionUUID->"5a5c50ed-5344-41fa-b0f6-\
337e7c6b77a6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Code generation: give a \
Dict{FastKey{BigInt},Tuple{Vector{Int32},Vector{Int16}}}\
\>", "Section",ExpressionUUID->"53cf714f-f1a3-4dbf-b8c2-a0674fa3d4f3"],

Cell[CellGroupData[{

Cell["Derivation", "Subsection",ExpressionUUID->"73e5c409-a556-af48-9dd5-0d67fa8c4eb5"],

Cell["\<\
Derive step-by-step. Start very simple. We take the most simple basis and a \
matrix constraint that contains just one entry to see everything that will \
happen. The SOS certificate is precisely Scherer and Hol\[CloseCurlyQuote]s \
form.\
\>", "Text",ExpressionUUID->"53c070a4-1a98-2946-a39e-1d99b7421ac6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"basis", "=", 
      RowBox[{"{", "1", "}"}]}], ",", 
     RowBox[{"constraint", "=", 
      RowBox[{"(", GridBox[{
         {"0", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "I", " ", 
            SubscriptBox["x", "1"]}], "-", 
           RowBox[{"7", 
            SubsuperscriptBox["z", "2", "2"]}], "+", 
           RowBox[{
            SubscriptBox["z", "1"], 
            SubscriptBox[
             OverscriptBox["z", "_"], "1"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"8", "-", 
              RowBox[{"2", "I"}]}], ")"}], 
            SubsuperscriptBox[
             OverscriptBox["z", "_"], "2", "2"]}]}]},
         {
          RowBox[{
           RowBox[{"3", "I", " ", 
            SubscriptBox["x", "1"]}], "-", 
           RowBox[{"7", 
            SubsuperscriptBox[
             OverscriptBox["z", "_"], "2", "2"]}], "+", 
           RowBox[{
            SubscriptBox["z", "1"], 
            SubscriptBox[
             OverscriptBox["z", "_"], "1"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"8", "+", 
              RowBox[{"2", "I"}]}], ")"}], 
            SubsuperscriptBox["z", "2", "2"]}]}], "0"}
        }], ")"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lb", "=", 
        RowBox[{"Length", "@", "basis"}]}], ",", 
       RowBox[{"dc", "=", 
        RowBox[{"Dimensions", "@", "constraint"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{"Normal", "[", "\[IndentingNewLine]", 
        RowBox[{"Expand", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"einsum", "[", 
            RowBox[{"\"\<i, ij kl, k\>\"", ",", "basis", ",", 
             RowBox[{"Reshape", "[", 
              RowBox[{
               RowBox[{"Array", "[", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["\[Sigma]", "##"], "&"}], ",", 
                 RowBox[{"lb", " ", "dc"}], ",", "0"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"lb", ",", 
                 RowBox[{
                 "dc", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                  ",", "lb", ",", 
                 RowBox[{
                 "dc", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"Thread", "[", 
              RowBox[{"conj", "[", "basis", "]"}], "]"}]}], "]"}], "]"}], ".", 
          RowBox[{"Flatten", "[", "constraint", "]"}]}], "]"}], 
        "\[IndentingNewLine]", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["\[Sigma]", 
          RowBox[{"0", ",", "1"}]], ",", 
         SubscriptBox["\[Sigma]", 
          RowBox[{"1", ",", "0"}]]}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
     "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[38]:=",ExpressionUUID->"1e90f500-066f-3a4d-837d-1cf74b9b065c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "\[ImaginaryI]", " ", 
      SubscriptBox["x", "1"]}], "-", 
     RowBox[{"7", " ", 
      SubsuperscriptBox["z", "2", "2"]}], "+", 
     RowBox[{
      SubscriptBox["z", "1"], " ", 
      SubscriptBox[
       OverscriptBox["z", "_"], "1"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"8", "-", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubsuperscriptBox[
       OverscriptBox["z", "_"], "2", "2"]}]}], ")"}], " ", 
   SubscriptBox["\[Sigma]", 
    RowBox[{"0", ",", "1"}]]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", " ", "\[ImaginaryI]", " ", 
      SubscriptBox["x", "1"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"8", "+", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubsuperscriptBox["z", "2", "2"]}], "+", 
     RowBox[{
      SubscriptBox["z", "1"], " ", 
      SubscriptBox[
       OverscriptBox["z", "_"], "1"]}], "-", 
     RowBox[{"7", " ", 
      SubsuperscriptBox[
       OverscriptBox["z", "_"], "2", "2"]}]}], ")"}], " ", 
   SubscriptBox["\[Sigma]", 
    RowBox[{"1", ",", "0"}]]}]}]], "Output",
 CellLabel->"Out[38]=",ExpressionUUID->"ca92db92-5e4e-8146-8305-10ebcc6e90a9"]
}, Open  ]],

Cell["Now let\[CloseCurlyQuote]s regroup this in terms of the monomials.", \
"Text",ExpressionUUID->"5b56e47e-854b-fc48-a3b3-541aa3e5dce2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KeyMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", 
     RowBox[{"(", 
      SuperscriptBox["allvars", "#"], ")"}]}], "&"}], ",", 
   RowBox[{"Association", "@", 
    RowBox[{"CoefficientRules", "[", 
     RowBox[{"%", ",", "allvars"}], "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[39]:=",ExpressionUUID->"ddcdd6fc-6005-0648-b033-343c42b83085"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    SubscriptBox["x", "1"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "\[ImaginaryI]", " ", 
      SubscriptBox["\[Sigma]", 
       RowBox[{"0", ",", "1"}]]}], "+", 
     RowBox[{"3", " ", "\[ImaginaryI]", " ", 
      SubscriptBox["\[Sigma]", 
       RowBox[{"1", ",", "0"}]]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["z", "1"], " ", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "\[Rule]", 
    RowBox[{
     SubscriptBox["\[Sigma]", 
      RowBox[{"0", ",", "1"}]], "+", 
     SubscriptBox["\[Sigma]", 
      RowBox[{"1", ",", "0"}]]}]}], ",", 
   RowBox[{
    SubsuperscriptBox["z", "2", "2"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "7"}], " ", 
      SubscriptBox["\[Sigma]", 
       RowBox[{"0", ",", "1"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"8", "+", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["\[Sigma]", 
       RowBox[{"1", ",", "0"}]]}]}]}], ",", 
   RowBox[{
    SubsuperscriptBox[
     OverscriptBox["z", "_"], "2", "2"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"8", "-", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["\[Sigma]", 
       RowBox[{"0", ",", "1"}]]}], "-", 
     RowBox[{"7", " ", 
      SubscriptBox["\[Sigma]", 
       RowBox[{"1", ",", "0"}]]}]}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[39]=",ExpressionUUID->"97cc2924-abae-754b-aab2-d15bec3c68e0"]
}, Open  ]],

Cell[TextData[{
 "How to interpret this association? The key means: look at the monomial \
given by the key in your (objective - lower bound). Its coefficient must be \
equal to the value of the association at this key.\nNote that here, we have \
both ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["z", "2", "2"], TraditionalForm]],ExpressionUUID->
  "74c3d200-ebfe-d24b-a0b7-92b48ba27b25"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    OverscriptBox["z", "_"], "2", "2"], TraditionalForm]],ExpressionUUID->
  "fcc73c38-9aea-d040-8a5c-f21c97e6b8f8"],
 " as keys. In principle, they can have completely independent coefficient in \
a polynomial, so these are four real-valued coefficient equalities.\nHowever, \
to be usable in nonnegative (or PSD) constraints, we will always already have \
a fixed structure of the coefficients; by construction, we already know ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"coeff", "(", 
     SubsuperscriptBox["z", "2", "2"], ")"}], "=", 
    OverscriptBox[
     RowBox[{"coeff", "(", 
      SubsuperscriptBox[
       OverscriptBox["z", "_"], "2", "2"], ")"}], "_"]}], TraditionalForm]],
  ExpressionUUID->"4ae51945-f0d5-c848-b99c-60fff2fda017"],
 ". So it is indeed enough to only look at the coefficient of the canonical \
monomial (which here is ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    OverscriptBox["z", "_"], "2", "2"], TraditionalForm]],ExpressionUUID->
  "29d6d71f-5155-af43-8a6c-469db4ff3734"],
 "), the other one then follows automatically."
}], "Text",ExpressionUUID->"9be94458-1ee3-b443-b5d2-a0e0d009e3b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"monlist", "=", 
  RowBox[{"KeySelect", "[", 
   RowBox[{"%", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"mbmap", "[", "#", "]"}], "<=", 
      RowBox[{"mbmap", "[", 
       RowBox[{"conj", "[", "#", "]"}], "]"}]}], "&"}]}], "]"}]}]], "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"30f6a6e4-4473-af4b-8c9e-284c6f810ce7"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    SubscriptBox["x", "1"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "\[ImaginaryI]", " ", 
      SubscriptBox["\[Sigma]", 
       RowBox[{"0", ",", "1"}]]}], "+", 
     RowBox[{"3", " ", "\[ImaginaryI]", " ", 
      SubscriptBox["\[Sigma]", 
       RowBox[{"1", ",", "0"}]]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["z", "1"], " ", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "\[Rule]", 
    RowBox[{
     SubscriptBox["\[Sigma]", 
      RowBox[{"0", ",", "1"}]], "+", 
     SubscriptBox["\[Sigma]", 
      RowBox[{"1", ",", "0"}]]}]}], ",", 
   RowBox[{
    SubsuperscriptBox[
     OverscriptBox["z", "_"], "2", "2"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"8", "-", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["\[Sigma]", 
       RowBox[{"0", ",", "1"}]]}], "-", 
     RowBox[{"7", " ", 
      SubscriptBox["\[Sigma]", 
       RowBox[{"1", ",", "0"}]]}]}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[40]=",ExpressionUUID->"7f3be01b-6e26-6f49-aa94-dca9eab4a748"]
}, Open  ]],

Cell["Now it depends what kind of problem we have.", "Text",ExpressionUUID->"a005cd58-6603-fc4f-9546-9443280b05cc"],

Cell[CellGroupData[{

Cell["Real-valued problem/Solver supports Hermitian PSD cone", "Subsubsection",ExpressionUUID->"5ee824be-3043-484c-b69b-9abca1ccbb13"],

Cell["\<\
If the problem were real-valued, then there wouldn\[CloseCurlyQuote]t be any \
z-related constraints and no imaginary parts would arise.
Even if the solver supports a Hermitian PSD cone, we\[CloseCurlyQuote]ll \
assume that it does not support complex-valued constraints directly.
Then, we\[CloseCurlyQuote]ll need to split this into real and imaginary parts \
of the coefficients. Every monomial is a constraint at its index.\
\>", "Text",ExpressionUUID->"db3e7d3b-b241-6b4f-9a3c-1e64148c2fd8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KeyValueMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mon", ",", "val"}], "}"}], "|->", 
    RowBox[{"Splice", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["br", "mon"], "->", 
        RowBox[{
         RowBox[{"Inactive", "[", "Re", "]"}], "[", "val", "]"}]}], ",", 
       RowBox[{
        SubscriptBox["bi", "mon"], "->", 
        RowBox[{
         RowBox[{"Inactive", "[", "Im", "]"}], "[", "val", "]"}]}]}], 
      "}"}]}]}], ",", "monlist"}], "]"}]], "Input",
 CellLabel->"In[41]:=",ExpressionUUID->"9abd8a04-2236-d748-8919-6ecd0ae95fca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "57"],
      RowBox[{"Re", "[", 
        SubscriptBox["x", "1"], "]"}]],
     Annotation[#, 
      Re[
       Subscript[$CellContext`x, 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     TemplateBox[{"Re"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[Re]"], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", "\[ImaginaryI]", " ", 
       SubscriptBox["\[Sigma]", 
        RowBox[{"0", ",", "1"}]]}], "+", 
      RowBox[{"3", " ", "\[ImaginaryI]", " ", 
       SubscriptBox["\[Sigma]", 
        RowBox[{"1", ",", "0"}]]}]}], "]"}]}], ",", 
   RowBox[{"0", "\[Rule]", 
    RowBox[{
     TemplateBox[{"Im"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[Im]"], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", "\[ImaginaryI]", " ", 
       SubscriptBox["\[Sigma]", 
        RowBox[{"0", ",", "1"}]]}], "+", 
      RowBox[{"3", " ", "\[ImaginaryI]", " ", 
       SubscriptBox["\[Sigma]", 
        RowBox[{"1", ",", "0"}]]}]}], "]"}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "66"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["z", "1"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`z, 1] Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     TemplateBox[{"Re"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[Re]"], "[", 
     RowBox[{
      SubscriptBox["\[Sigma]", 
       RowBox[{"0", ",", "1"}]], "+", 
      SubscriptBox["\[Sigma]", 
       RowBox[{"1", ",", "0"}]]}], "]"}]}], ",", 
   RowBox[{"0", "\[Rule]", 
    RowBox[{
     TemplateBox[{"Im"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[Im]"], "[", 
     RowBox[{
      SubscriptBox["\[Sigma]", 
       RowBox[{"0", ",", "1"}]], "+", 
      SubscriptBox["\[Sigma]", 
       RowBox[{"1", ",", "0"}]]}], "]"}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "58"],
      RowBox[{"Re", "[", 
        SubsuperscriptBox[
         OverscriptBox["z", "_"], "2", "2"], "]"}]],
     Annotation[#, 
      Re[Subscript[
         OverBar[$CellContext`z], 2]^2], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     TemplateBox[{"Re"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[Re]"], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"8", "-", 
         RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       SubscriptBox["\[Sigma]", 
        RowBox[{"0", ",", "1"}]]}], "-", 
      RowBox[{"7", " ", 
       SubscriptBox["\[Sigma]", 
        RowBox[{"1", ",", "0"}]]}]}], "]"}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "60"],
      RowBox[{"Im", "[", 
        SubsuperscriptBox[
         OverscriptBox["z", "_"], "2", "2"], "]"}]],
     Annotation[#, 
      Im[Subscript[
         OverBar[$CellContext`z], 2]^2], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     TemplateBox[{"Im"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[Im]"], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"8", "-", 
         RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       SubscriptBox["\[Sigma]", 
        RowBox[{"0", ",", "1"}]]}], "-", 
      RowBox[{"7", " ", 
       SubscriptBox["\[Sigma]", 
        RowBox[{"1", ",", "0"}]]}]}], "]"}]}]}], "}"}]], "Output",
 CellLabel->"Out[41]=",ExpressionUUID->"eebce50b-21e3-8445-8e1e-99f8a2a36425"]
}, Open  ]],

Cell["\<\
The symmetry will also be automatically obeyed and we\[CloseCurlyQuote]ll \
just want to work with one triangle, say, the upper.\
\>", "Text",ExpressionUUID->"9ceb25af-6fcf-374d-abff-fc3df72453f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "@", 
  RowBox[{"Activate", "[", 
   RowBox[{"%", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Sigma]", 
        RowBox[{"i_", ",", "i_"}]], ":>", 
       SubscriptBox["\[Sigma]r", 
        RowBox[{"i", ",", "i"}]]}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Sigma]", 
         RowBox[{"i_", ",", "j_"}]], "/;", 
        RowBox[{"i", "<", "j"}]}], ":>", 
       RowBox[{
        SubscriptBox["\[Sigma]r", 
         RowBox[{"i", ",", "j"}]], "+", 
        RowBox[{"I", " ", 
         SubscriptBox["\[Sigma]i", 
          RowBox[{"i", ",", "j"}]]}]}]}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Sigma]", 
         RowBox[{"i_", ",", "j_"}]], "/;", 
        RowBox[{"i", ">", "j"}]}], ":>", 
       RowBox[{
        SubscriptBox["\[Sigma]r", 
         RowBox[{"j", ",", "i"}]], "-", 
        RowBox[{"I", " ", 
         SubscriptBox["\[Sigma]i", 
          RowBox[{"j", ",", "i"}]]}]}]}]}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"7a91bd9b-4e26-5a43-8bc0-135ae1a8db4b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "57"],
      RowBox[{"Re", "[", 
        SubscriptBox["x", "1"], "]"}]],
     Annotation[#, 
      Re[
       Subscript[$CellContext`x, 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["\[Sigma]i", 
      RowBox[{"0", ",", "1"}]]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "66"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["z", "1"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`z, 1] Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["\[Sigma]r", 
      RowBox[{"0", ",", "1"}]]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "58"],
      RowBox[{"Re", "[", 
        SubsuperscriptBox[
         OverscriptBox["z", "_"], "2", "2"], "]"}]],
     Annotation[#, 
      Re[Subscript[
         OverBar[$CellContext`z], 2]^2], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      SubscriptBox["\[Sigma]i", 
       RowBox[{"0", ",", "1"}]]}], "+", 
     SubscriptBox["\[Sigma]r", 
      RowBox[{"0", ",", "1"}]]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "60"],
      RowBox[{"Im", "[", 
        SubsuperscriptBox[
         OverscriptBox["z", "_"], "2", "2"], "]"}]],
     Annotation[#, 
      Im[Subscript[
         OverBar[$CellContext`z], 2]^2], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"15", " ", 
      SubscriptBox["\[Sigma]i", 
       RowBox[{"0", ",", "1"}]]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Sigma]r", 
       RowBox[{"0", ",", "1"}]]}]}]}]}], "}"}]], "Output",
 CellLabel->"Out[42]=",ExpressionUUID->"84745770-5c10-5a48-b719-f4f9fa2b6011"]
}, Open  ]],

Cell["\<\
The 0 \[Rule] 0 constraints will always arise by these cancellations if the \
input was valid. We can just remove them. We can also use our convention: \
Each \[OpenCurlyDoubleQuote]extraction entry\[CloseCurlyDoubleQuote] is a \
complex value, where the real part determines how much of the real part \
should be extracted and likewise for the imaginary part.\
\>", "Text",ExpressionUUID->"3b46185a-caa2-824c-9420-7e832b1f028c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteCases", "[", 
   RowBox[{"%", ",", 
    RowBox[{"0", "->", "0"}]}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Sigma]r", 
      RowBox[{"i_", ",", "j_"}]], ":>", 
     SubscriptBox["\[Sigma]", 
      RowBox[{"i", ",", "j"}]]}], ",", 
    RowBox[{
     SubscriptBox["\[Sigma]i", 
      RowBox[{"i_", ",", "j_"}]], ":>", 
     RowBox[{"I", " ", 
      SubscriptBox["\[Sigma]", 
       RowBox[{"i", ",", "j"}]]}]}]}], "}"}]}]], "Input",
 CellLabel->"In[43]:=",ExpressionUUID->"32b7a7d6-335d-9d42-afa8-409824383952"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "57"],
      RowBox[{"Re", "[", 
        SubscriptBox["x", "1"], "]"}]],
     Annotation[#, 
      Re[
       Subscript[$CellContext`x, 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", "\[ImaginaryI]", " ", 
     SubscriptBox["\[Sigma]", 
      RowBox[{"0", ",", "1"}]]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "66"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["z", "1"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`z, 1] Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["\[Sigma]", 
      RowBox[{"0", ",", "1"}]]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "58"],
      RowBox[{"Re", "[", 
        SubsuperscriptBox[
         OverscriptBox["z", "_"], "2", "2"], "]"}]],
     Annotation[#, 
      Re[Subscript[
         OverBar[$CellContext`z], 2]^2], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SubscriptBox["\[Sigma]", 
      RowBox[{"0", ",", "1"}]]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "60"],
      RowBox[{"Im", "[", 
        SubsuperscriptBox[
         OverscriptBox["z", "_"], "2", "2"], "]"}]],
     Annotation[#, 
      Im[Subscript[
         OverBar[$CellContext`z], 2]^2], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"15", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SubscriptBox["\[Sigma]", 
      RowBox[{"0", ",", "1"}]]}]}]}], "}"}]], "Output",
 CellLabel->"Out[43]=",ExpressionUUID->"0c7a8d29-8929-d244-8a6f-51802135e7fe"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Solver only support real-valued PSD cone", "Subsubsection",ExpressionUUID->"35ba9763-32b7-0941-a287-a1ac8125b073"],

Cell["\<\
If the solver does not directly support the Hermitian PSD cone, we\
\[CloseCurlyQuote]ll use Wang\[CloseCurlyQuote]s rewriting. For this, we \
conceptually still view \[Sigma] as a Hermitian matrix.\
\>", "Text",ExpressionUUID->"580e8cd2-6f1f-fd4d-9054-c29f6abb3997"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KeyValueMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mon", ",", "val"}], "}"}], "|->", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x1x2", "=", 
         RowBox[{"val", "/.", 
          RowBox[{
           SubscriptBox["\[Sigma]", 
            RowBox[{"i_", ",", "j_"}]], ":>", 
           RowBox[{
            SubscriptBox["\[Tau]", 
             RowBox[{"1", ",", "i", ",", "j"}]], "+", 
            SubscriptBox["\[Tau]", 
             RowBox[{"2", ",", "i", ",", "j"}]]}]}]}]}], ",", 
        RowBox[{"x3", "=", 
         RowBox[{"val", "/.", 
          RowBox[{
           SubscriptBox["\[Sigma]", 
            RowBox[{"i_", ",", "j_"}]], ":>", 
           RowBox[{
            SubscriptBox["\[Tau]", 
             RowBox[{"3", ",", "i", ",", "j"}]], "-", 
            SubscriptBox["\[Tau]", 
             RowBox[{"3", ",", "j", ",", "i"}]]}]}]}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Splice", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["br", "mon"], "->", 
          RowBox[{"ComplexExpand", "[", 
           RowBox[{
            RowBox[{"Re", "[", "x1x2", "]"}], "-", 
            RowBox[{"Im", "[", "x3", "]"}]}], "]"}]}], ",", 
         RowBox[{
          SubscriptBox["bi", "mon"], "->", 
          RowBox[{"ComplexExpand", "[", 
           RowBox[{
            RowBox[{"Re", "[", "x3", "]"}], "+", 
            RowBox[{"Im", "[", "x1x2", "]"}]}], "]"}]}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ",", "monlist"}], "]"}]], "Input",
 CellLabel->"In[44]:=",ExpressionUUID->"69f20ff3-9d81-a548-8db9-e15523e95091"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "57"],
      RowBox[{"Re", "[", 
        SubscriptBox["x", "1"], "]"}]],
     Annotation[#, 
      Re[
       Subscript[$CellContext`x, 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"6", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"3", ",", "0", ",", "1"}]]}], "-", 
     RowBox[{"6", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"3", ",", "1", ",", "0"}]]}]}]}], ",", 
   RowBox[{"0", "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"1", ",", "0", ",", "1"}]]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"1", ",", "1", ",", "0"}]]}], "-", 
     RowBox[{"3", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"2", ",", "0", ",", "1"}]]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"2", ",", "1", ",", "0"}]]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "66"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["z", "1"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`z, 1] Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     SubscriptBox["\[Tau]", 
      RowBox[{"1", ",", "0", ",", "1"}]], "+", 
     SubscriptBox["\[Tau]", 
      RowBox[{"1", ",", "1", ",", "0"}]], "+", 
     SubscriptBox["\[Tau]", 
      RowBox[{"2", ",", "0", ",", "1"}]], "+", 
     SubscriptBox["\[Tau]", 
      RowBox[{"2", ",", "1", ",", "0"}]]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "58"],
      RowBox[{"Re", "[", 
        SubsuperscriptBox[
         OverscriptBox["z", "_"], "2", "2"], "]"}]],
     Annotation[#, 
      Re[Subscript[
         OverBar[$CellContext`z], 2]^2], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"8", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"1", ",", "0", ",", "1"}]]}], "-", 
     RowBox[{"7", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"1", ",", "1", ",", "0"}]]}], "+", 
     RowBox[{"8", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"2", ",", "0", ",", "1"}]]}], "-", 
     RowBox[{"7", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"2", ",", "1", ",", "0"}]]}], "+", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"3", ",", "0", ",", "1"}]]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"3", ",", "1", ",", "0"}]]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "60"],
      RowBox[{"Im", "[", 
        SubsuperscriptBox[
         OverscriptBox["z", "_"], "2", "2"], "]"}]],
     Annotation[#, 
      Im[Subscript[
         OverBar[$CellContext`z], 2]^2], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"1", ",", "0", ",", "1"}]]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"2", ",", "0", ",", "1"}]]}], "+", 
     RowBox[{"15", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"3", ",", "0", ",", "1"}]]}], "-", 
     RowBox[{"15", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"3", ",", "1", ",", "0"}]]}]}]}]}], "}"}]], "Output",
 CellLabel->"Out[44]=",ExpressionUUID->"89b0fbbc-cf9a-8b4e-89e7-0478997e6425"]
}, Open  ]],

Cell[TextData[{
 "Here, \[Tau] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {
       SubscriptBox["\[Tau]", "1"], 
       SubscriptBox["\[Tau]", "3"]},
      {
       SubsuperscriptBox["\[Tau]", "3", "\[CapitalTau]"], 
       SubscriptBox["\[Tau]", "2"]}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "1f7839ca-1feb-de47-b1b0-ccb5611b5ea6"],
 " is a normal symmetric matrix. We can just undo the blocking - the \
dimension in this example was 2."
}], "Text",ExpressionUUID->"a4e62bfd-ff51-8f43-a17e-ce95d5af09f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Tau]", 
       RowBox[{"1", ",", "i_", ",", "j_"}]], ":>", 
      SubscriptBox["\[Tau]", 
       RowBox[{"i", ",", "j"}]]}], ",", 
     RowBox[{
      SubscriptBox["\[Tau]", 
       RowBox[{"2", ",", "i_", ",", "j_"}]], ":>", 
      SubscriptBox["\[Tau]", 
       RowBox[{
        RowBox[{"i", "+", "2"}], ",", 
        RowBox[{"j", "+", "2"}]}]]}], ",", 
     RowBox[{
      SubscriptBox["\[Tau]", 
       RowBox[{"3", ",", "i_", ",", "j_"}]], ":>", 
      SubscriptBox["\[Tau]", 
       RowBox[{"i", ",", 
        RowBox[{"j", "+", "2"}]}]]}]}], "}"}]}], "/.", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Tau]", 
     RowBox[{"i_", ",", "j_"}]], "/;", 
    RowBox[{"i", ">", "j"}]}], ":>", 
   SubscriptBox["\[Tau]", 
    RowBox[{"j", ",", "i"}]]}]}]], "Input",
 CellLabel->"In[45]:=",ExpressionUUID->"aa077555-1b3b-1748-99bb-b470675ed1ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "57"],
      RowBox[{"Re", "[", 
        SubscriptBox["x", "1"], "]"}]],
     Annotation[#, 
      Re[
       Subscript[$CellContext`x, 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"6", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"0", ",", "3"}]]}], "-", 
     RowBox[{"6", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"1", ",", "2"}]]}]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "66"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["z", "1"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`z, 1] Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"0", ",", "1"}]]}], "+", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"2", ",", "3"}]]}]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "58"],
      RowBox[{"Re", "[", 
        SubsuperscriptBox[
         OverscriptBox["z", "_"], "2", "2"], "]"}]],
     Annotation[#, 
      Re[Subscript[
         OverBar[$CellContext`z], 2]^2], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     SubscriptBox["\[Tau]", 
      RowBox[{"0", ",", "1"}]], "+", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"0", ",", "3"}]]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"1", ",", "2"}]]}], "+", 
     SubscriptBox["\[Tau]", 
      RowBox[{"2", ",", "3"}]]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "60"],
      RowBox[{"Im", "[", 
        SubsuperscriptBox[
         OverscriptBox["z", "_"], "2", "2"], "]"}]],
     Annotation[#, 
      Im[Subscript[
         OverBar[$CellContext`z], 2]^2], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"0", ",", "1"}]]}], "+", 
     RowBox[{"15", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"0", ",", "3"}]]}], "-", 
     RowBox[{"15", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"1", ",", "2"}]]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"2", ",", "3"}]]}]}]}]}], "}"}]], "Output",
 CellLabel->"Out[45]=",ExpressionUUID->"93bf1317-e3a2-9d4b-a88e-d5881f7fe55c"]
}, Open  ]],

Cell["Again, 0 \[Rule] 0 can be removed.", "Text",ExpressionUUID->"93057b19-a0a7-644f-aabd-1fdbc611573b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteCases", "[", 
  RowBox[{"%", ",", 
   RowBox[{"0", "->", "0"}]}], "]"}]], "Input",
 CellLabel->"In[46]:=",ExpressionUUID->"dd6b3e75-3517-2245-8d35-eea34e261991"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "57"],
      RowBox[{"Re", "[", 
        SubscriptBox["x", "1"], "]"}]],
     Annotation[#, 
      Re[
       Subscript[$CellContext`x, 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"6", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"0", ",", "3"}]]}], "-", 
     RowBox[{"6", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"1", ",", "2"}]]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "66"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["z", "1"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`z, 1] Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"0", ",", "1"}]]}], "+", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"2", ",", "3"}]]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "58"],
      RowBox[{"Re", "[", 
        SubsuperscriptBox[
         OverscriptBox["z", "_"], "2", "2"], "]"}]],
     Annotation[#, 
      Re[Subscript[
         OverBar[$CellContext`z], 2]^2], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     SubscriptBox["\[Tau]", 
      RowBox[{"0", ",", "1"}]], "+", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"0", ",", "3"}]]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"1", ",", "2"}]]}], "+", 
     SubscriptBox["\[Tau]", 
      RowBox[{"2", ",", "3"}]]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "60"],
      RowBox[{"Im", "[", 
        SubsuperscriptBox[
         OverscriptBox["z", "_"], "2", "2"], "]"}]],
     Annotation[#, 
      Im[Subscript[
         OverBar[$CellContext`z], 2]^2], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"0", ",", "1"}]]}], "+", 
     RowBox[{"15", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"0", ",", "3"}]]}], "-", 
     RowBox[{"15", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"1", ",", "2"}]]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Tau]", 
       RowBox[{"2", ",", "3"}]]}]}]}]}], "}"}]], "Output",
 CellLabel->"Out[46]=",ExpressionUUID->"704e940b-48c2-0f47-b8b7-222d8936000a"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Automation", "Subsection",ExpressionUUID->"8fa16236-1f8b-6347-b74b-57d78406e560"],

Cell["In a first step, we\[CloseCurlyQuote]ll just generate monlist as \
before.", "Text",ExpressionUUID->"bb8aa0bb-6efa-3446-9f46-08e7f12b62df"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "getMonlist", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getMonlist", "[", 
    RowBox[{"basis_", ",", 
     RowBox[{"constraint_", "?", "SquareMatrixQ"}]}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"polynomial", "=", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"lb", "=", 
            RowBox[{"Length", "@", "basis"}]}], ",", 
           RowBox[{"dc", "=", 
            RowBox[{"Dimensions", "@", "constraint"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Normal", "[", "\[IndentingNewLine]", 
          RowBox[{"Expand", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"einsum", "[", 
              RowBox[{"\"\<i, ij kl, k\>\"", ",", "basis", ",", 
               RowBox[{"Reshape", "[", 
                RowBox[{
                 RowBox[{"Array", "[", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["\[Sigma]", "##"], "&"}], ",", 
                   RowBox[{"lb", " ", "dc"}], ",", "0"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"lb", ",", 
                   RowBox[{
                   "dc", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "lb", ",", 
                   RowBox[{
                   "dc", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", 
               RowBox[{"Thread", "[", 
                RowBox[{"conj", "[", "basis", "]"}], "]"}]}], "]"}], "]"}], 
            ".", 
            RowBox[{"Flatten", "[", "constraint", "]"}]}], "]"}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"KeySelect", "[", 
      RowBox[{
       RowBox[{"KeyMap", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Times", "@@", 
           RowBox[{"(", 
            SuperscriptBox["allvars", "#"], ")"}]}], "&"}], ",", 
         RowBox[{"Association", "@", 
          RowBox[{"CoefficientRules", "[", 
           RowBox[{"polynomial", ",", "allvars"}], "]"}]}]}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"mbmap", "[", "#", "]"}], "<=", 
         RowBox[{"mbmap", "[", 
          RowBox[{"conj", "[", "#", "]"}], "]"}]}], "&"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getMonlist", "[", 
    RowBox[{"basis_", ",", "constraint_"}], "]"}], ":=", 
   RowBox[{"getMonlist", "[", 
    RowBox[{"basis", ",", 
     RowBox[{"{", 
      RowBox[{"{", "constraint", "}"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[47]:=",ExpressionUUID->"31b23969-fb3a-ae45-8de4-8f12ac3b9824"],

Cell["\<\
Use this monlist to derive the constraints for both cases. Depart a little \
from the derivation: we might not only encounter 0 \[Rule] 0, but also mon \
\[Rule] 0. We don\[CloseCurlyQuote]t need this either, as it will be implicit.\
\>", "Text",ExpressionUUID->"f8ee2cf7-2806-3c41-b6f3-f4be64ce4700"],

Cell[BoxData[
 RowBox[{
  RowBox[{"toAssociation", "[", "l_", "]"}], ":=", 
  RowBox[{"Merge", "[", 
   RowBox[{"l", ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "#", "]"}], "===", "1"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Abort", "[", "]"}]}], "]"}], "&"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[32]:=",ExpressionUUID->"3f9d30d4-ac4e-7943-a2b3-eec6ef0d6a4c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "getConstraints", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getConstraints", "[", "monlist_Association", "]"}], ":=", 
   RowBox[{"KeySort", "@", 
    RowBox[{"toAssociation", "@", 
     RowBox[{"DeleteCases", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"ComplexExpand", "@", 
         RowBox[{"KeyValueMap", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"mon", ",", "val"}], "}"}], "|->", "\[IndentingNewLine]", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"valRI", "=", 
                RowBox[{"val", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["\[Sigma]", 
                    RowBox[{"i_", ",", "i_"}]], ":>", 
                    SubscriptBox["\[Sigma]r", 
                    RowBox[{"i", ",", "i"}]]}], ",", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["\[Sigma]", 
                    RowBox[{"i_", ",", "j_"}]], "/;", 
                    RowBox[{"i", "<", "j"}]}], ":>", 
                    RowBox[{
                    SubscriptBox["\[Sigma]r", 
                    RowBox[{"i", ",", "j"}]], "+", 
                    RowBox[{"I", " ", 
                    SubscriptBox["\[Sigma]i", 
                    RowBox[{"i", ",", "j"}]]}]}]}], ",", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["\[Sigma]", 
                    RowBox[{"i_", ",", "j_"}]], "/;", 
                    RowBox[{"i", ">", "j"}]}], ":>", 
                    RowBox[{
                    SubscriptBox["\[Sigma]r", 
                    RowBox[{"j", ",", "i"}]], "-", 
                    RowBox[{"I", " ", 
                    SubscriptBox["\[Sigma]i", 
                    RowBox[{"j", ",", "i"}]]}]}]}]}], "}"}]}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Splice", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["br", "mon"], "->", 
                  RowBox[{"Re", "[", "valRI", "]"}]}], ",", 
                 RowBox[{
                  SubscriptBox["bi", "mon"], "->", 
                  RowBox[{"Im", "[", "valRI", "]"}]}]}], "}"}]}]}], 
             "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
           "monlist"}], "]"}]}], "\[IndentingNewLine]", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Sigma]r", 
            RowBox[{"i_", ",", "j_"}]], ":>", 
           SubscriptBox["\[Sigma]", 
            RowBox[{"i", ",", "j"}]]}], ",", 
          RowBox[{
           SubscriptBox["\[Sigma]i", 
            RowBox[{"i_", ",", "j_"}]], ":>", 
           RowBox[{"I", " ", 
            SubscriptBox["\[Sigma]", 
             RowBox[{"i", ",", "j"}]]}]}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"_", "->", "0"}]}], "\[IndentingNewLine]", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getConstraints", "[", 
    RowBox[{"monlist_Association", ",", 
     RowBox[{"Complexes", "->", "Reals"}], ",", "dim_"}], "]"}], ":=", 
   RowBox[{"KeySort", "@", 
    RowBox[{"toAssociation", "@", 
     RowBox[{"DeleteCases", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"KeyValueMap", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"mon", ",", "val"}], "}"}], "|->", "\[IndentingNewLine]", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x1x2", "=", 
                 RowBox[{"val", "/.", 
                  RowBox[{
                   SubscriptBox["\[Sigma]", 
                    RowBox[{"i_", ",", "j_"}]], ":>", 
                   RowBox[{
                    SubscriptBox["\[Sigma]", 
                    RowBox[{"1", ",", "i", ",", "j"}]], "+", 
                    SubscriptBox["\[Sigma]", 
                    RowBox[{"2", ",", "i", ",", "j"}]]}]}]}]}], ",", 
                RowBox[{"x3", "=", 
                 RowBox[{"val", "/.", 
                  RowBox[{
                   SubscriptBox["\[Sigma]", 
                    RowBox[{"i_", ",", "j_"}]], ":>", 
                   RowBox[{
                    SubscriptBox["\[Sigma]", 
                    RowBox[{"3", ",", "i", ",", "j"}]], "-", 
                    SubscriptBox["\[Sigma]", 
                    RowBox[{"3", ",", "j", ",", "i"}]]}]}]}]}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Splice", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["br", "mon"], "->", 
                  RowBox[{"ComplexExpand", "[", 
                   RowBox[{
                    RowBox[{"Re", "[", "x1x2", "]"}], "-", 
                    RowBox[{"Im", "[", "x3", "]"}]}], "]"}]}], ",", 
                 RowBox[{
                  SubscriptBox["bi", "mon"], "->", 
                  RowBox[{"ComplexExpand", "[", 
                   RowBox[{
                    RowBox[{"Re", "[", "x3", "]"}], "+", 
                    RowBox[{"Im", "[", "x1x2", "]"}]}], "]"}]}]}], "}"}]}]}], 
             "\[IndentingNewLine]", "]"}]}], ",", "monlist"}], "]"}], 
         "\[IndentingNewLine]", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Sigma]", 
             RowBox[{"1", ",", "i_", ",", "j_"}]], ":>", 
            SubscriptBox["\[Sigma]", 
             RowBox[{"i", ",", "j"}]]}], ",", 
           RowBox[{
            SubscriptBox["\[Sigma]", 
             RowBox[{"2", ",", "i_", ",", "j_"}]], ":>", 
            SubscriptBox["\[Sigma]", 
             RowBox[{
              RowBox[{"i", "+", "dim"}], ",", 
              RowBox[{"j", "+", "dim"}]}]]}], ",", 
           RowBox[{
            SubscriptBox["\[Sigma]", 
             RowBox[{"3", ",", "i_", ",", "j_"}]], ":>", 
            SubscriptBox["\[Sigma]", 
             RowBox[{"i", ",", 
              RowBox[{"j", "+", "dim"}]}]]}]}], "}"}]}], "/.", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Sigma]", 
           RowBox[{"i_", ",", "j_"}]], "/;", 
          RowBox[{"i", ">", "j"}]}], ":>", 
         SubscriptBox["\[Sigma]", 
          RowBox[{"j", ",", "i"}]]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"_", "->", "0"}]}], "\[IndentingNewLine]", "]"}]}]}]}], 
  ";"}]}], "Input",
 CellLabel->"In[50]:=",ExpressionUUID->"305a6ac0-9ef2-114d-acf3-1a0657bccd5a"],

Cell["\<\
Finally make this into the Julia code for test cases.
Care must be taken that if so specified (which at least in the real case is \
common in the solvers), if we tell the solver to extract the item at position \
(i, j), it will extract the item at the symmetrized position, i.e., the \
off-diagonals will be implicitly doubled.\
\>", "Text",ExpressionUUID->"d01afc7e-11de-ce45-b289-6983257be63a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"isInt", ",", "exportList"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isInt", "[", "_Integer", "]"}], "=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isInt", "[", "x_Complex", "]"}], ":=", 
   RowBox[{
    RowBox[{"isInt", "[", 
     RowBox[{"Re", "[", "x", "]"}], "]"}], "&&", 
    RowBox[{"isInt", "[", 
     RowBox[{"Im", "[", "x", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isInt", "[", "_", "]"}], "=", "False"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"exportList", "[", "l_List", "]"}], ":=", 
   RowBox[{"\"\<[\>\"", "<>", 
    RowBox[{"StringReplace", "[", 
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"AllTrue", "[", 
            RowBox[{"l", ",", "isInt"}], "]"}], ",", "l", ",", 
           RowBox[{"N", "@", "l"}]}], "]"}], "]"}], ",", 
        RowBox[{"2", ";;", 
         RowBox[{"-", "2"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<I\>\"", "\[Rule]", "\"\<im\>\""}], ",", 
        RowBox[{"\"\< \>\"", "->", "\"\<\>\""}]}], "}"}]}], "]"}], "<>", 
    "\"\<]\>\""}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellLabel->"In[33]:=",ExpressionUUID->"ed856af2-3686-454b-8175-70fdb8ed5e54"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"parseItems", ",", "parseItem"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"parseItems", "[", 
    RowBox[{"x_Plus", ",", "args__"}], "]"}], ":=", 
   RowBox[{"parseItems", "[", 
    RowBox[{
     RowBox[{"List", "@@", "x"}], ",", "args"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"parseItems", "[", 
    RowBox[{"x_", ",", "args__"}], "]"}], ":=", 
   RowBox[{"parseItems", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", "args"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"parseItems", "[", 
    RowBox[{"x_List", ",", "args__", ",", "valtype_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"parsed", "=", 
       RowBox[{"Activate", "@", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"parseItem", "[", "args", "]"}], "/@", "x"}], "]"}]}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cumparsed", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"DeleteCases", "[", 
            RowBox[{
             RowBox[{"KeySort", "[", "#", "]"}], ",", "0"}], "]"}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Merge", "[", 
             RowBox[{
              RowBox[{"Thread", "[", 
               RowBox[{
                RowBox[{
                "parsed", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "\[Rule]", 
                RowBox[{
                "parsed", "\[LeftDoubleBracket]", "3", 
                 "\[RightDoubleBracket]"}]}], "]"}], ",", "Total"}], "]"}], 
            ",", 
            RowBox[{"Merge", "[", 
             RowBox[{
              RowBox[{"Thread", "[", 
               RowBox[{
                RowBox[{
                "parsed", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}], "\[Rule]", 
                RowBox[{
                "parsed", "\[LeftDoubleBracket]", "3", 
                 "\[RightDoubleBracket]"}]}], "]"}], ",", "Total"}], "]"}]}], 
           "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"idxU", "=", 
            RowBox[{"Keys", "[", 
             RowBox[{
             "cumparsed", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "]"}]}], ",", 
           RowBox[{"idxL", "=", 
            RowBox[{"Keys", "[", 
             RowBox[{
             "cumparsed", "\[LeftDoubleBracket]", "2", 
              "\[RightDoubleBracket]"}], "]"}]}], ",", 
           RowBox[{"valU", "=", 
            RowBox[{"Values", "[", 
             RowBox[{
             "cumparsed", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "]"}]}], ",", 
           RowBox[{"valL", "=", 
            RowBox[{"Values", "[", 
             RowBox[{
             "cumparsed", "\[LeftDoubleBracket]", "2", 
              "\[RightDoubleBracket]"}], "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"idxU", "\[Equal]", "idxL"}], ",", 
            RowBox[{"\"\<Int32\>\"", "<>", 
             RowBox[{"exportList", "[", "idxL", "]"}]}], ",", 
            RowBox[{"\"\<lower ? Int32\>\"", "<>", 
             RowBox[{"exportList", "[", "idxL", "]"}], "<>", 
             "\"\< : Int32\>\"", "<>", 
             RowBox[{"exportList", "[", "idxU", "]"}]}]}], "]"}], "<>", 
          "\"\<, \>\"", "<>", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"valU", "\[Equal]", 
             RowBox[{"Conjugate", "@", "valL"}]}], ",", 
            RowBox[{"valtype", "<>", 
             RowBox[{"exportList", "[", "valU", "]"}]}], ",", 
            RowBox[{"\"\<lower ? \>\"", "<>", "valtype", "<>", 
             RowBox[{"exportList", "[", 
              RowBox[{"Conjugate", "@", "valL"}], "]"}], "<>", "\"\< : \>\"", 
             "<>", "valtype", "<>", 
             RowBox[{"exportList", "[", "valU", "]"}]}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"parseItem", "[", 
     RowBox[{"dim_", ",", "offset_", ",", "doubleoff_"}], "]"}], "[", 
    RowBox[{
     RowBox[{"d_", "?", "NumericQ"}], ",", 
     RowBox[{
      SubscriptBox["\[Sigma]", 
       RowBox[{"i_", ",", "j_"}]], "/;", 
      RowBox[{"i", "<=", "j"}]}]}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rcToI", "[", 
      RowBox[{"dim", ",", 
       RowBox[{"i", "+", "offset"}], ",", 
       RowBox[{"j", "+", "offset"}], ",", "offset", ",", "\"\<UC\>\""}], 
      "]"}], ",", 
     RowBox[{"rcToI", "[", 
      RowBox[{"dim", ",", 
       RowBox[{"j", "+", "offset"}], ",", 
       RowBox[{"i", "+", "offset"}], ",", "offset", ",", "\"\<LC\>\""}], 
      "]"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"doubleoff", "&&", 
        RowBox[{"i", "!=", "j"}]}], ",", 
       RowBox[{"d", "/", "2"}], ",", "d"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"parseItem", "[", "args__", "]"}], "[", 
    RowBox[{"Times", "[", 
     RowBox[{
      RowBox[{"d_", "?", "NumericQ"}], ",", "\[Sigma]_"}], "]"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"parseItem", "[", "args", "]"}], "[", 
    RowBox[{"d", ",", "\[Sigma]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"parseItem", "[", "__", "]"}], "[", "0", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Inactive", "[", "Nothing", "]"}], ",", 
     RowBox[{"Inactive", "[", "Nothing", "]"}], ",", 
     RowBox[{"Inactive", "[", "Nothing", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"parseItem", "[", "args__", "]"}], "[", "\[Sigma]_", "]"}], ":=", 
   
   RowBox[{
    RowBox[{"parseItem", "[", "args", "]"}], "[", 
    RowBox[{"1", ",", "\[Sigma]"}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[53]:=",ExpressionUUID->"d253fb69-7538-f348-978e-918b4ab197fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "generateCode", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"generateCode", "[", 
    RowBox[{"basis_", ",", 
     RowBox[{"constraint_", "?", "SquareMatrixQ"}], ",", "offset_", ",", 
     RowBox[{"doubleoff_", ":", "True"}]}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dim", "=", 
        RowBox[{
         RowBox[{"Length", "@", "basis"}], " ", 
         RowBox[{"Length", "@", "constraint"}]}]}], ",", 
       RowBox[{"constraints", "=", 
        RowBox[{"getConstraints", "[", 
         RowBox[{"getMonlist", "[", 
          RowBox[{"basis", ",", "constraint"}], "]"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"prefix", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"FreeQ", "[", 
             RowBox[{"constraints", ",", "_Complex"}], "]"}]}], ",", 
           "\"\<Complex{Int16}\>\"", ",", "\"\<Int16\>\""}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
       "\"\<Dict{FastKey{BigInt},Tuple{Vector{Int32},Vector{\>\"", "<>", 
        "prefix", "<>", "\"\<}}}(\\n\>\"", "<>", "\[IndentingNewLine]", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"KeyValueMap", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"key", ",", "expr"}], "}"}], "|->", 
            RowBox[{"\"\<    FastKey(BigInt(\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"key", "/.", 
               RowBox[{
                RowBox[{"Tooltip", "[", 
                 RowBox[{
                  SubscriptBox["X", "d_"], ",", "_"}], "]"}], 
                "\[RuleDelayed]", "d"}]}], "]"}], "<>", "\"\<)) => (\>\"", "<>", 
             RowBox[{"parseItems", "[", 
              RowBox[{
              "expr", ",", "dim", ",", "offset", ",", "doubleoff", ",", 
               "prefix"}], "]"}], "<>", "\"\<),\\n\>\""}]}], ",", 
           "\[IndentingNewLine]", "constraints"}], "\[IndentingNewLine]", 
          "]"}], "]"}], "<>", "\"\<)\>\""}]}], "\[IndentingNewLine]", "]"}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"generateCode", "[", 
    RowBox[{"basis_", ",", 
     RowBox[{"constraint_", "?", "SquareMatrixQ"}], ",", "offset_", ",", 
     RowBox[{"doubleoff_", ":", "True"}], ",", 
     RowBox[{"Complexes", "->", "Reals"}]}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", "=", 
       RowBox[{
        RowBox[{"Length", "@", "basis"}], " ", 
        RowBox[{"Length", "@", "constraint"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"constraints", "=", 
         RowBox[{"getConstraints", "[", 
          RowBox[{
           RowBox[{"getMonlist", "[", 
            RowBox[{"basis", ",", "constraint"}], "]"}], ",", 
           RowBox[{"Complexes", "->", "Reals"}], ",", "dim"}], "]"}]}], "}"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{
       "\"\<Dict{FastKey{BigInt},Tuple{Vector{Int32},Vector{Int16}}}(\\n\>\"",
         "<>", "\[IndentingNewLine]", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"KeyValueMap", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"key", ",", "expr"}], "}"}], "|->", 
            RowBox[{"\"\<    FastKey(BigInt(\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"key", "/.", 
               RowBox[{
                RowBox[{"Tooltip", "[", 
                 RowBox[{
                  SubscriptBox["X", "d_"], ",", "_"}], "]"}], 
                "\[RuleDelayed]", "d"}]}], "]"}], "<>", "\"\<)) => (\>\"", "<>", 
             RowBox[{"parseItems", "[", 
              RowBox[{"expr", ",", 
               RowBox[{"2", "dim"}], ",", "offset", ",", "doubleoff", ",", 
               "\"\<Int16\>\""}], "]"}], "<>", "\"\<),\\n\>\""}]}], ",", 
           "\[IndentingNewLine]", "constraints"}], "\[IndentingNewLine]", 
          "]"}], "]"}], "<>", "\"\<)\>\""}]}], "\[IndentingNewLine]", "]"}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"generateCode", "[", 
    RowBox[{"basis_", ",", "constraint_", ",", "args__"}], "]"}], ":=", 
   RowBox[{"generateCode", "[", 
    RowBox[{"basis", ",", 
     RowBox[{"{", 
      RowBox[{"{", "constraint", "}"}], "}"}], ",", "args"}], "]"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[61]:=",ExpressionUUID->"d6450db8-042c-9e4b-b1e0-b7bd216dcf4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCode", "[", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], "I", " ", 
         SubscriptBox["x", "1"]}], "-", 
        RowBox[{"7", 
         SubsuperscriptBox["z", "2", "2"]}], "+", 
        RowBox[{
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "-", 
           RowBox[{"2", "I"}]}], ")"}], 
         SubsuperscriptBox[
          OverscriptBox["z", "_"], "2", "2"]}]}]},
      {
       RowBox[{
        RowBox[{"3", "I", " ", 
         SubscriptBox["x", "1"]}], "-", 
        RowBox[{"7", 
         SubsuperscriptBox[
          OverscriptBox["z", "_"], "2", "2"]}], "+", 
        RowBox[{
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "+", 
           RowBox[{"2", "I"}]}], ")"}], 
         SubsuperscriptBox["z", "2", "2"]}]}], "0"}
     }], ")"}], ",", "17", ",", "True"}], "]"}]], "Input",
 CellLabel->
  "In[377]:=",ExpressionUUID->"6bc41eea-29ee-a04e-bdff-672d5a761978"],

Cell[BoxData["\<\"Dict{FastKey{BigInt},Tuple{Vector{Int32},Vector{Complex{\
Int16}}}}(\\n    FastKey(BigInt(57)) => (Int32[18], lower ? \
Complex{Int16}[-3im] : Complex{Int16}[3im]),\\n    FastKey(BigInt(58)) => \
(Int32[18], lower ? Complex{Int16}[0.5 - 1.im] : Complex{Int16}[0.5 + 1.im]),\
\\n    FastKey(BigInt(63)) => (Int32[18], lower ? Complex{Int16}[-1. - 7.5im] \
: Complex{Int16}[-1. + 7.5im]),\\n    FastKey(BigInt(65)) => (Int32[18], \
Complex{Int16}[1]),\\n)\"\>"], "Output",
 CellLabel->
  "Out[377]=",ExpressionUUID->"7937fd57-5677-5f4b-a706-db5dd649a4d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCode", "[", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], "I", " ", 
         SubscriptBox["x", "1"]}], "-", 
        RowBox[{"7", 
         SubsuperscriptBox["z", "2", "2"]}], "+", 
        RowBox[{
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "-", 
           RowBox[{"2", "I"}]}], ")"}], 
         SubsuperscriptBox[
          OverscriptBox["z", "_"], "2", "2"]}]}]},
      {
       RowBox[{
        RowBox[{"3", "I", " ", 
         SubscriptBox["x", "1"]}], "-", 
        RowBox[{"7", 
         SubsuperscriptBox[
          OverscriptBox["z", "_"], "2", "2"]}], "+", 
        RowBox[{
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "+", 
           RowBox[{"2", "I"}]}], ")"}], 
         SubsuperscriptBox["z", "2", "2"]}]}], "0"}
     }], ")"}], ",", "17", ",", "True", ",", 
   RowBox[{"Complexes", "->", "Reals"}]}], "]"}]], "Input",
 CellLabel->"In[66]:=",ExpressionUUID->"42e178a0-ab7e-9e46-b157-a8f30d0ff0fa"],

Cell[BoxData["\<\"Dict{FastKey{BigInt},Tuple{Vector{Int32},Vector{Int16}}}(\\\
n    FastKey(BigInt(57)) => (lower ? Int32[20,22] : Int32[21,23], lower ? \
Int16[3,-3] : Int16[-3,3]),\\n    FastKey(BigInt(58)) => (lower ? \
Int32[18,20,22,25] : Int32[18,21,23,25], lower ? Int16[0.5,1.,-1.,0.5] : \
Int16[0.5,-1.,1.,0.5]),\\n    FastKey(BigInt(60)) => (lower ? \
Int32[18,20,22,25] : Int32[18,21,23,25], lower ? Int16[-1.,7.5,-7.5,-1.] : \
Int16[-1.,-7.5,7.5,-1.]),\\n    FastKey(BigInt(66)) => (Int32[18,25], \
Int16[1,1]),\\n)\"\>"], "Output",
 CellLabel->"Out[66]=",ExpressionUUID->"a320570d-14ac-d74d-9d7e-68783a60d947"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verification by hand", "Subsubsection",ExpressionUUID->"01c4b7bd-c30f-0240-9f4d-5998877d146f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCode", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "1"]}], "}"}], ",", 
   RowBox[{"3", "+", 
    RowBox[{"5", 
     SubscriptBox["x", "1"]}]}], ",", "1", ",", "True"}], "]"}]], "Input",
 CellLabel->"In[67]:=",ExpressionUUID->"289e558f-ab0d-bb41-b351-8a7212e157b6"],

Cell[BoxData["\<\"Dict{FastKey{BigInt},Tuple{Vector{Int32},Vector{Int16}}}(\\\
n    FastKey(BigInt(49)) => (Int32[1], Int16[3]),\\n    FastKey(BigInt(57)) \
=> (Int32[1,2], Int16[5,3]),\\n    FastKey(BigInt(93)) => (Int32[2,3], \
Int16[5,3]),\\n    FastKey(BigInt(213)) => (Int32[3], Int16[5]),\\n)\"\>"], \
"Output",
 CellLabel->"Out[67]=",ExpressionUUID->"f6e94eea-f8bc-1342-8583-72a101f38ad0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mbmap", "[", 
  RowBox[{"[", 
   RowBox[{"Key", "/@", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      SubscriptBox["x", "1"], ",", 
      SubsuperscriptBox["x", "1", "2"], ",", 
      SubsuperscriptBox["x", "1", "3"]}], "}"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[68]:=",ExpressionUUID->"1226f393-5965-6741-a75e-6ca8e413ba49"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"1", "\[Rule]", "49"}], ",", 
   RowBox[{
    SubscriptBox["x", "1"], "\[Rule]", "57"}], ",", 
   RowBox[{
    SubsuperscriptBox["x", "1", "2"], "\[Rule]", "93"}], ",", 
   RowBox[{
    SubsuperscriptBox["x", "1", "3"], "\[Rule]", "213"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[68]=",ExpressionUUID->"806a5721-f7b7-2044-aae3-b4b36780f07a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "@", 
  RowBox[{"CoefficientRules", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", "+", 
       RowBox[{"5", 
        SubscriptBox["x", "1"]}]}], ")"}], 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SubscriptBox["x", "1"]}], "}"}], ".", 
      RowBox[{"(", GridBox[{
         {
          SubscriptBox["\[Sigma]", "1"], 
          RowBox[{
           SubscriptBox["\[Sigma]", "2"], "/", "2"}]},
         {
          RowBox[{
           SubscriptBox["\[Sigma]", "2"], "/", "2"}], 
          SubscriptBox["\[Sigma]", "3"]}
        }], ")"}], ".", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SubscriptBox["x", "1"]}], "}"}]}]}], ",", 
    SubscriptBox["x", "1"]}], "]"}]}]], "Input",
 CellLabel->"In[69]:=",ExpressionUUID->"4103eb40-1c6c-4e40-b190-0d41c622edca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "0", "}"}], "\[Rule]", 
    RowBox[{"3", " ", 
     SubscriptBox["\[Sigma]", "1"]}]}], ",", 
   RowBox[{
    RowBox[{"{", "1", "}"}], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["\[Sigma]", "1"]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["\[Sigma]", "2"]}]}]}], ",", 
   RowBox[{
    RowBox[{"{", "2", "}"}], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["\[Sigma]", "2"]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["\[Sigma]", "3"]}]}]}], ",", 
   RowBox[{
    RowBox[{"{", "3", "}"}], "\[Rule]", 
    RowBox[{"5", " ", 
     SubscriptBox["\[Sigma]", "3"]}]}]}], "}"}]], "Output",
 CellLabel->"Out[69]=",ExpressionUUID->"1233bae1-236e-b740-b73f-9302f0b61769"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Test cases", "Subsection",ExpressionUUID->"507af60e-e4bb-4784-9df2-44f8796bd939"],

Cell[CellGroupData[{

Cell["Verification of our own code", "Subsubsection",ExpressionUUID->"1910b6a8-ab11-1641-a6a4-f6bfb31993aa"],

Cell["real-valued basis", "Text",ExpressionUUID->"1cfc0119-6224-1146-bcc6-4c2eae368de7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCode", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "2"], ",", 
     RowBox[{
      SubscriptBox["x", "1"], 
      SubsuperscriptBox["x", "4", "2"]}], ",", 
     RowBox[{
      SubsuperscriptBox["x", "2", "2"], 
      SubsuperscriptBox["x", "3", "3"]}]}], "}"}], ",", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", 
      SubscriptBox["x", "2"], 
      SubscriptBox["x", "3"]}], "+", 
     RowBox[{"5", 
      SubscriptBox["z", "1"], 
      SubscriptBox[
       OverscriptBox["z", "_"], "1"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", "I"}]}], ")"}], 
      SubscriptBox["z", "2"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"3", "I"}]}], ")"}], 
      SubscriptBox[
       OverscriptBox["z", "_"], "2"]}]}], ")"}], ",", "17"}], "]"}]], "Input",\

 CellLabel->"In[70]:=",ExpressionUUID->"8ba7c122-253b-4b57-af44-fa440e46d957"],

Cell[BoxData["\<\"Dict{FastKey{BigInt},Tuple{Vector{Int32},Vector{Int16}}}(\\\
n    FastKey(BigInt(50)) => (Int32[17], Int16[-2]),\\n    FastKey(BigInt(51)) \
=> (Int32[17], Int16[3]),\\n    FastKey(BigInt(66)) => (Int32[17], Int16[5]),\
\\n    FastKey(BigInt(79)) => (Int32[18], Int16[-2]),\\n    \
FastKey(BigInt(80)) => (Int32[18], Int16[3]),\\n    FastKey(BigInt(84)) => \
(Int32[17], Int16[3]),\\n    FastKey(BigInt(158)) => (Int32[18], \
Int16[5]),\\n    FastKey(BigInt(171)) => (lower ? Int32[21] : Int32[19], \
Int16[-2]),\\n    FastKey(BigInt(172)) => (lower ? Int32[21] : Int32[19], \
Int16[3]),\\n    FastKey(BigInt(176)) => (Int32[18], Int16[3]),\\n    \
FastKey(BigInt(404)) => (lower ? Int32[21] : Int32[19], Int16[5]),\\n    \
FastKey(BigInt(422)) => (lower ? Int32[21] : Int32[19], Int16[3]),\\n    \
FastKey(BigInt(454)) => (lower ? Int32[19] : Int32[20], Int16[-2]),\\n    \
FastKey(BigInt(455)) => (lower ? Int32[19] : Int32[20], Int16[3]),\\n    \
FastKey(BigInt(1069)) => (lower ? Int32[19] : Int32[20], Int16[5]),\\n    \
FastKey(BigInt(1162)) => (lower ? Int32[22] : Int32[21], Int16[-2]),\\n    \
FastKey(BigInt(1163)) => (lower ? Int32[22] : Int32[21], Int16[3]),\\n    \
FastKey(BigInt(1181)) => (lower ? Int32[19] : Int32[20], Int16[3]),\\n    \
FastKey(BigInt(2170)) => (lower ? Int32[20] : Int32[23], Int16[-2]),\\n    \
FastKey(BigInt(2171)) => (lower ? Int32[20] : Int32[23], Int16[3]),\\n    \
FastKey(BigInt(2575)) => (lower ? Int32[22] : Int32[21], Int16[5]),\\n    \
FastKey(BigInt(2687)) => (lower ? Int32[22] : Int32[21], Int16[3]),\\n    \
FastKey(BigInt(4545)) => (lower ? Int32[20] : Int32[23], Int16[5]),\\n    \
FastKey(BigInt(4678)) => (lower ? Int32[23] : Int32[24], Int16[-2]),\\n    \
FastKey(BigInt(4679)) => (lower ? Int32[23] : Int32[24], Int16[3]),\\n    \
FastKey(BigInt(4683)) => (lower ? Int32[20] : Int32[23], Int16[3]),\\n    \
FastKey(BigInt(5813)) => (lower ? Int32[24] : Int32[22], Int16[-2]),\\n    \
FastKey(BigInt(5814)) => (lower ? Int32[24] : Int32[22], Int16[3]),\\n    \
FastKey(BigInt(9264)) => (lower ? Int32[23] : Int32[24], Int16[5]),\\n    \
FastKey(BigInt(9402)) => (lower ? Int32[23] : Int32[24], Int16[3]),\\n    \
FastKey(BigInt(11406)) => (lower ? Int32[24] : Int32[22], Int16[5]),\\n    \
FastKey(BigInt(11860)) => (lower ? Int32[24] : Int32[22], Int16[3]),\\n    \
FastKey(BigInt(20439)) => (Int32[25], Int16[-2]),\\n    \
FastKey(BigInt(20440)) => (Int32[25], Int16[3]),\\n    FastKey(BigInt(36385)) \
=> (Int32[25], Int16[5]),\\n    FastKey(BigInt(36903)) => (Int32[25], \
Int16[3]),\\n    FastKey(BigInt(55253)) => (Int32[26], Int16[-2]),\\n    \
FastKey(BigInt(55254)) => (Int32[26], Int16[3]),\\n    FastKey(BigInt(92466)) \
=> (Int32[26], Int16[5]),\\n    FastKey(BigInt(93270)) => (Int32[26], \
Int16[3]),\\n)\"\>"], "Output",
 CellLabel->"Out[70]=",ExpressionUUID->"7e182dcd-464b-f54c-b05b-be98ebb47303"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCode", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "2"], ",", 
     RowBox[{
      SubscriptBox["x", "1"], 
      SubsuperscriptBox["x", "4", "2"]}], ",", 
     RowBox[{
      SubsuperscriptBox["x", "2", "2"], 
      SubsuperscriptBox["x", "3", "3"]}]}], "}"}], ",", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        RowBox[{"3", 
         SubscriptBox["x", "2"], 
         SubscriptBox["x", "3"]}], "+", 
        RowBox[{"5", 
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"3", "I"}]}], ")"}], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"3", "I"}]}], ")"}], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{"17", 
        SubscriptBox["x", "4"]}], 
       RowBox[{
        RowBox[{"10", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"8", 
         SubscriptBox["z", "2"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}]},
      {
       RowBox[{"17", 
        SubscriptBox["x", "4"]}], "0", 
       RowBox[{
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}]},
      {
       RowBox[{
        RowBox[{"10", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"8", 
         SubscriptBox["z", "2"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{"6", 
        SubscriptBox["x", "2"], 
        SubscriptBox["x", "4"]}]}
     }], ")"}], ",", "17"}], "]"}]], "Input",
 CellLabel->"In[71]:=",ExpressionUUID->"8ce63b4f-0f88-4886-825d-73cb401d13f2"],

Cell[BoxData["\<\"Dict{FastKey{BigInt},Tuple{Vector{Int32},Vector{Int16}}}(\\\
n    FastKey(BigInt(50)) => (Int32[17], Int16[-2]),\\n    FastKey(BigInt(51)) \
=> (Int32[17], Int16[3]),\\n    FastKey(BigInt(54)) => (Int32[18], \
Int16[17]),\\n    FastKey(BigInt(57)) => (lower ? Int32[19] : Int32[20], \
Int16[10]),\\n    FastKey(BigInt(59)) => (lower ? Int32[19] : Int32[20], \
Int16[8]),\\n    FastKey(BigInt(66)) => (Int32[17], Int16[5]),\\n    \
FastKey(BigInt(74)) => (lower ? Int32[30] : Int32[21], Int16[-24]),\\n    \
FastKey(BigInt(79)) => (lower ? Int32[20] : Int32[23], Int16[-2]),\\n    \
FastKey(BigInt(80)) => (lower ? Int32[20] : Int32[23], Int16[3]),\\n    \
FastKey(BigInt(83)) => (lower ? Int32[21,31,40] : Int32[22,24,27], lower ? \
Int16[17,17,6] : Int16[6,17,17]),\\n    FastKey(BigInt(84)) => (Int32[17], \
Int16[3]),\\n    FastKey(BigInt(92)) => (lower ? Int32[22,41] : Int32[25,32], \
Int16[10,10]),\\n    FastKey(BigInt(151)) => (lower ? Int32[22,41] : \
Int32[25,32], Int16[8,8]),\\n    FastKey(BigInt(158)) => (lower ? Int32[20] : \
Int32[23], Int16[5]),\\n    FastKey(BigInt(166)) => (lower ? Int32[33,42] : \
Int32[29,33], Int16[-24,-24]),\\n    FastKey(BigInt(171)) => (lower ? \
Int32[50] : Int32[26], Int16[-2]),\\n    FastKey(BigInt(172)) => (lower ? \
Int32[50] : Int32[26], Int16[3]),\\n    FastKey(BigInt(175)) => (lower ? \
Int32[43,51] : Int32[30,34], lower ? Int16[6,17] : Int16[17,6]),\\n    \
FastKey(BigInt(176)) => (lower ? Int32[20] : Int32[23], Int16[3]),\\n    \
FastKey(BigInt(205)) => (lower ? Int32[52] : Int32[35], Int16[10]),\\n    \
FastKey(BigInt(397)) => (lower ? Int32[52] : Int32[35], Int16[8]),\\n    \
FastKey(BigInt(404)) => (lower ? Int32[50] : Int32[26], Int16[5]),\\n    \
FastKey(BigInt(412)) => (lower ? Int32[60] : Int32[36], Int16[-24]),\\n    \
FastKey(BigInt(421)) => (lower ? Int32[67] : Int32[37], Int16[6]),\\n    \
FastKey(BigInt(422)) => (lower ? Int32[50] : Int32[26], Int16[3]),\\n    \
FastKey(BigInt(454)) => (lower ? Int32[23] : Int32[38], Int16[-2]),\\n    \
FastKey(BigInt(455)) => (lower ? Int32[23] : Int32[38], Int16[3]),\\n    \
FastKey(BigInt(458)) => (lower ? Int32[24,34] : Int32[39,45], \
Int16[17,17]),\\n    FastKey(BigInt(522)) => (lower ? Int32[25,44] : \
Int32[40,53], Int16[10,10]),\\n    FastKey(BigInt(1062)) => (lower ? \
Int32[25,44] : Int32[40,53], Int16[8,8]),\\n    FastKey(BigInt(1069)) => \
(lower ? Int32[23] : Int32[38], Int16[5]),\\n    FastKey(BigInt(1107)) => \
(lower ? Int32[36,45] : Int32[47,54], Int16[-24,-24]),\\n    \
FastKey(BigInt(1162)) => (lower ? Int32[53] : Int32[41], Int16[-2]),\\n    \
FastKey(BigInt(1163)) => (lower ? Int32[53] : Int32[41], Int16[3]),\\n    \
FastKey(BigInt(1166)) => (lower ? Int32[46,54,61] : Int32[42,48,55], lower ? \
Int16[6,17,17] : Int16[17,17,6]),\\n    FastKey(BigInt(1181)) => (lower ? \
Int32[23] : Int32[38], Int16[3]),\\n    FastKey(BigInt(1286)) => (lower ? \
Int32[55,68] : Int32[43,56], Int16[10,10]),\\n    FastKey(BigInt(2170)) => \
(lower ? Int32[26] : Int32[62], Int16[-2]),\\n    FastKey(BigInt(2171)) => \
(lower ? Int32[26] : Int32[62], Int16[3]),\\n    FastKey(BigInt(2174)) => \
(lower ? Int32[27,37] : Int32[63,72], Int16[17,17]),\\n    \
FastKey(BigInt(2568)) => (lower ? Int32[55,68] : Int32[43,56], \
Int16[8,8]),\\n    FastKey(BigInt(2575)) => (lower ? Int32[53] : Int32[41], \
Int16[5]),\\n    FastKey(BigInt(2613)) => (lower ? Int32[63,69] : \
Int32[50,57], Int16[-24,-24]),\\n    FastKey(BigInt(2672)) => (lower ? \
Int32[70] : Int32[58], Int16[6]),\\n    FastKey(BigInt(2687)) => (lower ? \
Int32[53] : Int32[41], Int16[3]),\\n    FastKey(BigInt(2693)) => (lower ? \
Int32[28,47] : Int32[64,83], Int16[10,10]),\\n    FastKey(BigInt(4538)) => \
(lower ? Int32[28,47] : Int32[64,83], Int16[8,8]),\\n    \
FastKey(BigInt(4545)) => (lower ? Int32[26] : Int32[62], Int16[5]),\\n    \
FastKey(BigInt(4553)) => (lower ? Int32[39,48] : Int32[74,84], \
Int16[-24,-24]),\\n    FastKey(BigInt(4678)) => (lower ? Int32[56] : \
Int32[65], Int16[-2]),\\n    FastKey(BigInt(4679)) => (lower ? Int32[56] : \
Int32[65], Int16[3]),\\n    FastKey(BigInt(4682)) => (lower ? Int32[49,57,64] \
: Int32[66,75,85], lower ? Int16[6,17,17] : Int16[17,17,6]),\\n    \
FastKey(BigInt(4683)) => (lower ? Int32[26] : Int32[62], Int16[3]),\\n    \
FastKey(BigInt(5663)) => (lower ? Int32[58,71] : Int32[67,86], Int16[10,10]),\
\\n    FastKey(BigInt(5813)) => (lower ? Int32[74] : Int32[44], \
Int16[-2]),\\n    FastKey(BigInt(5814)) => (lower ? Int32[74] : Int32[44], \
Int16[3]),\\n    FastKey(BigInt(5817)) => (lower ? Int32[75] : Int32[51], \
Int16[17]),\\n    FastKey(BigInt(6223)) => (lower ? Int32[76] : Int32[59], \
Int16[10]),\\n    FastKey(BigInt(9257)) => (lower ? Int32[58,71] : \
Int32[67,86], Int16[8,8]),\\n    FastKey(BigInt(9264)) => (lower ? Int32[56] \
: Int32[65], Int16[5]),\\n    FastKey(BigInt(9272)) => (lower ? Int32[66,72] \
: Int32[77,87], Int16[-24,-24]),\\n    FastKey(BigInt(9401)) => (lower ? \
Int32[73] : Int32[88], Int16[6]),\\n    FastKey(BigInt(9402)) => (lower ? \
Int32[56] : Int32[65], Int16[3]),\\n    FastKey(BigInt(11399)) => (lower ? \
Int32[76] : Int32[59], Int16[8]),\\n    FastKey(BigInt(11406)) => (lower ? \
Int32[74] : Int32[44], Int16[5]),\\n    FastKey(BigInt(11535)) => (lower ? \
Int32[81] : Int32[60], Int16[-24]),\\n    FastKey(BigInt(11790)) => (lower ? \
Int32[85] : Int32[61], Int16[6]),\\n    FastKey(BigInt(11860)) => (lower ? \
Int32[74] : Int32[44], Int16[3]),\\n    FastKey(BigInt(20439)) => (lower ? \
Int32[77] : Int32[68], Int16[-2]),\\n    FastKey(BigInt(20440)) => (lower ? \
Int32[77] : Int32[68], Int16[3]),\\n    FastKey(BigInt(20443)) => (lower ? \
Int32[78,82] : Int32[69,78], Int16[17,17]),\\n    FastKey(BigInt(22426)) => \
(lower ? Int32[79,86] : Int32[70,89], Int16[10,10]),\\n    \
FastKey(BigInt(36378)) => (lower ? Int32[79,86] : Int32[70,89], \
Int16[8,8]),\\n    FastKey(BigInt(36385)) => (lower ? Int32[77] : Int32[68], \
Int16[5]),\\n    FastKey(BigInt(36423)) => (lower ? Int32[84,87] : \
Int32[80,90], Int16[-24,-24]),\\n    FastKey(BigInt(36888)) => (lower ? \
Int32[88] : Int32[91], Int16[6]),\\n    FastKey(BigInt(36903)) => (lower ? \
Int32[77] : Int32[68], Int16[3]),\\n    FastKey(BigInt(55253)) => (lower ? \
Int32[89] : Int32[71], Int16[-2]),\\n    FastKey(BigInt(55254)) => (lower ? \
Int32[89] : Int32[71], Int16[3]),\\n    FastKey(BigInt(55257)) => (lower ? \
Int32[90] : Int32[81], Int16[17]),\\n    FastKey(BigInt(63728)) => (lower ? \
Int32[91] : Int32[92], Int16[10]),\\n    FastKey(BigInt(92459)) => (lower ? \
Int32[91] : Int32[92], Int16[8]),\\n    FastKey(BigInt(92466)) => (lower ? \
Int32[89] : Int32[71], Int16[5]),\\n    FastKey(BigInt(92474)) => (Int32[93], \
Int16[-24]),\\n    FastKey(BigInt(93269)) => (Int32[94], Int16[6]),\\n    \
FastKey(BigInt(93270)) => (lower ? Int32[89] : Int32[71], \
Int16[3]),\\n)\"\>"], "Output",
 CellLabel->"Out[71]=",ExpressionUUID->"f6248117-45a4-bd44-8125-a700d278c700"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCode", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "2"], ",", 
     RowBox[{
      SubscriptBox["x", "1"], 
      SubsuperscriptBox["x", "4", "2"]}], ",", 
     RowBox[{
      SubsuperscriptBox["x", "2", "2"], 
      SubsuperscriptBox["x", "3", "3"]}]}], "}"}], ",", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        RowBox[{"3", 
         SubscriptBox["x", "2"], 
         SubscriptBox["x", "3"]}], "+", 
        RowBox[{"5", 
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"3", "I"}]}], ")"}], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"3", "I"}]}], ")"}], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "-", 
           RowBox[{"2", "I"}]}], ")"}], 
         SubsuperscriptBox[
          OverscriptBox["z", "_"], "2", "2"]}], "-", 
        RowBox[{"8", 
         SubsuperscriptBox["z", "2", "2"]}], "-", 
        RowBox[{"6", "I", " ", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"2", 
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}]}], 
       RowBox[{
        RowBox[{"10", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"8", 
         SubscriptBox["z", "2"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "+", 
           RowBox[{"2", "I"}]}], ")"}], 
         SubsuperscriptBox["z", "2", "2"]}], "-", 
        RowBox[{"8", 
         SubsuperscriptBox[
          OverscriptBox["z", "_"], "2", "2"]}], "+", 
        RowBox[{"6", "I", " ", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"2", 
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}]}], "0", 
       RowBox[{
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}]},
      {
       RowBox[{
        RowBox[{"10", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"8", 
         SubscriptBox["z", "2"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{"6", 
        SubscriptBox["x", "2"], 
        SubscriptBox["x", "4"]}]}
     }], ")"}], ",", "17"}], "]"}]], "Input",
 CellLabel->"In[73]:=",ExpressionUUID->"9283bcaf-c85e-46ef-b754-a6052eb563c8"],

Cell[BoxData["\<\"Dict{FastKey{BigInt},Tuple{Vector{Int32},Vector{Complex{\
Int16}}}}(\\n    FastKey(BigInt(50)) => (Int32[17], Complex{Int16}[-2]),\\n   \
 FastKey(BigInt(51)) => (Int32[17], Complex{Int16}[3]),\\n    \
FastKey(BigInt(57)) => (lower ? Int32[18,19] : Int32[18,20], lower ? \
Complex{Int16}[-6im,10] : Complex{Int16}[6im,10]),\\n    FastKey(BigInt(58)) \
=> (Int32[18], lower ? Complex{Int16}[-im] : Complex{Int16}[im]),\\n    \
FastKey(BigInt(59)) => (lower ? Int32[19] : Int32[20], Complex{Int16}[8]),\\n \
   FastKey(BigInt(60)) => (Int32[18], lower ? Complex{Int16}[-1-8im] : \
Complex{Int16}[-1+8im]),\\n    FastKey(BigInt(66)) => (Int32[17,18], \
Complex{Int16}[5,2]),\\n    FastKey(BigInt(74)) => (lower ? Int32[30] : \
Int32[21], Complex{Int16}[-24]),\\n    FastKey(BigInt(79)) => (lower ? \
Int32[20] : Int32[23], Complex{Int16}[-2]),\\n    FastKey(BigInt(80)) => \
(lower ? Int32[20] : Int32[23], Complex{Int16}[3]),\\n    FastKey(BigInt(83)) \
=> (lower ? Int32[40] : Int32[22], Complex{Int16}[6]),\\n    \
FastKey(BigInt(84)) => (Int32[17], Complex{Int16}[3]),\\n    \
FastKey(BigInt(92)) => (lower ? Int32[21,22,31,41] : Int32[24,25,27,32], \
Complex{Int16}[-6im,10,6im,10]),\\n    FastKey(BigInt(150)) => (lower ? \
Int32[21,31] : Int32[24,27], Complex{Int16}[-im,im]),\\n    \
FastKey(BigInt(151)) => (lower ? Int32[22,41] : Int32[25,32], \
Complex{Int16}[8,8]),\\n    FastKey(BigInt(152)) => (lower ? Int32[21,31] : \
Int32[24,27], Complex{Int16}[-1-8im,-1+8im]),\\n    FastKey(BigInt(158)) => \
(lower ? Int32[20,21,31] : Int32[23,24,27], Complex{Int16}[5,2,2]),\\n    \
FastKey(BigInt(166)) => (lower ? Int32[33,42] : Int32[29,33], \
Complex{Int16}[-24,-24]),\\n    FastKey(BigInt(171)) => (lower ? Int32[50] : \
Int32[26], Complex{Int16}[-2]),\\n    FastKey(BigInt(172)) => (lower ? \
Int32[50] : Int32[26], Complex{Int16}[3]),\\n    FastKey(BigInt(175)) => \
(lower ? Int32[43] : Int32[34], Complex{Int16}[6]),\\n    \
FastKey(BigInt(176)) => (lower ? Int32[20] : Int32[23], \
Complex{Int16}[3]),\\n    FastKey(BigInt(205)) => (lower ? Int32[51,52] : \
Int32[30,35], lower ? Complex{Int16}[-6im,10] : Complex{Int16}[6im,10]),\\n   \
 FastKey(BigInt(396)) => (lower ? Int32[51] : Int32[30], lower ? \
Complex{Int16}[-im] : Complex{Int16}[im]),\\n    FastKey(BigInt(397)) => \
(lower ? Int32[52] : Int32[35], Complex{Int16}[8]),\\n    \
FastKey(BigInt(398)) => (lower ? Int32[51] : Int32[30], lower ? \
Complex{Int16}[-1-8im] : Complex{Int16}[-1+8im]),\\n    FastKey(BigInt(404)) \
=> (lower ? Int32[50,51] : Int32[26,30], Complex{Int16}[5,2]),\\n    \
FastKey(BigInt(412)) => (lower ? Int32[60] : Int32[36], Complex{Int16}[-24]),\
\\n    FastKey(BigInt(421)) => (lower ? Int32[67] : Int32[37], \
Complex{Int16}[6]),\\n    FastKey(BigInt(422)) => (lower ? Int32[50] : \
Int32[26], Complex{Int16}[3]),\\n    FastKey(BigInt(454)) => (lower ? \
Int32[23] : Int32[38], Complex{Int16}[-2]),\\n    FastKey(BigInt(455)) => \
(lower ? Int32[23] : Int32[38], Complex{Int16}[3]),\\n    \
FastKey(BigInt(522)) => (lower ? Int32[24,25,34,44] : Int32[39,40,45,53], \
Complex{Int16}[-6im,10,6im,10]),\\n    FastKey(BigInt(1061)) => (lower ? \
Int32[24,34] : Int32[39,45], Complex{Int16}[-im,im]),\\n    \
FastKey(BigInt(1062)) => (lower ? Int32[25,44] : Int32[40,53], \
Complex{Int16}[8,8]),\\n    FastKey(BigInt(1063)) => (lower ? Int32[24,34] : \
Int32[39,45], Complex{Int16}[-1-8im,-1+8im]),\\n    FastKey(BigInt(1069)) => \
(lower ? Int32[23,24,34] : Int32[38,39,45], Complex{Int16}[5,2,2]),\\n    \
FastKey(BigInt(1107)) => (lower ? Int32[36,45] : Int32[47,54], \
Complex{Int16}[-24,-24]),\\n    FastKey(BigInt(1162)) => (lower ? Int32[53] : \
Int32[41], Complex{Int16}[-2]),\\n    FastKey(BigInt(1163)) => (lower ? \
Int32[53] : Int32[41], Complex{Int16}[3]),\\n    FastKey(BigInt(1166)) => \
(lower ? Int32[46] : Int32[55], Complex{Int16}[6]),\\n    \
FastKey(BigInt(1181)) => (lower ? Int32[23] : Int32[38], \
Complex{Int16}[3]),\\n    FastKey(BigInt(1286)) => (lower ? \
Int32[54,55,61,68] : Int32[42,43,48,56], Complex{Int16}[-6im,10,6im,10]),\\n  \
  FastKey(BigInt(2170)) => (lower ? Int32[26] : Int32[62], \
Complex{Int16}[-2]),\\n    FastKey(BigInt(2171)) => (lower ? Int32[26] : \
Int32[62], Complex{Int16}[3]),\\n    FastKey(BigInt(2567)) => (lower ? \
Int32[54,61] : Int32[42,48], Complex{Int16}[-im,im]),\\n    \
FastKey(BigInt(2568)) => (lower ? Int32[55,68] : Int32[43,56], \
Complex{Int16}[8,8]),\\n    FastKey(BigInt(2569)) => (lower ? Int32[54,61] : \
Int32[42,48], Complex{Int16}[-1-8im,-1+8im]),\\n    FastKey(BigInt(2575)) => \
(lower ? Int32[53,54,61] : Int32[41,42,48], Complex{Int16}[5,2,2]),\\n    \
FastKey(BigInt(2613)) => (lower ? Int32[63,69] : Int32[50,57], \
Complex{Int16}[-24,-24]),\\n    FastKey(BigInt(2672)) => (lower ? Int32[70] : \
Int32[58], Complex{Int16}[6]),\\n    FastKey(BigInt(2687)) => (lower ? \
Int32[53] : Int32[41], Complex{Int16}[3]),\\n    FastKey(BigInt(2693)) => \
(lower ? Int32[27,28,37,47] : Int32[63,64,72,83], \
Complex{Int16}[-6im,10,6im,10]),\\n    FastKey(BigInt(4537)) => (lower ? \
Int32[27,37] : Int32[63,72], Complex{Int16}[-im,im]),\\n    \
FastKey(BigInt(4538)) => (lower ? Int32[28,47] : Int32[64,83], \
Complex{Int16}[8,8]),\\n    FastKey(BigInt(4539)) => (lower ? Int32[27,37] : \
Int32[63,72], Complex{Int16}[-1-8im,-1+8im]),\\n    FastKey(BigInt(4545)) => \
(lower ? Int32[26,27,37] : Int32[62,63,72], Complex{Int16}[5,2,2]),\\n    \
FastKey(BigInt(4553)) => (lower ? Int32[39,48] : Int32[74,84], \
Complex{Int16}[-24,-24]),\\n    FastKey(BigInt(4678)) => (lower ? Int32[56] : \
Int32[65], Complex{Int16}[-2]),\\n    FastKey(BigInt(4679)) => (lower ? \
Int32[56] : Int32[65], Complex{Int16}[3]),\\n    FastKey(BigInt(4682)) => \
(lower ? Int32[49] : Int32[85], Complex{Int16}[6]),\\n    \
FastKey(BigInt(4683)) => (lower ? Int32[26] : Int32[62], \
Complex{Int16}[3]),\\n    FastKey(BigInt(5663)) => (lower ? \
Int32[57,58,64,71] : Int32[66,67,75,86], Complex{Int16}[-6im,10,6im,10]),\\n  \
  FastKey(BigInt(5813)) => (lower ? Int32[74] : Int32[44], \
Complex{Int16}[-2]),\\n    FastKey(BigInt(5814)) => (lower ? Int32[74] : \
Int32[44], Complex{Int16}[3]),\\n    FastKey(BigInt(6223)) => (lower ? \
Int32[75,76] : Int32[51,59], lower ? Complex{Int16}[-6im,10] : \
Complex{Int16}[6im,10]),\\n    FastKey(BigInt(9256)) => (lower ? Int32[57,64] \
: Int32[66,75], Complex{Int16}[-im,im]),\\n    FastKey(BigInt(9257)) => \
(lower ? Int32[58,71] : Int32[67,86], Complex{Int16}[8,8]),\\n    \
FastKey(BigInt(9258)) => (lower ? Int32[57,64] : Int32[66,75], \
Complex{Int16}[-1-8im,-1+8im]),\\n    FastKey(BigInt(9264)) => (lower ? \
Int32[56,57,64] : Int32[65,66,75], Complex{Int16}[5,2,2]),\\n    \
FastKey(BigInt(9272)) => (lower ? Int32[66,72] : Int32[77,87], \
Complex{Int16}[-24,-24]),\\n    FastKey(BigInt(9401)) => (lower ? Int32[73] : \
Int32[88], Complex{Int16}[6]),\\n    FastKey(BigInt(9402)) => (lower ? \
Int32[56] : Int32[65], Complex{Int16}[3]),\\n    FastKey(BigInt(11398)) => \
(lower ? Int32[75] : Int32[51], lower ? Complex{Int16}[-im] : \
Complex{Int16}[im]),\\n    FastKey(BigInt(11399)) => (lower ? Int32[76] : \
Int32[59], Complex{Int16}[8]),\\n    FastKey(BigInt(11400)) => (lower ? \
Int32[75] : Int32[51], lower ? Complex{Int16}[-1-8im] : \
Complex{Int16}[-1+8im]),\\n    FastKey(BigInt(11406)) => (lower ? \
Int32[74,75] : Int32[44,51], Complex{Int16}[5,2]),\\n    \
FastKey(BigInt(11535)) => (lower ? Int32[81] : Int32[60], \
Complex{Int16}[-24]),\\n    FastKey(BigInt(11790)) => (lower ? Int32[85] : \
Int32[61], Complex{Int16}[6]),\\n    FastKey(BigInt(11860)) => (lower ? \
Int32[74] : Int32[44], Complex{Int16}[3]),\\n    FastKey(BigInt(20439)) => \
(lower ? Int32[77] : Int32[68], Complex{Int16}[-2]),\\n    \
FastKey(BigInt(20440)) => (lower ? Int32[77] : Int32[68], Complex{Int16}[3]),\
\\n    FastKey(BigInt(22426)) => (lower ? Int32[78,79,82,86] : \
Int32[69,70,78,89], Complex{Int16}[-6im,10,6im,10]),\\n    \
FastKey(BigInt(36377)) => (lower ? Int32[78,82] : Int32[69,78], \
Complex{Int16}[-im,im]),\\n    FastKey(BigInt(36378)) => (lower ? \
Int32[79,86] : Int32[70,89], Complex{Int16}[8,8]),\\n    \
FastKey(BigInt(36379)) => (lower ? Int32[78,82] : Int32[69,78], \
Complex{Int16}[-1-8im,-1+8im]),\\n    FastKey(BigInt(36385)) => (lower ? \
Int32[77,78,82] : Int32[68,69,78], Complex{Int16}[5,2,2]),\\n    \
FastKey(BigInt(36423)) => (lower ? Int32[84,87] : Int32[80,90], \
Complex{Int16}[-24,-24]),\\n    FastKey(BigInt(36888)) => (lower ? Int32[88] \
: Int32[91], Complex{Int16}[6]),\\n    FastKey(BigInt(36903)) => (lower ? \
Int32[77] : Int32[68], Complex{Int16}[3]),\\n    FastKey(BigInt(55253)) => \
(lower ? Int32[89] : Int32[71], Complex{Int16}[-2]),\\n    \
FastKey(BigInt(55254)) => (lower ? Int32[89] : Int32[71], Complex{Int16}[3]),\
\\n    FastKey(BigInt(63728)) => (lower ? Int32[90,91] : Int32[81,92], lower \
? Complex{Int16}[-6im,10] : Complex{Int16}[6im,10]),\\n    \
FastKey(BigInt(92458)) => (lower ? Int32[90] : Int32[81], lower ? \
Complex{Int16}[-im] : Complex{Int16}[im]),\\n    FastKey(BigInt(92459)) => \
(lower ? Int32[91] : Int32[92], Complex{Int16}[8]),\\n    \
FastKey(BigInt(92460)) => (lower ? Int32[90] : Int32[81], lower ? \
Complex{Int16}[-1-8im] : Complex{Int16}[-1+8im]),\\n    \
FastKey(BigInt(92466)) => (lower ? Int32[89,90] : Int32[71,81], \
Complex{Int16}[5,2]),\\n    FastKey(BigInt(92474)) => (Int32[93], \
Complex{Int16}[-24]),\\n    FastKey(BigInt(93269)) => (Int32[94], \
Complex{Int16}[6]),\\n    FastKey(BigInt(93270)) => (lower ? Int32[89] : \
Int32[71], Complex{Int16}[3]),\\n)\"\>"], "Output",
 CellLabel->"Out[73]=",ExpressionUUID->"dac7d82c-b773-9e41-9801-3240d1a8be16"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCode", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "2"], ",", 
     RowBox[{
      SubscriptBox["x", "1"], 
      SubsuperscriptBox["x", "4", "2"]}], ",", 
     RowBox[{
      SubsuperscriptBox["x", "2", "2"], 
      SubsuperscriptBox["x", "3", "3"]}]}], "}"}], ",", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        RowBox[{"3", 
         SubscriptBox["x", "2"], 
         SubscriptBox["x", "3"]}], "+", 
        RowBox[{"5", 
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"3", "I"}]}], ")"}], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"3", "I"}]}], ")"}], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "-", 
           RowBox[{"2", "I"}]}], ")"}], 
         SubsuperscriptBox[
          OverscriptBox["z", "_"], "2", "2"]}], "-", 
        RowBox[{"8", 
         SubsuperscriptBox["z", "2", "2"]}], "-", 
        RowBox[{"6", "I", " ", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"2", 
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}]}], 
       RowBox[{
        RowBox[{"10", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"8", 
         SubscriptBox["z", "2"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "+", 
           RowBox[{"2", "I"}]}], ")"}], 
         SubsuperscriptBox["z", "2", "2"]}], "-", 
        RowBox[{"8", 
         SubsuperscriptBox[
          OverscriptBox["z", "_"], "2", "2"]}], "+", 
        RowBox[{"6", "I", " ", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"2", 
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}]}], "0", 
       RowBox[{
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}]},
      {
       RowBox[{
        RowBox[{"10", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"8", 
         SubscriptBox["z", "2"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{"6", 
        SubscriptBox["x", "2"], 
        SubscriptBox["x", "4"]}]}
     }], ")"}], ",", "17", ",", "True", ",", 
   RowBox[{"Complexes", "->", "Reals"}]}], "]"}]], "Input",
 CellLabel->"In[75]:=",ExpressionUUID->"5e1b5531-11d2-405e-8519-0693fd21e630"],

Cell[BoxData["\<\"Dict{FastKey{BigInt},Tuple{Vector{Int32},Vector{Int16}}}(\\\
n    FastKey(BigInt(50)) => (lower ? Int32[17,239] : Int32[17,107], \
Int16[-2,-2]),\\n    FastKey(BigInt(51)) => (lower ? Int32[17,239] : \
Int32[17,107], Int16[3,3]),\\n    FastKey(BigInt(57)) => (lower ? \
Int32[19,30,52,241] : Int32[20,96,108,134], lower ? Int16[10,6,-6,10] : \
Int16[10,-6,6,10]),\\n    FastKey(BigInt(58)) => (lower ? Int32[30,52] : \
Int32[96,108], lower ? Int16[1,-1] : Int16[-1,1]),\\n    FastKey(BigInt(59)) \
=> (lower ? Int32[19,241] : Int32[20,134], Int16[8,8]),\\n    \
FastKey(BigInt(60)) => (lower ? Int32[18,30,52,240] : Int32[18,96,108,120], \
lower ? Int16[-1,8,-8,-1] : Int16[-1,-8,8,-1]),\\n    FastKey(BigInt(66)) => \
(lower ? Int32[17,18,239,240] : Int32[17,18,107,120], Int16[5,2,5,2]),\\n    \
FastKey(BigInt(74)) => (lower ? Int32[42,252] : Int32[21,135], \
Int16[-24,-24]),\\n    FastKey(BigInt(79)) => (lower ? Int32[20,242] : \
Int32[23,149], Int16[-2,-2]),\\n    FastKey(BigInt(80)) => (lower ? \
Int32[20,242] : Int32[23,149], Int16[3,3]),\\n    FastKey(BigInt(83)) => \
(lower ? Int32[64,262] : Int32[22,136], Int16[6,6]),\\n    \
FastKey(BigInt(84)) => (lower ? Int32[17,239] : Int32[17,107], \
Int16[3,3]),\\n    FastKey(BigInt(92)) => (lower ? \
Int32[22,33,55,65,96,115,244,263] : Int32[25,32,99,111,138,151,153,182], \
lower ? Int16[10,6,-6,10,6,-6,10,10] : Int16[10,10,-6,6,-6,10,6,10]),\\n    \
FastKey(BigInt(150)) => (lower ? Int32[33,55,96,115] : Int32[99,111,138,153], \
lower ? Int16[1,-1,1,-1] : Int16[-1,1,-1,1]),\\n    FastKey(BigInt(151)) => \
(lower ? Int32[22,65,244,263] : Int32[25,32,151,182], Int16[8,8,8,8]),\\n    \
FastKey(BigInt(152)) => (lower ? Int32[21,33,43,55,96,115,243,253] : \
Int32[24,27,99,111,138,150,153,165], lower ? Int16[-1,8,-1,-8,8,-8,-1,-1] : \
Int16[-1,-1,-8,8,-8,-1,8,-1]),\\n    FastKey(BigInt(158)) => (lower ? \
Int32[20,21,43,242,243,253] : Int32[23,24,27,149,150,165], \
Int16[5,2,2,5,2,2]),\\n    FastKey(BigInt(166)) => (lower ? \
Int32[45,66,255,264] : Int32[29,33,167,183], Int16[-24,-24,-24,-24]),\\n    \
FastKey(BigInt(171)) => (lower ? Int32[86,272] : Int32[26,152], \
Int16[-2,-2]),\\n    FastKey(BigInt(172)) => (lower ? Int32[86,272] : \
Int32[26,152], Int16[3,3]),\\n    FastKey(BigInt(175)) => (lower ? \
Int32[67,265] : Int32[34,184], Int16[6,6]),\\n    FastKey(BigInt(176)) => \
(lower ? Int32[20,242] : Int32[23,149], Int16[3,3]),\\n    \
FastKey(BigInt(205)) => (lower ? Int32[88,99,118,274] : \
Int32[35,141,156,185], lower ? Int16[10,6,-6,10] : Int16[10,-6,6,10]),\\n    \
FastKey(BigInt(396)) => (lower ? Int32[99,118] : Int32[141,156], lower ? \
Int16[1,-1] : Int16[-1,1]),\\n    FastKey(BigInt(397)) => (lower ? \
Int32[88,274] : Int32[35,185], Int16[8,8]),\\n    FastKey(BigInt(398)) => \
(lower ? Int32[87,99,118,273] : Int32[30,141,156,168], lower ? \
Int16[-1,8,-8,-1] : Int16[-1,-8,8,-1]),\\n    FastKey(BigInt(404)) => (lower \
? Int32[86,87,272,273] : Int32[26,30,152,168], Int16[5,2,5,2]),\\n    \
FastKey(BigInt(412)) => (lower ? Int32[108,282] : Int32[36,186], \
Int16[-24,-24]),\\n    FastKey(BigInt(421)) => (lower ? Int32[127,289] : \
Int32[37,187], Int16[6,6]),\\n    FastKey(BigInt(422)) => (lower ? \
Int32[86,272] : Int32[26,152], Int16[3,3]),\\n    FastKey(BigInt(454)) => \
(lower ? Int32[23,245] : Int32[38,200], Int16[-2,-2]),\\n    \
FastKey(BigInt(455)) => (lower ? Int32[23,245] : Int32[38,200], \
Int16[3,3]),\\n    FastKey(BigInt(522)) => (lower ? \
Int32[25,36,58,68,153,169,247,266] : Int32[40,53,102,114,189,202,207,239], \
lower ? Int16[10,6,-6,10,6,-6,10,10] : Int16[10,10,-6,6,-6,10,6,10]),\\n    \
FastKey(BigInt(1061)) => (lower ? Int32[36,58,153,169] : \
Int32[102,114,189,207], lower ? Int16[1,-1,1,-1] : Int16[-1,1,-1,1]),\\n    \
FastKey(BigInt(1062)) => (lower ? Int32[25,68,247,266] : \
Int32[40,53,202,239], Int16[8,8,8,8]),\\n    FastKey(BigInt(1063)) => (lower \
? Int32[24,36,46,58,153,169,246,256] : Int32[39,45,102,114,189,201,207,219], \
lower ? Int16[-1,8,-1,-8,8,-8,-1,-1] : Int16[-1,-1,-8,8,-8,-1,8,-1]),\\n    \
FastKey(BigInt(1069)) => (lower ? Int32[23,24,46,245,246,256] : \
Int32[38,39,45,200,201,219], Int16[5,2,2,5,2,2]),\\n    FastKey(BigInt(1107)) \
=> (lower ? Int32[48,69,258,267] : Int32[47,54,221,240], \
Int16[-24,-24,-24,-24]),\\n    FastKey(BigInt(1162)) => (lower ? \
Int32[89,275] : Int32[41,203], Int16[-2,-2]),\\n    FastKey(BigInt(1163)) => \
(lower ? Int32[89,275] : Int32[41,203], Int16[3,3]),\\n    \
FastKey(BigInt(1166)) => (lower ? Int32[70,268] : Int32[55,241], Int16[6,6]),\
\\n    FastKey(BigInt(1181)) => (lower ? Int32[23,245] : Int32[38,200], \
Int16[3,3]),\\n    FastKey(BigInt(1286)) => (lower ? \
Int32[91,102,121,128,156,172,277,290] : Int32[43,56,144,159,192,205,210,242], \
lower ? Int16[10,6,-6,10,6,-6,10,10] : Int16[10,10,-6,6,-6,10,6,10]),\\n    \
FastKey(BigInt(2170)) => (lower ? Int32[26,248] : Int32[62,260], \
Int16[-2,-2]),\\n    FastKey(BigInt(2171)) => (lower ? Int32[26,248] : \
Int32[62,260], Int16[3,3]),\\n    FastKey(BigInt(2567)) => (lower ? \
Int32[102,121,156,172] : Int32[144,159,192,210], lower ? Int16[1,-1,1,-1] : \
Int16[-1,1,-1,1]),\\n    FastKey(BigInt(2568)) => (lower ? \
Int32[91,128,277,290] : Int32[43,56,205,242], Int16[8,8,8,8]),\\n    \
FastKey(BigInt(2569)) => (lower ? Int32[90,102,109,121,156,172,276,283] : \
Int32[42,48,144,159,192,204,210,222], lower ? Int16[-1,8,-1,-8,8,-8,-1,-1] : \
Int16[-1,-1,-8,8,-8,-1,8,-1]),\\n    FastKey(BigInt(2575)) => (lower ? \
Int32[89,90,109,275,276,283] : Int32[41,42,48,203,204,222], \
Int16[5,2,2,5,2,2]),\\n    FastKey(BigInt(2613)) => (lower ? \
Int32[111,129,285,291] : Int32[50,57,224,243], Int16[-24,-24,-24,-24]),\\n    \
FastKey(BigInt(2672)) => (lower ? Int32[130,292] : Int32[58,244], \
Int16[6,6]),\\n    FastKey(BigInt(2687)) => (lower ? Int32[89,275] : \
Int32[41,203], Int16[3,3]),\\n    FastKey(BigInt(2693)) => (lower ? \
Int32[28,39,61,71,201,214,250,269] : Int32[64,83,105,117,249,262,270,305], \
lower ? Int16[10,6,-6,10,6,-6,10,10] : Int16[10,10,-6,6,-6,10,6,10]),\\n    \
FastKey(BigInt(4537)) => (lower ? Int32[39,61,201,214] : \
Int32[105,117,249,270], lower ? Int16[1,-1,1,-1] : Int16[-1,1,-1,1]),\\n    \
FastKey(BigInt(4538)) => (lower ? Int32[28,71,250,269] : \
Int32[64,83,262,305], Int16[8,8,8,8]),\\n    FastKey(BigInt(4539)) => (lower \
? Int32[27,39,49,61,201,214,249,259] : Int32[63,72,105,117,249,261,270,282], \
lower ? Int16[-1,8,-1,-8,8,-8,-1,-1] : Int16[-1,-1,-8,8,-8,-1,8,-1]),\\n    \
FastKey(BigInt(4545)) => (lower ? Int32[26,27,49,248,249,259] : \
Int32[62,63,72,260,261,282], Int16[5,2,2,5,2,2]),\\n    FastKey(BigInt(4553)) \
=> (lower ? Int32[51,72,261,270] : Int32[74,84,284,306], \
Int16[-24,-24,-24,-24]),\\n    FastKey(BigInt(4678)) => (lower ? \
Int32[92,278] : Int32[65,263], Int16[-2,-2]),\\n    FastKey(BigInt(4679)) => \
(lower ? Int32[92,278] : Int32[65,263], Int16[3,3]),\\n    \
FastKey(BigInt(4682)) => (lower ? Int32[73,271] : Int32[85,307], Int16[6,6]),\
\\n    FastKey(BigInt(4683)) => (lower ? Int32[26,248] : Int32[62,260], \
Int16[3,3]),\\n    FastKey(BigInt(5663)) => (lower ? \
Int32[94,105,124,131,204,217,280,293] : Int32[67,86,147,162,252,265,273,308], \
lower ? Int16[10,6,-6,10,6,-6,10,10] : Int16[10,10,-6,6,-6,10,6,10]),\\n    \
FastKey(BigInt(5813)) => (lower ? Int32[146,296] : Int32[44,206], \
Int16[-2,-2]),\\n    FastKey(BigInt(5814)) => (lower ? Int32[146,296] : \
Int32[44,206], Int16[3,3]),\\n    FastKey(BigInt(6223)) => (lower ? \
Int32[148,159,175,298] : Int32[59,195,213,245], lower ? Int16[10,6,-6,10] : \
Int16[10,-6,6,10]),\\n    FastKey(BigInt(9256)) => (lower ? \
Int32[105,124,204,217] : Int32[147,162,252,273], lower ? Int16[1,-1,1,-1] : \
Int16[-1,1,-1,1]),\\n    FastKey(BigInt(9257)) => (lower ? \
Int32[94,131,280,293] : Int32[67,86,265,308], Int16[8,8,8,8]),\\n    \
FastKey(BigInt(9258)) => (lower ? Int32[93,105,112,124,204,217,279,286] : \
Int32[66,75,147,162,252,264,273,285], lower ? Int16[-1,8,-1,-8,8,-8,-1,-1] : \
Int16[-1,-1,-8,8,-8,-1,8,-1]),\\n    FastKey(BigInt(9264)) => (lower ? \
Int32[92,93,112,278,279,286] : Int32[65,66,75,263,264,285], \
Int16[5,2,2,5,2,2]),\\n    FastKey(BigInt(9272)) => (lower ? \
Int32[114,132,288,294] : Int32[77,87,287,309], Int16[-24,-24,-24,-24]),\\n    \
FastKey(BigInt(9401)) => (lower ? Int32[133,295] : Int32[88,310], \
Int16[6,6]),\\n    FastKey(BigInt(9402)) => (lower ? Int32[92,278] : \
Int32[65,263], Int16[3,3]),\\n    FastKey(BigInt(11398)) => (lower ? \
Int32[159,175] : Int32[195,213], lower ? Int16[1,-1] : Int16[-1,1]),\\n    \
FastKey(BigInt(11399)) => (lower ? Int32[148,298] : Int32[59,245], \
Int16[8,8]),\\n    FastKey(BigInt(11400)) => (lower ? Int32[147,159,175,297] \
: Int32[51,195,213,225], lower ? Int16[-1,8,-8,-1] : Int16[-1,-8,8,-1]),\\n   \
 FastKey(BigInt(11406)) => (lower ? Int32[146,147,296,297] : \
Int32[44,51,206,225], Int16[5,2,5,2]),\\n    FastKey(BigInt(11535)) => (lower \
? Int32[165,303] : Int32[60,246], Int16[-24,-24]),\\n    \
FastKey(BigInt(11790)) => (lower ? Int32[181,307] : Int32[61,247], \
Int16[6,6]),\\n    FastKey(BigInt(11860)) => (lower ? Int32[146,296] : \
Int32[44,206], Int16[3,3]),\\n    FastKey(BigInt(20439)) => (lower ? \
Int32[149,299] : Int32[68,266], Int16[-2,-2]),\\n    FastKey(BigInt(20440)) \
=> (lower ? Int32[149,299] : Int32[68,266], Int16[3,3]),\\n    \
FastKey(BigInt(22426)) => (lower ? Int32[151,162,178,182,207,220,301,308] : \
Int32[70,89,198,216,255,268,276,311], lower ? Int16[10,6,-6,10,6,-6,10,10] : \
Int16[10,10,-6,6,-6,10,6,10]),\\n    FastKey(BigInt(36377)) => (lower ? \
Int32[162,178,207,220] : Int32[198,216,255,276], lower ? Int16[1,-1,1,-1] : \
Int16[-1,1,-1,1]),\\n    FastKey(BigInt(36378)) => (lower ? \
Int32[151,182,301,308] : Int32[70,89,268,311], Int16[8,8,8,8]),\\n    \
FastKey(BigInt(36379)) => (lower ? Int32[150,162,166,178,207,220,300,304] : \
Int32[69,78,198,216,255,267,276,288], lower ? Int16[-1,8,-1,-8,8,-8,-1,-1] : \
Int16[-1,-1,-8,8,-8,-1,8,-1]),\\n    FastKey(BigInt(36385)) => (lower ? \
Int32[149,150,166,299,300,304] : Int32[68,69,78,266,267,288], \
Int16[5,2,2,5,2,2]),\\n    FastKey(BigInt(36423)) => (lower ? \
Int32[168,183,306,309] : Int32[80,90,290,312], Int16[-24,-24,-24,-24]),\\n    \
FastKey(BigInt(36888)) => (lower ? Int32[184,310] : Int32[91,313], \
Int16[6,6]),\\n    FastKey(BigInt(36903)) => (lower ? Int32[149,299] : \
Int32[68,266], Int16[3,3]),\\n    FastKey(BigInt(55253)) => (lower ? \
Int32[197,311] : Int32[71,269], Int16[-2,-2]),\\n    FastKey(BigInt(55254)) \
=> (lower ? Int32[197,311] : Int32[71,269], Int16[3,3]),\\n    \
FastKey(BigInt(63728)) => (lower ? Int32[199,210,223,313] : \
Int32[92,258,279,314], lower ? Int16[10,6,-6,10] : Int16[10,-6,6,10]),\\n    \
FastKey(BigInt(92458)) => (lower ? Int32[210,223] : Int32[258,279], lower ? \
Int16[1,-1] : Int16[-1,1]),\\n    FastKey(BigInt(92459)) => (lower ? \
Int32[199,313] : Int32[92,314], Int16[8,8]),\\n    FastKey(BigInt(92460)) => \
(lower ? Int32[198,210,223,312] : Int32[81,258,279,291], lower ? \
Int16[-1,8,-8,-1] : Int16[-1,-8,8,-1]),\\n    FastKey(BigInt(92466)) => \
(lower ? Int32[197,198,311,312] : Int32[71,81,269,291], Int16[5,2,5,2]),\\n   \
 FastKey(BigInt(92474)) => (lower ? Int32[213,315] : Int32[93,315], \
Int16[-24,-24]),\\n    FastKey(BigInt(93269)) => (lower ? Int32[226,316] : \
Int32[94,316], Int16[6,6]),\\n    FastKey(BigInt(93270)) => (lower ? \
Int32[197,311] : Int32[71,269], Int16[3,3]),\\n)\"\>"], "Output",
 CellLabel->"Out[75]=",ExpressionUUID->"d5954d86-3d82-6346-8754-f127dcb177d1"]
}, Closed]],

Cell["complex-valued basis", "Text",ExpressionUUID->"dee011a6-1da2-3447-97e6-1ddaa299b9e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCode", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "2"], ",", 
     RowBox[{
      SubscriptBox["z", "1"], 
      SubsuperscriptBox["x", "4", "2"]}], ",", 
     RowBox[{
      SubsuperscriptBox["z", "2", "2"], 
      SubsuperscriptBox["x", "3", "3"]}]}], "}"}], ",", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", 
      SubscriptBox["x", "2"], 
      SubscriptBox["x", "3"]}], "+", 
     RowBox[{"8", 
      SubscriptBox["z", "1"], 
      SubscriptBox[
       OverscriptBox["z", "_"], "1"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"6", "I"}]}], ")"}], 
      SubscriptBox["z", "2"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"6", "I"}]}], ")"}], 
      SubscriptBox[
       OverscriptBox["z", "_"], "2"]}]}], ")"}], ",", "17"}], "]"}]], "Input",\

 CellLabel->"In[76]:=",ExpressionUUID->"aaa08ca9-425e-5447-b120-b2b382c17574"],

Cell[BoxData["\<\"Dict{FastKey{BigInt},Tuple{Vector{Int32},Vector{Complex{\
Int16}}}}(\\n    FastKey(BigInt(50)) => (Int32[17], Complex{Int16}[-2]),\\n   \
 FastKey(BigInt(51)) => (Int32[17], Complex{Int16}[6]),\\n    \
FastKey(BigInt(66)) => (Int32[17], Complex{Int16}[8]),\\n    \
FastKey(BigInt(79)) => (Int32[18], Complex{Int16}[-2]),\\n    \
FastKey(BigInt(80)) => (Int32[18], Complex{Int16}[6]),\\n    \
FastKey(BigInt(84)) => (Int32[17], Complex{Int16}[4]),\\n    \
FastKey(BigInt(158)) => (Int32[18], Complex{Int16}[8]),\\n    \
FastKey(BigInt(171)) => (lower ? Int32[21] : Int32[19], \
Complex{Int16}[-2]),\\n    FastKey(BigInt(172)) => (lower ? Int32[21] : \
Int32[19], Complex{Int16}[6]),\\n    FastKey(BigInt(176)) => (Int32[18], \
Complex{Int16}[4]),\\n    FastKey(BigInt(272)) => (lower ? Int32[19] : \
Int32[20], lower ? Complex{Int16}[-1+3im] : Complex{Int16}[-1-3im]),\\n    \
FastKey(BigInt(273)) => (lower ? Int32[19] : Int32[20], lower ? \
Complex{Int16}[-1-3im] : Complex{Int16}[-1+3im]),\\n    FastKey(BigInt(275)) \
=> (lower ? Int32[19] : Int32[20], lower ? Complex{Int16}[-3+im] : \
Complex{Int16}[-3-im]),\\n    FastKey(BigInt(276)) => (lower ? Int32[19] : \
Int32[20], lower ? Complex{Int16}[3+im] : Complex{Int16}[3-im]),\\n    \
FastKey(BigInt(404)) => (lower ? Int32[21] : Int32[19], \
Complex{Int16}[8]),\\n    FastKey(BigInt(422)) => (lower ? Int32[21] : \
Int32[19], Complex{Int16}[4]),\\n    FastKey(BigInt(650)) => (lower ? \
Int32[19] : Int32[20], Complex{Int16}[4]),\\n    FastKey(BigInt(653)) => \
(lower ? Int32[19] : Int32[20], lower ? Complex{Int16}[-4im] : \
Complex{Int16}[4im]),\\n    FastKey(BigInt(854)) => (lower ? Int32[22] : \
Int32[21], lower ? Complex{Int16}[-1+3im] : Complex{Int16}[-1-3im]),\\n    \
FastKey(BigInt(855)) => (lower ? Int32[22] : Int32[21], lower ? \
Complex{Int16}[-1-3im] : Complex{Int16}[-1+3im]),\\n    FastKey(BigInt(857)) \
=> (lower ? Int32[22] : Int32[21], lower ? Complex{Int16}[-3+im] : \
Complex{Int16}[-3-im]),\\n    FastKey(BigInt(858)) => (lower ? Int32[22] : \
Int32[21], lower ? Complex{Int16}[3+im] : Complex{Int16}[3-im]),\\n    \
FastKey(BigInt(898)) => (lower ? Int32[19] : Int32[20], \
Complex{Int16}[2]),\\n    FastKey(BigInt(899)) => (lower ? Int32[19] : \
Int32[20], lower ? Complex{Int16}[-2im] : Complex{Int16}[2im]),\\n    \
FastKey(BigInt(1742)) => (lower ? Int32[20] : Int32[23], lower ? \
Complex{Int16}[-1+3im] : Complex{Int16}[-1-3im]),\\n    FastKey(BigInt(1743)) \
=> (lower ? Int32[20] : Int32[23], lower ? Complex{Int16}[-1-3im] : \
Complex{Int16}[-1+3im]),\\n    FastKey(BigInt(1744)) => (lower ? Int32[20] : \
Int32[23], lower ? Complex{Int16}[-3+im] : Complex{Int16}[-3-im]),\\n    \
FastKey(BigInt(1745)) => (lower ? Int32[20] : Int32[23], lower ? \
Complex{Int16}[3+im] : Complex{Int16}[3-im]),\\n    FastKey(BigInt(1904)) => \
(lower ? Int32[22] : Int32[21], Complex{Int16}[4]),\\n    \
FastKey(BigInt(1907)) => (lower ? Int32[22] : Int32[21], lower ? \
Complex{Int16}[-4im] : Complex{Int16}[4im]),\\n    FastKey(BigInt(2152)) => \
(lower ? Int32[22] : Int32[21], Complex{Int16}[2]),\\n    \
FastKey(BigInt(2153)) => (lower ? Int32[22] : Int32[21], lower ? \
Complex{Int16}[-2im] : Complex{Int16}[2im]),\\n    FastKey(BigInt(3360)) => \
(lower ? Int32[24] : Int32[22], Complex{Int16}[-2]),\\n    \
FastKey(BigInt(3361)) => (lower ? Int32[24] : Int32[22], \
Complex{Int16}[6]),\\n    FastKey(BigInt(3737)) => (lower ? Int32[20] : \
Int32[23], Complex{Int16}[4]),\\n    FastKey(BigInt(3739)) => (lower ? \
Int32[20] : Int32[23], lower ? Complex{Int16}[-4im] : \
Complex{Int16}[4im]),\\n    FastKey(BigInt(4250)) => (lower ? Int32[23] : \
Int32[24], lower ? Complex{Int16}[-1+3im] : Complex{Int16}[-1-3im]),\\n    \
FastKey(BigInt(4251)) => (lower ? Int32[23] : Int32[24], lower ? \
Complex{Int16}[-1-3im] : Complex{Int16}[-1+3im]),\\n    FastKey(BigInt(4252)) \
=> (lower ? Int32[23] : Int32[24], lower ? Complex{Int16}[-3+im] : \
Complex{Int16}[-3-im]),\\n    FastKey(BigInt(4253)) => (lower ? Int32[23] : \
Int32[24], lower ? Complex{Int16}[3+im] : Complex{Int16}[3-im]),\\n    \
FastKey(BigInt(4285)) => (lower ? Int32[20] : Int32[23], \
Complex{Int16}[2]),\\n    FastKey(BigInt(4287)) => (lower ? Int32[20] : \
Int32[23], lower ? Complex{Int16}[-2im] : Complex{Int16}[2im]),\\n    \
FastKey(BigInt(6939)) => (lower ? Int32[24] : Int32[22], \
Complex{Int16}[8]),\\n    FastKey(BigInt(8304)) => (lower ? Int32[24] : \
Int32[22], Complex{Int16}[4]),\\n    FastKey(BigInt(8456)) => (lower ? \
Int32[23] : Int32[24], Complex{Int16}[4]),\\n    FastKey(BigInt(8458)) => \
(lower ? Int32[23] : Int32[24], lower ? Complex{Int16}[-4im] : \
Complex{Int16}[4im]),\\n    FastKey(BigInt(9004)) => (lower ? Int32[23] : \
Int32[24], Complex{Int16}[2]),\\n    FastKey(BigInt(9006)) => (lower ? \
Int32[23] : Int32[24], lower ? Complex{Int16}[-2im] : \
Complex{Int16}[2im]),\\n    FastKey(BigInt(14606)) => (Int32[25], lower ? \
Complex{Int16}[-1-3im] : Complex{Int16}[-1+3im]),\\n    \
FastKey(BigInt(14607)) => (Int32[25], lower ? Complex{Int16}[-1+3im] : \
Complex{Int16}[-1-3im]),\\n    FastKey(BigInt(14614)) => (Int32[25], lower ? \
Complex{Int16}[-3-im] : Complex{Int16}[-3+im]),\\n    FastKey(BigInt(14615)) \
=> (Int32[25], lower ? Complex{Int16}[3-im] : Complex{Int16}[3+im]),\\n    \
FastKey(BigInt(26806)) => (Int32[25], Complex{Int16}[4]),\\n    \
FastKey(BigInt(26814)) => (Int32[25], lower ? Complex{Int16}[4im] : \
Complex{Int16}[-4im]),\\n    FastKey(BigInt(29209)) => (Int32[25], \
Complex{Int16}[2]),\\n    FastKey(BigInt(29213)) => (Int32[25], lower ? \
Complex{Int16}[2im] : Complex{Int16}[-2im]),\\n    FastKey(BigInt(47925)) => \
(Int32[26], Complex{Int16}[-2]),\\n    FastKey(BigInt(47926)) => (Int32[26], \
Complex{Int16}[6]),\\n    FastKey(BigInt(81393)) => (Int32[26], \
Complex{Int16}[8]),\\n    FastKey(BigInt(86063)) => (Int32[26], \
Complex{Int16}[4]),\\n)\"\>"], "Output",
 CellLabel->"Out[76]=",ExpressionUUID->"3fd7a9a1-43c8-af47-8b55-409170025410"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCode", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "2"], ",", 
     RowBox[{
      SubscriptBox["z", "1"], 
      SubsuperscriptBox["x", "4", "2"]}], ",", 
     RowBox[{
      SubsuperscriptBox["z", "2", "2"], 
      SubsuperscriptBox["x", "3", "3"]}]}], "}"}], ",", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        RowBox[{"4", 
         SubscriptBox["x", "2"], 
         SubscriptBox["x", "3"]}], "+", 
        RowBox[{"8", 
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"6", "I"}]}], ")"}], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"6", "I"}]}], ")"}], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{"18", 
        SubscriptBox["x", "4"]}], 
       RowBox[{
        RowBox[{"10", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"8", 
         SubscriptBox["z", "2"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}]},
      {
       RowBox[{"18", 
        SubscriptBox["x", "4"]}], "0", 
       RowBox[{
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}]},
      {
       RowBox[{
        RowBox[{"10", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"8", 
         SubscriptBox["z", "2"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{"6", 
        SubscriptBox["x", "2"], 
        SubscriptBox["x", "4"]}]}
     }], ")"}], ",", "17"}], "]"}]], "Input",
 CellLabel->"In[77]:=",ExpressionUUID->"55d26e74-e959-6141-b67a-4a0575684668"],

Cell[BoxData["\<\"Dict{FastKey{BigInt},Tuple{Vector{Int32},Vector{Complex{\
Int16}}}}(\\n    FastKey(BigInt(50)) => (Int32[17], Complex{Int16}[-2]),\\n   \
 FastKey(BigInt(51)) => (Int32[17], Complex{Int16}[6]),\\n    \
FastKey(BigInt(54)) => (Int32[18], Complex{Int16}[18]),\\n    \
FastKey(BigInt(57)) => (lower ? Int32[19] : Int32[20], \
Complex{Int16}[10]),\\n    FastKey(BigInt(59)) => (lower ? Int32[19] : \
Int32[20], Complex{Int16}[8]),\\n    FastKey(BigInt(66)) => (Int32[17], \
Complex{Int16}[8]),\\n    FastKey(BigInt(74)) => (lower ? Int32[30] : \
Int32[21], Complex{Int16}[-24]),\\n    FastKey(BigInt(79)) => (lower ? \
Int32[20] : Int32[23], Complex{Int16}[-2]),\\n    FastKey(BigInt(80)) => \
(lower ? Int32[20] : Int32[23], Complex{Int16}[6]),\\n    FastKey(BigInt(83)) \
=> (lower ? Int32[21,31,40] : Int32[22,24,27], lower ? \
Complex{Int16}[18,18,6] : Complex{Int16}[6,18,18]),\\n    FastKey(BigInt(84)) \
=> (Int32[17], Complex{Int16}[4]),\\n    FastKey(BigInt(92)) => (lower ? \
Int32[22,41] : Int32[25,32], Complex{Int16}[10,10]),\\n    \
FastKey(BigInt(151)) => (lower ? Int32[22,41] : Int32[25,32], \
Complex{Int16}[8,8]),\\n    FastKey(BigInt(158)) => (lower ? Int32[20] : \
Int32[23], Complex{Int16}[8]),\\n    FastKey(BigInt(166)) => (lower ? \
Int32[33,42] : Int32[29,33], Complex{Int16}[-24,-24]),\\n    \
FastKey(BigInt(171)) => (lower ? Int32[50] : Int32[26], \
Complex{Int16}[-2]),\\n    FastKey(BigInt(172)) => (lower ? Int32[50] : \
Int32[26], Complex{Int16}[6]),\\n    FastKey(BigInt(175)) => (lower ? \
Int32[43,51] : Int32[30,34], lower ? Complex{Int16}[6,18] : \
Complex{Int16}[18,6]),\\n    FastKey(BigInt(176)) => (lower ? Int32[20] : \
Int32[23], Complex{Int16}[4]),\\n    FastKey(BigInt(205)) => (lower ? \
Int32[52] : Int32[35], Complex{Int16}[10]),\\n    FastKey(BigInt(272)) => \
(lower ? Int32[23] : Int32[38], lower ? Complex{Int16}[-1+3im] : \
Complex{Int16}[-1-3im]),\\n    FastKey(BigInt(273)) => (lower ? Int32[23] : \
Int32[38], lower ? Complex{Int16}[-1-3im] : Complex{Int16}[-1+3im]),\\n    \
FastKey(BigInt(275)) => (lower ? Int32[23] : Int32[38], lower ? \
Complex{Int16}[-3+im] : Complex{Int16}[-3-im]),\\n    FastKey(BigInt(276)) => \
(lower ? Int32[23] : Int32[38], lower ? Complex{Int16}[3+im] : \
Complex{Int16}[3-im]),\\n    FastKey(BigInt(281)) => (lower ? Int32[24,34] : \
Int32[39,45], Complex{Int16}[9,9]),\\n    FastKey(BigInt(282)) => (lower ? \
Int32[24,34] : Int32[39,45], lower ? Complex{Int16}[-9im,-9im] : \
Complex{Int16}[9im,9im]),\\n    FastKey(BigInt(397)) => (lower ? Int32[52] : \
Int32[35], Complex{Int16}[8]),\\n    FastKey(BigInt(404)) => (lower ? \
Int32[50] : Int32[26], Complex{Int16}[8]),\\n    FastKey(BigInt(412)) => \
(lower ? Int32[60] : Int32[36], Complex{Int16}[-24]),\\n    \
FastKey(BigInt(421)) => (lower ? Int32[67] : Int32[37], \
Complex{Int16}[6]),\\n    FastKey(BigInt(422)) => (lower ? Int32[50] : \
Int32[26], Complex{Int16}[4]),\\n    FastKey(BigInt(456)) => (lower ? \
Int32[25,44] : Int32[40,53], Complex{Int16}[5,5]),\\n    FastKey(BigInt(457)) \
=> (lower ? Int32[25,44] : Int32[40,53], lower ? Complex{Int16}[-5im,-5im] : \
Complex{Int16}[5im,5im]),\\n    FastKey(BigInt(640)) => (lower ? Int32[25,44] \
: Int32[40,53], Complex{Int16}[4,4]),\\n    FastKey(BigInt(646)) => (lower ? \
Int32[25,44] : Int32[40,53], lower ? Complex{Int16}[-4im,-4im] : \
Complex{Int16}[4im,4im]),\\n    FastKey(BigInt(650)) => (lower ? Int32[23] : \
Int32[38], Complex{Int16}[4]),\\n    FastKey(BigInt(653)) => (lower ? \
Int32[23] : Int32[38], lower ? Complex{Int16}[-4im] : \
Complex{Int16}[4im]),\\n    FastKey(BigInt(728)) => (lower ? Int32[36,45] : \
Int32[47,54], lower ? Complex{Int16}[-12im,-12im] : \
Complex{Int16}[12im,12im]),\\n    FastKey(BigInt(729)) => (lower ? \
Int32[36,45] : Int32[47,54], lower ? Complex{Int16}[12im,12im] : \
Complex{Int16}[-12im,-12im]),\\n    FastKey(BigInt(731)) => (lower ? \
Int32[36,45] : Int32[47,54], Complex{Int16}[12,12]),\\n    \
FastKey(BigInt(732)) => (lower ? Int32[36,45] : Int32[47,54], \
Complex{Int16}[-12,-12]),\\n    FastKey(BigInt(854)) => (lower ? Int32[53] : \
Int32[41], lower ? Complex{Int16}[-1+3im] : Complex{Int16}[-1-3im]),\\n    \
FastKey(BigInt(855)) => (lower ? Int32[53] : Int32[41], lower ? \
Complex{Int16}[-1-3im] : Complex{Int16}[-1+3im]),\\n    FastKey(BigInt(857)) \
=> (lower ? Int32[53] : Int32[41], lower ? Complex{Int16}[-3+im] : \
Complex{Int16}[-3-im]),\\n    FastKey(BigInt(858)) => (lower ? Int32[53] : \
Int32[41], lower ? Complex{Int16}[3+im] : Complex{Int16}[3-im]),\\n    \
FastKey(BigInt(863)) => (lower ? Int32[46,54,61] : Int32[42,48,55], lower ? \
Complex{Int16}[3,9,9] : Complex{Int16}[9,9,3]),\\n    FastKey(BigInt(864)) => \
(lower ? Int32[46,54,61] : Int32[42,48,55], lower ? \
Complex{Int16}[-3im,-9im,-9im] : Complex{Int16}[9im,9im,3im]),\\n    \
FastKey(BigInt(898)) => (lower ? Int32[23] : Int32[38], \
Complex{Int16}[2]),\\n    FastKey(BigInt(899)) => (lower ? Int32[23] : \
Int32[38], lower ? Complex{Int16}[-2im] : Complex{Int16}[2im]),\\n    \
FastKey(BigInt(1164)) => (lower ? Int32[55,68] : Int32[43,56], \
Complex{Int16}[5,5]),\\n    FastKey(BigInt(1165)) => (lower ? Int32[55,68] : \
Int32[43,56], lower ? Complex{Int16}[-5im,-5im] : \
Complex{Int16}[5im,5im]),\\n    FastKey(BigInt(1742)) => (lower ? Int32[26] : \
Int32[62], lower ? Complex{Int16}[-1+3im] : Complex{Int16}[-1-3im]),\\n    \
FastKey(BigInt(1743)) => (lower ? Int32[26] : Int32[62], lower ? \
Complex{Int16}[-1-3im] : Complex{Int16}[-1+3im]),\\n    FastKey(BigInt(1744)) \
=> (lower ? Int32[26] : Int32[62], lower ? Complex{Int16}[-3+im] : \
Complex{Int16}[-3-im]),\\n    FastKey(BigInt(1745)) => (lower ? Int32[26] : \
Int32[62], lower ? Complex{Int16}[3+im] : Complex{Int16}[3-im]),\\n    \
FastKey(BigInt(1762)) => (lower ? Int32[27,37] : Int32[63,72], \
Complex{Int16}[9,9]),\\n    FastKey(BigInt(1764)) => (lower ? Int32[27,37] : \
Int32[63,72], lower ? Complex{Int16}[-9im,-9im] : \
Complex{Int16}[9im,9im]),\\n    FastKey(BigInt(1894)) => (lower ? \
Int32[55,68] : Int32[43,56], Complex{Int16}[4,4]),\\n    \
FastKey(BigInt(1900)) => (lower ? Int32[55,68] : Int32[43,56], lower ? \
Complex{Int16}[-4im,-4im] : Complex{Int16}[4im,4im]),\\n    \
FastKey(BigInt(1904)) => (lower ? Int32[53] : Int32[41], \
Complex{Int16}[4]),\\n    FastKey(BigInt(1907)) => (lower ? Int32[53] : \
Int32[41], lower ? Complex{Int16}[-4im] : Complex{Int16}[4im]),\\n    \
FastKey(BigInt(1982)) => (lower ? Int32[63,69] : Int32[50,57], lower ? \
Complex{Int16}[-12im,-12im] : Complex{Int16}[12im,12im]),\\n    \
FastKey(BigInt(1983)) => (lower ? Int32[63,69] : Int32[50,57], lower ? \
Complex{Int16}[12im,12im] : Complex{Int16}[-12im,-12im]),\\n    \
FastKey(BigInt(1985)) => (lower ? Int32[63,69] : Int32[50,57], \
Complex{Int16}[12,12]),\\n    FastKey(BigInt(1986)) => (lower ? Int32[63,69] \
: Int32[50,57], Complex{Int16}[-12,-12]),\\n    FastKey(BigInt(2117)) => \
(lower ? Int32[70] : Int32[58], Complex{Int16}[3]),\\n    \
FastKey(BigInt(2118)) => (lower ? Int32[70] : Int32[58], lower ? \
Complex{Int16}[-3im] : Complex{Int16}[3im]),\\n    FastKey(BigInt(2152)) => \
(lower ? Int32[53] : Int32[41], Complex{Int16}[2]),\\n    \
FastKey(BigInt(2153)) => (lower ? Int32[53] : Int32[41], lower ? \
Complex{Int16}[-2im] : Complex{Int16}[2im]),\\n    FastKey(BigInt(2491)) => \
(lower ? Int32[28,47] : Int32[64,83], Complex{Int16}[5,5]),\\n    \
FastKey(BigInt(2493)) => (lower ? Int32[28,47] : Int32[64,83], lower ? \
Complex{Int16}[-5im,-5im] : Complex{Int16}[5im,5im]),\\n    \
FastKey(BigInt(3360)) => (lower ? Int32[74] : Int32[44], Complex{Int16}[-2]),\
\\n    FastKey(BigInt(3361)) => (lower ? Int32[74] : Int32[44], \
Complex{Int16}[6]),\\n    FastKey(BigInt(3375)) => (lower ? Int32[75] : \
Int32[51], Complex{Int16}[18]),\\n    FastKey(BigInt(3719)) => (lower ? \
Int32[28,47] : Int32[64,83], Complex{Int16}[4,4]),\\n    \
FastKey(BigInt(3721)) => (lower ? Int32[28,47] : Int32[64,83], lower ? \
Complex{Int16}[-4im,-4im] : Complex{Int16}[4im,4im]),\\n    \
FastKey(BigInt(3737)) => (lower ? Int32[26] : Int32[62], \
Complex{Int16}[4]),\\n    FastKey(BigInt(3739)) => (lower ? Int32[26] : \
Int32[62], lower ? Complex{Int16}[-4im] : Complex{Int16}[4im]),\\n    \
FastKey(BigInt(3788)) => (lower ? Int32[39,48] : Int32[74,84], lower ? \
Complex{Int16}[-12im,-12im] : Complex{Int16}[12im,12im]),\\n    \
FastKey(BigInt(3789)) => (lower ? Int32[39,48] : Int32[74,84], lower ? \
Complex{Int16}[12im,12im] : Complex{Int16}[-12im,-12im]),\\n    \
FastKey(BigInt(3790)) => (lower ? Int32[39,48] : Int32[74,84], \
Complex{Int16}[12,12]),\\n    FastKey(BigInt(3791)) => (lower ? Int32[39,48] \
: Int32[74,84], Complex{Int16}[-12,-12]),\\n    FastKey(BigInt(4250)) => \
(lower ? Int32[56] : Int32[65], lower ? Complex{Int16}[-1+3im] : \
Complex{Int16}[-1-3im]),\\n    FastKey(BigInt(4251)) => (lower ? Int32[56] : \
Int32[65], lower ? Complex{Int16}[-1-3im] : Complex{Int16}[-1+3im]),\\n    \
FastKey(BigInt(4252)) => (lower ? Int32[56] : Int32[65], lower ? \
Complex{Int16}[-3+im] : Complex{Int16}[-3-im]),\\n    FastKey(BigInt(4253)) \
=> (lower ? Int32[56] : Int32[65], lower ? Complex{Int16}[3+im] : \
Complex{Int16}[3-im]),\\n    FastKey(BigInt(4270)) => (lower ? \
Int32[49,57,64] : Int32[66,75,85], lower ? Complex{Int16}[3,9,9] : \
Complex{Int16}[9,9,3]),\\n    FastKey(BigInt(4272)) => (lower ? \
Int32[49,57,64] : Int32[66,75,85], lower ? Complex{Int16}[-3im,-9im,-9im] : \
Complex{Int16}[9im,9im,3im]),\\n    FastKey(BigInt(4285)) => (lower ? \
Int32[26] : Int32[62], Complex{Int16}[2]),\\n    FastKey(BigInt(4287)) => \
(lower ? Int32[26] : Int32[62], lower ? Complex{Int16}[-2im] : \
Complex{Int16}[2im]),\\n    FastKey(BigInt(4971)) => (lower ? Int32[76] : \
Int32[59], Complex{Int16}[10]),\\n    FastKey(BigInt(5461)) => (lower ? \
Int32[58,71] : Int32[67,86], Complex{Int16}[5,5]),\\n    \
FastKey(BigInt(5463)) => (lower ? Int32[58,71] : Int32[67,86], lower ? \
Complex{Int16}[-5im,-5im] : Complex{Int16}[5im,5im]),\\n    \
FastKey(BigInt(6929)) => (lower ? Int32[76] : Int32[59], \
Complex{Int16}[8]),\\n    FastKey(BigInt(6939)) => (lower ? Int32[74] : \
Int32[44], Complex{Int16}[8]),\\n    FastKey(BigInt(7288)) => (lower ? \
Int32[81] : Int32[60], Complex{Int16}[-24]),\\n    FastKey(BigInt(8094)) => \
(lower ? Int32[85] : Int32[61], Complex{Int16}[6]),\\n    \
FastKey(BigInt(8304)) => (lower ? Int32[74] : Int32[44], \
Complex{Int16}[4]),\\n    FastKey(BigInt(8438)) => (lower ? Int32[58,71] : \
Int32[67,86], Complex{Int16}[4,4]),\\n    FastKey(BigInt(8440)) => (lower ? \
Int32[58,71] : Int32[67,86], lower ? Complex{Int16}[-4im,-4im] : \
Complex{Int16}[4im,4im]),\\n    FastKey(BigInt(8456)) => (lower ? Int32[56] : \
Int32[65], Complex{Int16}[4]),\\n    FastKey(BigInt(8458)) => (lower ? \
Int32[56] : Int32[65], lower ? Complex{Int16}[-4im] : \
Complex{Int16}[4im]),\\n    FastKey(BigInt(8507)) => (lower ? Int32[66,72] : \
Int32[77,87], lower ? Complex{Int16}[-12im,-12im] : \
Complex{Int16}[12im,12im]),\\n    FastKey(BigInt(8508)) => (lower ? \
Int32[66,72] : Int32[77,87], lower ? Complex{Int16}[12im,12im] : \
Complex{Int16}[-12im,-12im]),\\n    FastKey(BigInt(8509)) => (lower ? \
Int32[66,72] : Int32[77,87], Complex{Int16}[12,12]),\\n    \
FastKey(BigInt(8510)) => (lower ? Int32[66,72] : Int32[77,87], \
Complex{Int16}[-12,-12]),\\n    FastKey(BigInt(8989)) => (lower ? Int32[73] : \
Int32[88], Complex{Int16}[3]),\\n    FastKey(BigInt(8991)) => (lower ? \
Int32[73] : Int32[88], lower ? Complex{Int16}[-3im] : \
Complex{Int16}[3im]),\\n    FastKey(BigInt(9004)) => (lower ? Int32[56] : \
Int32[65], Complex{Int16}[2]),\\n    FastKey(BigInt(9006)) => (lower ? \
Int32[56] : Int32[65], lower ? Complex{Int16}[-2im] : \
Complex{Int16}[2im]),\\n    FastKey(BigInt(14606)) => (lower ? Int32[77] : \
Int32[68], lower ? Complex{Int16}[-1-3im] : Complex{Int16}[-1+3im]),\\n    \
FastKey(BigInt(14607)) => (lower ? Int32[77] : Int32[68], lower ? \
Complex{Int16}[-1+3im] : Complex{Int16}[-1-3im]),\\n    \
FastKey(BigInt(14614)) => (lower ? Int32[77] : Int32[68], lower ? \
Complex{Int16}[-3-im] : Complex{Int16}[-3+im]),\\n    FastKey(BigInt(14615)) \
=> (lower ? Int32[77] : Int32[68], lower ? Complex{Int16}[3-im] : \
Complex{Int16}[3+im]),\\n    FastKey(BigInt(14640)) => (lower ? Int32[78,82] \
: Int32[69,78], Complex{Int16}[9,9]),\\n    FastKey(BigInt(14644)) => (lower \
? Int32[78,82] : Int32[69,78], lower ? Complex{Int16}[9im,9im] : \
Complex{Int16}[-9im,-9im]),\\n    FastKey(BigInt(19056)) => (lower ? \
Int32[79,86] : Int32[70,89], Complex{Int16}[5,5]),\\n    \
FastKey(BigInt(19060)) => (lower ? Int32[79,86] : Int32[70,89], lower ? \
Complex{Int16}[5im,5im] : Complex{Int16}[-5im,-5im]),\\n    \
FastKey(BigInt(26783)) => (lower ? Int32[79,86] : Int32[70,89], \
Complex{Int16}[4,4]),\\n    FastKey(BigInt(26796)) => (lower ? Int32[79,86] : \
Int32[70,89], lower ? Complex{Int16}[4im,4im] : \
Complex{Int16}[-4im,-4im]),\\n    FastKey(BigInt(26806)) => (lower ? \
Int32[77] : Int32[68], Complex{Int16}[4]),\\n    FastKey(BigInt(26814)) => \
(lower ? Int32[77] : Int32[68], lower ? Complex{Int16}[4im] : \
Complex{Int16}[-4im]),\\n    FastKey(BigInt(27047)) => (lower ? Int32[84,87] \
: Int32[80,90], lower ? Complex{Int16}[12im,12im] : \
Complex{Int16}[-12im,-12im]),\\n    FastKey(BigInt(27048)) => (lower ? \
Int32[84,87] : Int32[80,90], lower ? Complex{Int16}[-12im,-12im] : \
Complex{Int16}[12im,12im]),\\n    FastKey(BigInt(27055)) => (lower ? \
Int32[84,87] : Int32[80,90], Complex{Int16}[12,12]),\\n    \
FastKey(BigInt(27056)) => (lower ? Int32[84,87] : Int32[80,90], \
Complex{Int16}[-12,-12]),\\n    FastKey(BigInt(29083)) => (lower ? Int32[88] \
: Int32[91], Complex{Int16}[3]),\\n    FastKey(BigInt(29087)) => (lower ? \
Int32[88] : Int32[91], lower ? Complex{Int16}[3im] : \
Complex{Int16}[-3im]),\\n    FastKey(BigInt(29209)) => (lower ? Int32[77] : \
Int32[68], Complex{Int16}[2]),\\n    FastKey(BigInt(29213)) => (lower ? \
Int32[77] : Int32[68], lower ? Complex{Int16}[2im] : \
Complex{Int16}[-2im]),\\n    FastKey(BigInt(47925)) => (lower ? Int32[89] : \
Int32[71], Complex{Int16}[-2]),\\n    FastKey(BigInt(47926)) => (lower ? \
Int32[89] : Int32[71], Complex{Int16}[6]),\\n    FastKey(BigInt(47981)) => \
(lower ? Int32[90] : Int32[81], Complex{Int16}[18]),\\n    \
FastKey(BigInt(59062)) => (lower ? Int32[91] : Int32[92], \
Complex{Int16}[10]),\\n    FastKey(BigInt(81360)) => (lower ? Int32[91] : \
Int32[92], Complex{Int16}[8]),\\n    FastKey(BigInt(81393)) => (lower ? \
Int32[89] : Int32[71], Complex{Int16}[8]),\\n    FastKey(BigInt(81570)) => \
(Int32[93], Complex{Int16}[-24]),\\n    FastKey(BigInt(85993)) => (Int32[94], \
Complex{Int16}[6]),\\n    FastKey(BigInt(86063)) => (lower ? Int32[89] : \
Int32[71], Complex{Int16}[4]),\\n)\"\>"], "Output",
 CellLabel->"Out[77]=",ExpressionUUID->"77ea988c-385e-b14c-b9fd-b260babc5df3"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCode", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "2"], ",", 
     RowBox[{
      SubscriptBox["z", "1"], 
      SubsuperscriptBox["x", "4", "2"]}], ",", 
     RowBox[{
      SubsuperscriptBox["z", "2", "2"], 
      SubsuperscriptBox["x", "3", "3"]}]}], "}"}], ",", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        RowBox[{"4", 
         SubscriptBox["x", "2"], 
         SubscriptBox["x", "3"]}], "+", 
        RowBox[{"8", 
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"6", "I"}]}], ")"}], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"6", "I"}]}], ")"}], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "-", 
           RowBox[{"2", "I"}]}], ")"}], 
         SubsuperscriptBox[
          OverscriptBox["z", "_"], "2", "2"]}], "-", 
        RowBox[{"8", 
         SubsuperscriptBox["z", "2", "2"]}], "-", 
        RowBox[{"6", "I", " ", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"2", 
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}]}], 
       RowBox[{
        RowBox[{"10", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"8", 
         SubscriptBox["z", "2"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "+", 
           RowBox[{"2", "I"}]}], ")"}], 
         SubsuperscriptBox["z", "2", "2"]}], "-", 
        RowBox[{"8", 
         SubsuperscriptBox[
          OverscriptBox["z", "_"], "2", "2"]}], "+", 
        RowBox[{"6", "I", " ", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"2", 
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}]}], "0", 
       RowBox[{
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}]},
      {
       RowBox[{
        RowBox[{"10", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"8", 
         SubscriptBox["z", "2"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{"6", 
        SubscriptBox["x", "2"], 
        SubscriptBox["x", "4"]}]}
     }], ")"}], ",", "17"}], "]"}]], "Input",
 CellLabel->"In[78]:=",ExpressionUUID->"d99de351-d3ff-4844-8a3a-5766c0088ffa"],

Cell[BoxData["\<\"Dict{FastKey{BigInt},Tuple{Vector{Int32},Vector{Complex{\
Int16}}}}(\\n    FastKey(BigInt(50)) => (Int32[17], Complex{Int16}[-2]),\\n   \
 FastKey(BigInt(51)) => (Int32[17], Complex{Int16}[6]),\\n    \
FastKey(BigInt(57)) => (lower ? Int32[18,19] : Int32[18,20], lower ? \
Complex{Int16}[-6im,10] : Complex{Int16}[6im,10]),\\n    FastKey(BigInt(58)) \
=> (Int32[18], lower ? Complex{Int16}[-im] : Complex{Int16}[im]),\\n    \
FastKey(BigInt(59)) => (lower ? Int32[19] : Int32[20], Complex{Int16}[8]),\\n \
   FastKey(BigInt(60)) => (Int32[18], lower ? Complex{Int16}[-1-8im] : \
Complex{Int16}[-1+8im]),\\n    FastKey(BigInt(66)) => (Int32[17,18], \
Complex{Int16}[8,2]),\\n    FastKey(BigInt(74)) => (lower ? Int32[30] : \
Int32[21], Complex{Int16}[-24]),\\n    FastKey(BigInt(79)) => (lower ? \
Int32[20] : Int32[23], Complex{Int16}[-2]),\\n    FastKey(BigInt(80)) => \
(lower ? Int32[20] : Int32[23], Complex{Int16}[6]),\\n    FastKey(BigInt(83)) \
=> (lower ? Int32[40] : Int32[22], Complex{Int16}[6]),\\n    \
FastKey(BigInt(84)) => (Int32[17], Complex{Int16}[4]),\\n    \
FastKey(BigInt(92)) => (lower ? Int32[21,22,31,41] : Int32[24,25,27,32], \
Complex{Int16}[-6im,10,6im,10]),\\n    FastKey(BigInt(150)) => (lower ? \
Int32[21,31] : Int32[24,27], Complex{Int16}[-im,im]),\\n    \
FastKey(BigInt(151)) => (lower ? Int32[22,41] : Int32[25,32], \
Complex{Int16}[8,8]),\\n    FastKey(BigInt(152)) => (lower ? Int32[21,31] : \
Int32[24,27], Complex{Int16}[-1-8im,-1+8im]),\\n    FastKey(BigInt(158)) => \
(lower ? Int32[20,21,31] : Int32[23,24,27], Complex{Int16}[8,2,2]),\\n    \
FastKey(BigInt(166)) => (lower ? Int32[33,42] : Int32[29,33], \
Complex{Int16}[-24,-24]),\\n    FastKey(BigInt(171)) => (lower ? Int32[50] : \
Int32[26], Complex{Int16}[-2]),\\n    FastKey(BigInt(172)) => (lower ? \
Int32[50] : Int32[26], Complex{Int16}[6]),\\n    FastKey(BigInt(175)) => \
(lower ? Int32[43] : Int32[34], Complex{Int16}[6]),\\n    \
FastKey(BigInt(176)) => (lower ? Int32[20] : Int32[23], \
Complex{Int16}[4]),\\n    FastKey(BigInt(205)) => (lower ? Int32[51,52] : \
Int32[30,35], lower ? Complex{Int16}[-6im,10] : Complex{Int16}[6im,10]),\\n   \
 FastKey(BigInt(272)) => (lower ? Int32[23] : Int32[38], lower ? \
Complex{Int16}[-1+3im] : Complex{Int16}[-1-3im]),\\n    FastKey(BigInt(273)) \
=> (lower ? Int32[23] : Int32[38], lower ? Complex{Int16}[-1-3im] : \
Complex{Int16}[-1+3im]),\\n    FastKey(BigInt(275)) => (lower ? Int32[23] : \
Int32[38], lower ? Complex{Int16}[-3+im] : Complex{Int16}[-3-im]),\\n    \
FastKey(BigInt(276)) => (lower ? Int32[23] : Int32[38], lower ? \
Complex{Int16}[3+im] : Complex{Int16}[3-im]),\\n    FastKey(BigInt(396)) => \
(lower ? Int32[51] : Int32[30], lower ? Complex{Int16}[-im] : \
Complex{Int16}[im]),\\n    FastKey(BigInt(397)) => (lower ? Int32[52] : \
Int32[35], Complex{Int16}[8]),\\n    FastKey(BigInt(398)) => (lower ? \
Int32[51] : Int32[30], lower ? Complex{Int16}[-1-8im] : \
Complex{Int16}[-1+8im]),\\n    FastKey(BigInt(404)) => (lower ? Int32[50,51] \
: Int32[26,30], Complex{Int16}[8,2]),\\n    FastKey(BigInt(412)) => (lower ? \
Int32[60] : Int32[36], Complex{Int16}[-24]),\\n    FastKey(BigInt(421)) => \
(lower ? Int32[67] : Int32[37], Complex{Int16}[6]),\\n    \
FastKey(BigInt(422)) => (lower ? Int32[50] : Int32[26], \
Complex{Int16}[4]),\\n    FastKey(BigInt(456)) => (lower ? Int32[24,25,34,44] \
: Int32[39,40,45,53], Complex{Int16}[-3im,5,3im,5]),\\n    \
FastKey(BigInt(457)) => (lower ? Int32[24,25,34,44] : Int32[39,40,45,53], \
lower ? Complex{Int16}[-3,-5im,3,-5im] : Complex{Int16}[3,5im,-3,5im]),\\n    \
FastKey(BigInt(639)) => (lower ? Int32[24,34] : Int32[39,45], lower ? \
Complex{Int16}[4-im,-4] : Complex{Int16}[-4,4+im]),\\n    \
FastKey(BigInt(640)) => (lower ? Int32[25,44] : Int32[40,53], \
Complex{Int16}[4,4]),\\n    FastKey(BigInt(641)) => (lower ? Int32[24,34] : \
Int32[39,45], lower ? Complex{Int16}[-4,4+im] : Complex{Int16}[4-im,-4]),\\n  \
  FastKey(BigInt(645)) => (lower ? Int32[24,34] : Int32[39,45], lower ? \
Complex{Int16}[4im,1-4im] : Complex{Int16}[1+4im,-4im]),\\n    \
FastKey(BigInt(646)) => (lower ? Int32[25,44] : Int32[40,53], lower ? \
Complex{Int16}[-4im,-4im] : Complex{Int16}[4im,4im]),\\n    \
FastKey(BigInt(647)) => (lower ? Int32[24,34] : Int32[39,45], lower ? \
Complex{Int16}[-1-4im,4im] : Complex{Int16}[-4im,-1+4im]),\\n    \
FastKey(BigInt(650)) => (lower ? Int32[23,24,34] : Int32[38,39,45], \
Complex{Int16}[4,1,1]),\\n    FastKey(BigInt(653)) => (lower ? \
Int32[23,24,34] : Int32[38,39,45], lower ? Complex{Int16}[-4im,-im,-im] : \
Complex{Int16}[4im,im,im]),\\n    FastKey(BigInt(728)) => (lower ? \
Int32[36,45] : Int32[47,54], lower ? Complex{Int16}[-12im,-12im] : \
Complex{Int16}[12im,12im]),\\n    FastKey(BigInt(729)) => (lower ? \
Int32[36,45] : Int32[47,54], lower ? Complex{Int16}[12im,12im] : \
Complex{Int16}[-12im,-12im]),\\n    FastKey(BigInt(731)) => (lower ? \
Int32[36,45] : Int32[47,54], Complex{Int16}[12,12]),\\n    \
FastKey(BigInt(732)) => (lower ? Int32[36,45] : Int32[47,54], \
Complex{Int16}[-12,-12]),\\n    FastKey(BigInt(854)) => (lower ? Int32[53] : \
Int32[41], lower ? Complex{Int16}[-1+3im] : Complex{Int16}[-1-3im]),\\n    \
FastKey(BigInt(855)) => (lower ? Int32[53] : Int32[41], lower ? \
Complex{Int16}[-1-3im] : Complex{Int16}[-1+3im]),\\n    FastKey(BigInt(857)) \
=> (lower ? Int32[53] : Int32[41], lower ? Complex{Int16}[-3+im] : \
Complex{Int16}[-3-im]),\\n    FastKey(BigInt(858)) => (lower ? Int32[53] : \
Int32[41], lower ? Complex{Int16}[3+im] : Complex{Int16}[3-im]),\\n    \
FastKey(BigInt(863)) => (lower ? Int32[46] : Int32[55], \
Complex{Int16}[3]),\\n    FastKey(BigInt(864)) => (lower ? Int32[46] : \
Int32[55], lower ? Complex{Int16}[-3im] : Complex{Int16}[3im]),\\n    \
FastKey(BigInt(898)) => (lower ? Int32[23] : Int32[38], \
Complex{Int16}[2]),\\n    FastKey(BigInt(899)) => (lower ? Int32[23] : \
Int32[38], lower ? Complex{Int16}[-2im] : Complex{Int16}[2im]),\\n    \
FastKey(BigInt(1164)) => (lower ? Int32[54,55,61,68] : Int32[42,43,48,56], \
Complex{Int16}[-3im,5,3im,5]),\\n    FastKey(BigInt(1165)) => (lower ? \
Int32[54,55,61,68] : Int32[42,43,48,56], lower ? \
Complex{Int16}[-3,-5im,3,-5im] : Complex{Int16}[3,5im,-3,5im]),\\n    \
FastKey(BigInt(1742)) => (lower ? Int32[26] : Int32[62], lower ? \
Complex{Int16}[-1+3im] : Complex{Int16}[-1-3im]),\\n    FastKey(BigInt(1743)) \
=> (lower ? Int32[26] : Int32[62], lower ? Complex{Int16}[-1-3im] : \
Complex{Int16}[-1+3im]),\\n    FastKey(BigInt(1744)) => (lower ? Int32[26] : \
Int32[62], lower ? Complex{Int16}[-3+im] : Complex{Int16}[-3-im]),\\n    \
FastKey(BigInt(1745)) => (lower ? Int32[26] : Int32[62], lower ? \
Complex{Int16}[3+im] : Complex{Int16}[3-im]),\\n    FastKey(BigInt(1893)) => \
(lower ? Int32[54,61] : Int32[42,48], lower ? Complex{Int16}[4-im,-4] : \
Complex{Int16}[-4,4+im]),\\n    FastKey(BigInt(1894)) => (lower ? \
Int32[55,68] : Int32[43,56], Complex{Int16}[4,4]),\\n    \
FastKey(BigInt(1895)) => (lower ? Int32[54,61] : Int32[42,48], lower ? \
Complex{Int16}[-4,4+im] : Complex{Int16}[4-im,-4]),\\n    \
FastKey(BigInt(1899)) => (lower ? Int32[54,61] : Int32[42,48], lower ? \
Complex{Int16}[4im,1-4im] : Complex{Int16}[1+4im,-4im]),\\n    \
FastKey(BigInt(1900)) => (lower ? Int32[55,68] : Int32[43,56], lower ? \
Complex{Int16}[-4im,-4im] : Complex{Int16}[4im,4im]),\\n    \
FastKey(BigInt(1901)) => (lower ? Int32[54,61] : Int32[42,48], lower ? \
Complex{Int16}[-1-4im,4im] : Complex{Int16}[-4im,-1+4im]),\\n    \
FastKey(BigInt(1904)) => (lower ? Int32[53,54,61] : Int32[41,42,48], \
Complex{Int16}[4,1,1]),\\n    FastKey(BigInt(1907)) => (lower ? \
Int32[53,54,61] : Int32[41,42,48], lower ? Complex{Int16}[-4im,-im,-im] : \
Complex{Int16}[4im,im,im]),\\n    FastKey(BigInt(1982)) => (lower ? \
Int32[63,69] : Int32[50,57], lower ? Complex{Int16}[-12im,-12im] : \
Complex{Int16}[12im,12im]),\\n    FastKey(BigInt(1983)) => (lower ? \
Int32[63,69] : Int32[50,57], lower ? Complex{Int16}[12im,12im] : \
Complex{Int16}[-12im,-12im]),\\n    FastKey(BigInt(1985)) => (lower ? \
Int32[63,69] : Int32[50,57], Complex{Int16}[12,12]),\\n    \
FastKey(BigInt(1986)) => (lower ? Int32[63,69] : Int32[50,57], \
Complex{Int16}[-12,-12]),\\n    FastKey(BigInt(2117)) => (lower ? Int32[70] : \
Int32[58], Complex{Int16}[3]),\\n    FastKey(BigInt(2118)) => (lower ? \
Int32[70] : Int32[58], lower ? Complex{Int16}[-3im] : \
Complex{Int16}[3im]),\\n    FastKey(BigInt(2152)) => (lower ? Int32[53] : \
Int32[41], Complex{Int16}[2]),\\n    FastKey(BigInt(2153)) => (lower ? \
Int32[53] : Int32[41], lower ? Complex{Int16}[-2im] : \
Complex{Int16}[2im]),\\n    FastKey(BigInt(2491)) => (lower ? \
Int32[27,28,37,47] : Int32[63,64,72,83], Complex{Int16}[-3im,5,3im,5]),\\n    \
FastKey(BigInt(2493)) => (lower ? Int32[27,28,37,47] : Int32[63,64,72,83], \
lower ? Complex{Int16}[-3,-5im,3,-5im] : Complex{Int16}[3,5im,-3,5im]),\\n    \
FastKey(BigInt(3360)) => (lower ? Int32[74] : Int32[44], Complex{Int16}[-2]),\
\\n    FastKey(BigInt(3361)) => (lower ? Int32[74] : Int32[44], \
Complex{Int16}[6]),\\n    FastKey(BigInt(3718)) => (lower ? Int32[27,37] : \
Int32[63,72], lower ? Complex{Int16}[4-im,-4] : Complex{Int16}[-4,4+im]),\\n  \
  FastKey(BigInt(3719)) => (lower ? Int32[28,47] : Int32[64,83], \
Complex{Int16}[4,4]),\\n    FastKey(BigInt(3720)) => (lower ? Int32[27,37] : \
Int32[63,72], lower ? Complex{Int16}[-8,8+2im] : \
Complex{Int16}[8-2im,-8]),\\n    FastKey(BigInt(3721)) => (lower ? \
Int32[28,47] : Int32[64,83], lower ? Complex{Int16}[-4im,-4im] : \
Complex{Int16}[4im,4im]),\\n    FastKey(BigInt(3722)) => (lower ? \
Int32[27,37] : Int32[63,72], lower ? Complex{Int16}[-1-4im,4im] : \
Complex{Int16}[-4im,-1+4im]),\\n    FastKey(BigInt(3737)) => (lower ? \
Int32[26,27,37] : Int32[62,63,72], Complex{Int16}[4,1,1]),\\n    \
FastKey(BigInt(3739)) => (lower ? Int32[26,27,37] : Int32[62,63,72], lower ? \
Complex{Int16}[-4im,-im,-im] : Complex{Int16}[4im,im,im]),\\n    \
FastKey(BigInt(3788)) => (lower ? Int32[39,48] : Int32[74,84], lower ? \
Complex{Int16}[-12im,-12im] : Complex{Int16}[12im,12im]),\\n    \
FastKey(BigInt(3789)) => (lower ? Int32[39,48] : Int32[74,84], lower ? \
Complex{Int16}[12im,12im] : Complex{Int16}[-12im,-12im]),\\n    \
FastKey(BigInt(3790)) => (lower ? Int32[39,48] : Int32[74,84], \
Complex{Int16}[12,12]),\\n    FastKey(BigInt(3791)) => (lower ? Int32[39,48] \
: Int32[74,84], Complex{Int16}[-12,-12]),\\n    FastKey(BigInt(4250)) => \
(lower ? Int32[56] : Int32[65], lower ? Complex{Int16}[-1+3im] : \
Complex{Int16}[-1-3im]),\\n    FastKey(BigInt(4251)) => (lower ? Int32[56] : \
Int32[65], lower ? Complex{Int16}[-1-3im] : Complex{Int16}[-1+3im]),\\n    \
FastKey(BigInt(4252)) => (lower ? Int32[56] : Int32[65], lower ? \
Complex{Int16}[-3+im] : Complex{Int16}[-3-im]),\\n    FastKey(BigInt(4253)) \
=> (lower ? Int32[56] : Int32[65], lower ? Complex{Int16}[3+im] : \
Complex{Int16}[3-im]),\\n    FastKey(BigInt(4270)) => (lower ? Int32[49] : \
Int32[85], Complex{Int16}[3]),\\n    FastKey(BigInt(4272)) => (lower ? \
Int32[49] : Int32[85], lower ? Complex{Int16}[-3im] : \
Complex{Int16}[3im]),\\n    FastKey(BigInt(4285)) => (lower ? Int32[26] : \
Int32[62], Complex{Int16}[2]),\\n    FastKey(BigInt(4287)) => (lower ? \
Int32[26] : Int32[62], lower ? Complex{Int16}[-2im] : \
Complex{Int16}[2im]),\\n    FastKey(BigInt(4971)) => (lower ? Int32[75,76] : \
Int32[51,59], lower ? Complex{Int16}[-6im,10] : Complex{Int16}[6im,10]),\\n   \
 FastKey(BigInt(5461)) => (lower ? Int32[57,58,64,71] : Int32[66,67,75,86], \
Complex{Int16}[-3im,5,3im,5]),\\n    FastKey(BigInt(5463)) => (lower ? \
Int32[57,58,64,71] : Int32[66,67,75,86], lower ? \
Complex{Int16}[-3,-5im,3,-5im] : Complex{Int16}[3,5im,-3,5im]),\\n    \
FastKey(BigInt(6928)) => (lower ? Int32[75] : Int32[51], lower ? \
Complex{Int16}[-im] : Complex{Int16}[im]),\\n    FastKey(BigInt(6929)) => \
(lower ? Int32[76] : Int32[59], Complex{Int16}[8]),\\n    \
FastKey(BigInt(6930)) => (lower ? Int32[75] : Int32[51], lower ? \
Complex{Int16}[-1-8im] : Complex{Int16}[-1+8im]),\\n    FastKey(BigInt(6939)) \
=> (lower ? Int32[74,75] : Int32[44,51], Complex{Int16}[8,2]),\\n    \
FastKey(BigInt(7288)) => (lower ? Int32[81] : Int32[60], \
Complex{Int16}[-24]),\\n    FastKey(BigInt(8094)) => (lower ? Int32[85] : \
Int32[61], Complex{Int16}[6]),\\n    FastKey(BigInt(8304)) => (lower ? \
Int32[74] : Int32[44], Complex{Int16}[4]),\\n    FastKey(BigInt(8437)) => \
(lower ? Int32[57,64] : Int32[66,75], lower ? Complex{Int16}[4-im,-4] : \
Complex{Int16}[-4,4+im]),\\n    FastKey(BigInt(8438)) => (lower ? \
Int32[58,71] : Int32[67,86], Complex{Int16}[4,4]),\\n    \
FastKey(BigInt(8439)) => (lower ? Int32[57,64] : Int32[66,75], lower ? \
Complex{Int16}[-8,8+2im] : Complex{Int16}[8-2im,-8]),\\n    \
FastKey(BigInt(8440)) => (lower ? Int32[58,71] : Int32[67,86], lower ? \
Complex{Int16}[-4im,-4im] : Complex{Int16}[4im,4im]),\\n    \
FastKey(BigInt(8441)) => (lower ? Int32[57,64] : Int32[66,75], lower ? \
Complex{Int16}[-1-4im,4im] : Complex{Int16}[-4im,-1+4im]),\\n    \
FastKey(BigInt(8456)) => (lower ? Int32[56,57,64] : Int32[65,66,75], \
Complex{Int16}[4,1,1]),\\n    FastKey(BigInt(8458)) => (lower ? \
Int32[56,57,64] : Int32[65,66,75], lower ? Complex{Int16}[-4im,-im,-im] : \
Complex{Int16}[4im,im,im]),\\n    FastKey(BigInt(8507)) => (lower ? \
Int32[66,72] : Int32[77,87], lower ? Complex{Int16}[-12im,-12im] : \
Complex{Int16}[12im,12im]),\\n    FastKey(BigInt(8508)) => (lower ? \
Int32[66,72] : Int32[77,87], lower ? Complex{Int16}[12im,12im] : \
Complex{Int16}[-12im,-12im]),\\n    FastKey(BigInt(8509)) => (lower ? \
Int32[66,72] : Int32[77,87], Complex{Int16}[12,12]),\\n    \
FastKey(BigInt(8510)) => (lower ? Int32[66,72] : Int32[77,87], \
Complex{Int16}[-12,-12]),\\n    FastKey(BigInt(8989)) => (lower ? Int32[73] : \
Int32[88], Complex{Int16}[3]),\\n    FastKey(BigInt(8991)) => (lower ? \
Int32[73] : Int32[88], lower ? Complex{Int16}[-3im] : \
Complex{Int16}[3im]),\\n    FastKey(BigInt(9004)) => (lower ? Int32[56] : \
Int32[65], Complex{Int16}[2]),\\n    FastKey(BigInt(9006)) => (lower ? \
Int32[56] : Int32[65], lower ? Complex{Int16}[-2im] : \
Complex{Int16}[2im]),\\n    FastKey(BigInt(14606)) => (lower ? Int32[77] : \
Int32[68], lower ? Complex{Int16}[-1-3im] : Complex{Int16}[-1+3im]),\\n    \
FastKey(BigInt(14607)) => (lower ? Int32[77] : Int32[68], lower ? \
Complex{Int16}[-1+3im] : Complex{Int16}[-1-3im]),\\n    \
FastKey(BigInt(14614)) => (lower ? Int32[77] : Int32[68], lower ? \
Complex{Int16}[-3-im] : Complex{Int16}[-3+im]),\\n    FastKey(BigInt(14615)) \
=> (lower ? Int32[77] : Int32[68], lower ? Complex{Int16}[3-im] : \
Complex{Int16}[3+im]),\\n    FastKey(BigInt(19056)) => (lower ? \
Int32[78,79,82,86] : Int32[69,70,78,89], Complex{Int16}[-3im,5,3im,5]),\\n    \
FastKey(BigInt(19060)) => (lower ? Int32[78,79,82,86] : Int32[69,70,78,89], \
lower ? Complex{Int16}[3,5im,-3,5im] : Complex{Int16}[-3,-5im,3,-5im]),\\n    \
FastKey(BigInt(26782)) => (lower ? Int32[78,82] : Int32[69,78], lower ? \
Complex{Int16}[-4,4+im] : Complex{Int16}[4-im,-4]),\\n    \
FastKey(BigInt(26783)) => (lower ? Int32[79,86] : Int32[70,89], \
Complex{Int16}[4,4]),\\n    FastKey(BigInt(26784)) => (lower ? Int32[78,82] : \
Int32[69,78], lower ? Complex{Int16}[4-im,-4] : Complex{Int16}[-4,4+im]),\\n  \
  FastKey(BigInt(26795)) => (lower ? Int32[78,82] : Int32[69,78], lower ? \
Complex{Int16}[1+4im,-4im] : Complex{Int16}[4im,1-4im]),\\n    \
FastKey(BigInt(26796)) => (lower ? Int32[79,86] : Int32[70,89], lower ? \
Complex{Int16}[4im,4im] : Complex{Int16}[-4im,-4im]),\\n    \
FastKey(BigInt(26797)) => (lower ? Int32[78,82] : Int32[69,78], lower ? \
Complex{Int16}[-4im,-1+4im] : Complex{Int16}[-1-4im,4im]),\\n    \
FastKey(BigInt(26806)) => (lower ? Int32[77,78,82] : Int32[68,69,78], \
Complex{Int16}[4,1,1]),\\n    FastKey(BigInt(26814)) => (lower ? \
Int32[77,78,82] : Int32[68,69,78], lower ? Complex{Int16}[4im,im,im] : \
Complex{Int16}[-4im,-im,-im]),\\n    FastKey(BigInt(27047)) => (lower ? \
Int32[84,87] : Int32[80,90], lower ? Complex{Int16}[12im,12im] : \
Complex{Int16}[-12im,-12im]),\\n    FastKey(BigInt(27048)) => (lower ? \
Int32[84,87] : Int32[80,90], lower ? Complex{Int16}[-12im,-12im] : \
Complex{Int16}[12im,12im]),\\n    FastKey(BigInt(27055)) => (lower ? \
Int32[84,87] : Int32[80,90], Complex{Int16}[12,12]),\\n    \
FastKey(BigInt(27056)) => (lower ? Int32[84,87] : Int32[80,90], \
Complex{Int16}[-12,-12]),\\n    FastKey(BigInt(29083)) => (lower ? Int32[88] \
: Int32[91], Complex{Int16}[3]),\\n    FastKey(BigInt(29087)) => (lower ? \
Int32[88] : Int32[91], lower ? Complex{Int16}[3im] : \
Complex{Int16}[-3im]),\\n    FastKey(BigInt(29209)) => (lower ? Int32[77] : \
Int32[68], Complex{Int16}[2]),\\n    FastKey(BigInt(29213)) => (lower ? \
Int32[77] : Int32[68], lower ? Complex{Int16}[2im] : \
Complex{Int16}[-2im]),\\n    FastKey(BigInt(47925)) => (lower ? Int32[89] : \
Int32[71], Complex{Int16}[-2]),\\n    FastKey(BigInt(47926)) => (lower ? \
Int32[89] : Int32[71], Complex{Int16}[6]),\\n    FastKey(BigInt(59062)) => \
(lower ? Int32[90,91] : Int32[81,92], lower ? Complex{Int16}[-6im,10] : \
Complex{Int16}[6im,10]),\\n    FastKey(BigInt(81359)) => (lower ? Int32[90] : \
Int32[81], lower ? Complex{Int16}[-im] : Complex{Int16}[im]),\\n    \
FastKey(BigInt(81360)) => (lower ? Int32[91] : Int32[92], Complex{Int16}[8]),\
\\n    FastKey(BigInt(81361)) => (lower ? Int32[90] : Int32[81], lower ? \
Complex{Int16}[-1-8im] : Complex{Int16}[-1+8im]),\\n    \
FastKey(BigInt(81393)) => (lower ? Int32[89,90] : Int32[71,81], \
Complex{Int16}[8,2]),\\n    FastKey(BigInt(81570)) => (Int32[93], \
Complex{Int16}[-24]),\\n    FastKey(BigInt(85993)) => (Int32[94], \
Complex{Int16}[6]),\\n    FastKey(BigInt(86063)) => (lower ? Int32[89] : \
Int32[71], Complex{Int16}[4]),\\n)\"\>"], "Output",
 CellLabel->"Out[78]=",ExpressionUUID->"0d320533-77df-544f-88d4-fae77246d66c"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCode", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "2"], ",", 
     RowBox[{
      SubscriptBox["z", "1"], 
      SubsuperscriptBox["x", "4", "2"]}], ",", 
     RowBox[{
      SubsuperscriptBox["z", "2", "2"], 
      SubsuperscriptBox["x", "3", "3"]}]}], "}"}], ",", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", 
      SubscriptBox["x", "2"], 
      SubscriptBox["x", "3"]}], "+", 
     RowBox[{"8", 
      SubscriptBox["z", "1"], 
      SubscriptBox[
       OverscriptBox["z", "_"], "1"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"6", "I"}]}], ")"}], 
      SubscriptBox["z", "2"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"6", "I"}]}], ")"}], 
      SubscriptBox[
       OverscriptBox["z", "_"], "2"]}]}], ")"}], ",", "17", ",", "True", ",", 
   
   RowBox[{"Complexes", "->", "Reals"}]}], "]"}]], "Input",
 CellLabel->"In[79]:=",ExpressionUUID->"a8cb2f8b-17dc-264b-a6fb-b90652bc3138"],

Cell[BoxData["\<\"Dict{FastKey{BigInt},Tuple{Vector{Int32},Vector{Int16}}}(\\\
n    FastKey(BigInt(50)) => (lower ? Int32[17,43] : Int32[17,31], \
Int16[-2,-2]),\\n    FastKey(BigInt(51)) => (lower ? Int32[17,43] : \
Int32[17,31], Int16[6,6]),\\n    FastKey(BigInt(66)) => (lower ? Int32[17,43] \
: Int32[17,31], Int16[8,8]),\\n    FastKey(BigInt(79)) => (lower ? \
Int32[18,44] : Int32[18,36], Int16[-2,-2]),\\n    FastKey(BigInt(80)) => \
(lower ? Int32[18,44] : Int32[18,36], Int16[6,6]),\\n    FastKey(BigInt(84)) \
=> (lower ? Int32[17,43] : Int32[17,31], Int16[4,4]),\\n    \
FastKey(BigInt(158)) => (lower ? Int32[18,44] : Int32[18,36], Int16[8,8]),\\n \
   FastKey(BigInt(171)) => (lower ? Int32[25,47] : Int32[19,37], \
Int16[-2,-2]),\\n    FastKey(BigInt(172)) => (lower ? Int32[25,47] : \
Int32[19,37], Int16[6,6]),\\n    FastKey(BigInt(176)) => (lower ? \
Int32[18,44] : Int32[18,36], Int16[4,4]),\\n    FastKey(BigInt(272)) => \
(lower ? Int32[19,23,34,45] : Int32[20,29,38,42], lower ? Int16[-1,-3,3,-1] : \
Int16[-1,3,-3,-1]),\\n    FastKey(BigInt(273)) => (lower ? Int32[19,23,34,45] \
: Int32[20,29,38,42], lower ? Int16[-1,3,-3,-1] : Int16[-1,-3,3,-1]),\\n    \
FastKey(BigInt(275)) => (lower ? Int32[19,23,34,45] : Int32[20,29,38,42], \
lower ? Int16[-3,-1,1,-3] : Int16[-3,1,-1,-3]),\\n    FastKey(BigInt(276)) => \
(lower ? Int32[19,23,34,45] : Int32[20,29,38,42], lower ? Int16[3,-1,1,3] : \
Int16[3,1,-1,3]),\\n    FastKey(BigInt(404)) => (lower ? Int32[25,47] : \
Int32[19,37], Int16[8,8]),\\n    FastKey(BigInt(422)) => (lower ? \
Int32[25,47] : Int32[19,37], Int16[4,4]),\\n    FastKey(BigInt(650)) => \
(lower ? Int32[19,45] : Int32[20,42], Int16[4,4]),\\n    FastKey(BigInt(653)) \
=> (lower ? Int32[23,34] : Int32[29,38], lower ? Int16[4,-4] : \
Int16[-4,4]),\\n    FastKey(BigInt(854)) => (lower ? Int32[26,30,35,48] : \
Int32[21,34,39,43], lower ? Int16[-1,-3,3,-1] : Int16[-1,3,-3,-1]),\\n    \
FastKey(BigInt(855)) => (lower ? Int32[26,30,35,48] : Int32[21,34,39,43], \
lower ? Int16[-1,3,-3,-1] : Int16[-1,-3,3,-1]),\\n    FastKey(BigInt(857)) => \
(lower ? Int32[26,30,35,48] : Int32[21,34,39,43], lower ? Int16[-3,-1,1,-3] : \
Int16[-3,1,-1,-3]),\\n    FastKey(BigInt(858)) => (lower ? Int32[26,30,35,48] \
: Int32[21,34,39,43], lower ? Int16[3,-1,1,3] : Int16[3,1,-1,3]),\\n    \
FastKey(BigInt(898)) => (lower ? Int32[19,45] : Int32[20,42], Int16[2,2]),\\n \
   FastKey(BigInt(899)) => (lower ? Int32[23,34] : Int32[29,38], lower ? \
Int16[2,-2] : Int16[-2,2]),\\n    FastKey(BigInt(1742)) => (lower ? \
Int32[20,24,39,46] : Int32[23,30,45,49], lower ? Int16[-1,-3,3,-1] : \
Int16[-1,3,-3,-1]),\\n    FastKey(BigInt(1743)) => (lower ? \
Int32[20,24,39,46] : Int32[23,30,45,49], lower ? Int16[-1,3,-3,-1] : \
Int16[-1,-3,3,-1]),\\n    FastKey(BigInt(1744)) => (lower ? \
Int32[20,24,39,46] : Int32[23,30,45,49], lower ? Int16[-3,-1,1,-3] : \
Int16[-3,1,-1,-3]),\\n    FastKey(BigInt(1745)) => (lower ? \
Int32[20,24,39,46] : Int32[23,30,45,49], lower ? Int16[3,-1,1,3] : \
Int16[3,1,-1,3]),\\n    FastKey(BigInt(1904)) => (lower ? Int32[26,48] : \
Int32[21,43], Int16[4,4]),\\n    FastKey(BigInt(1907)) => (lower ? \
Int32[30,35] : Int32[34,39], lower ? Int16[4,-4] : Int16[-4,4]),\\n    \
FastKey(BigInt(2152)) => (lower ? Int32[26,48] : Int32[21,43], \
Int16[2,2]),\\n    FastKey(BigInt(2153)) => (lower ? Int32[30,35] : \
Int32[34,39], lower ? Int16[2,-2] : Int16[-2,2]),\\n    FastKey(BigInt(3360)) \
=> (lower ? Int32[32,50] : Int32[22,44], Int16[-2,-2]),\\n    \
FastKey(BigInt(3361)) => (lower ? Int32[32,50] : Int32[22,44], \
Int16[6,6]),\\n    FastKey(BigInt(3737)) => (lower ? Int32[20,46] : \
Int32[23,49], Int16[4,4]),\\n    FastKey(BigInt(3739)) => (lower ? \
Int32[24,39] : Int32[30,45], lower ? Int16[4,-4] : Int16[-4,4]),\\n    \
FastKey(BigInt(4250)) => (lower ? Int32[27,31,40,49] : Int32[24,35,46,50], \
lower ? Int16[-1,-3,3,-1] : Int16[-1,3,-3,-1]),\\n    FastKey(BigInt(4251)) \
=> (lower ? Int32[27,31,40,49] : Int32[24,35,46,50], lower ? \
Int16[-1,3,-3,-1] : Int16[-1,-3,3,-1]),\\n    FastKey(BigInt(4252)) => (lower \
? Int32[27,31,40,49] : Int32[24,35,46,50], lower ? Int16[-3,-1,1,-3] : \
Int16[-3,1,-1,-3]),\\n    FastKey(BigInt(4253)) => (lower ? \
Int32[27,31,40,49] : Int32[24,35,46,50], lower ? Int16[3,-1,1,3] : \
Int16[3,1,-1,3]),\\n    FastKey(BigInt(4285)) => (lower ? Int32[20,46] : \
Int32[23,49], Int16[2,2]),\\n    FastKey(BigInt(4287)) => (lower ? \
Int32[24,39] : Int32[30,45], lower ? Int16[2,-2] : Int16[-2,2]),\\n    \
FastKey(BigInt(6939)) => (lower ? Int32[32,50] : Int32[22,44], \
Int16[8,8]),\\n    FastKey(BigInt(8304)) => (lower ? Int32[32,50] : \
Int32[22,44], Int16[4,4]),\\n    FastKey(BigInt(8456)) => (lower ? \
Int32[27,49] : Int32[24,50], Int16[4,4]),\\n    FastKey(BigInt(8458)) => \
(lower ? Int32[31,40] : Int32[35,46], lower ? Int16[4,-4] : Int16[-4,4]),\\n  \
  FastKey(BigInt(9004)) => (lower ? Int32[27,49] : Int32[24,50], Int16[2,2]),\
\\n    FastKey(BigInt(9006)) => (lower ? Int32[31,40] : Int32[35,46], lower ? \
Int16[2,-2] : Int16[-2,2]),\\n    FastKey(BigInt(14606)) => (lower ? \
Int32[33,37,41,51] : Int32[25,41,47,51], lower ? Int16[-1,3,-3,-1] : \
Int16[-1,-3,3,-1]),\\n    FastKey(BigInt(14607)) => (lower ? \
Int32[33,37,41,51] : Int32[25,41,47,51], lower ? Int16[-1,-3,3,-1] : \
Int16[-1,3,-3,-1]),\\n    FastKey(BigInt(14614)) => (lower ? \
Int32[33,37,41,51] : Int32[25,41,47,51], lower ? Int16[-3,1,-1,-3] : \
Int16[-3,-1,1,-3]),\\n    FastKey(BigInt(14615)) => (lower ? \
Int32[33,37,41,51] : Int32[25,41,47,51], lower ? Int16[3,1,-1,3] : \
Int16[3,-1,1,3]),\\n    FastKey(BigInt(26806)) => (lower ? Int32[33,51] : \
Int32[25,51], Int16[4,4]),\\n    FastKey(BigInt(26814)) => (lower ? \
Int32[37,41] : Int32[41,47], lower ? Int16[-4,4] : Int16[4,-4]),\\n    \
FastKey(BigInt(29209)) => (lower ? Int32[33,51] : Int32[25,51], \
Int16[2,2]),\\n    FastKey(BigInt(29213)) => (lower ? Int32[37,41] : \
Int32[41,47], lower ? Int16[-2,2] : Int16[2,-2]),\\n    \
FastKey(BigInt(47925)) => (lower ? Int32[38,52] : Int32[26,52], \
Int16[-2,-2]),\\n    FastKey(BigInt(47926)) => (lower ? Int32[38,52] : \
Int32[26,52], Int16[6,6]),\\n    FastKey(BigInt(81393)) => (lower ? \
Int32[38,52] : Int32[26,52], Int16[8,8]),\\n    FastKey(BigInt(86063)) => \
(lower ? Int32[38,52] : Int32[26,52], Int16[4,4]),\\n)\"\>"], "Output",
 CellLabel->"Out[79]=",ExpressionUUID->"1066f6b6-c2eb-9541-8927-8780fe514fb9"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCode", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "2"], ",", 
     RowBox[{
      SubscriptBox["z", "1"], 
      SubsuperscriptBox["x", "4", "2"]}], ",", 
     RowBox[{
      SubsuperscriptBox["z", "2", "2"], 
      SubsuperscriptBox["x", "3", "3"]}]}], "}"}], ",", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        RowBox[{"4", 
         SubscriptBox["x", "2"], 
         SubscriptBox["x", "3"]}], "+", 
        RowBox[{"8", 
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"6", "I"}]}], ")"}], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"6", "I"}]}], ")"}], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{"18", 
        SubscriptBox["x", "4"]}], 
       RowBox[{
        RowBox[{"10", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"8", 
         SubscriptBox["z", "2"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}]},
      {
       RowBox[{"18", 
        SubscriptBox["x", "4"]}], "0", 
       RowBox[{
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}]},
      {
       RowBox[{
        RowBox[{"10", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"8", 
         SubscriptBox["z", "2"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{"6", 
        SubscriptBox["x", "2"], 
        SubscriptBox["x", "4"]}]}
     }], ")"}], ",", "17", ",", "True", ",", 
   RowBox[{"Complexes", "->", "Reals"}]}], "]"}]], "Input",
 CellLabel->"In[80]:=",ExpressionUUID->"ea53f7fe-3961-6a4e-aaea-a8676f68512e"],

Cell[BoxData["\<\"Dict{FastKey{BigInt},Tuple{Vector{Int32},Vector{Int16}}}(\\\
n    FastKey(BigInt(50)) => (lower ? Int32[17,239] : Int32[17,107], \
Int16[-2,-2]),\\n    FastKey(BigInt(51)) => (lower ? Int32[17,239] : \
Int32[17,107], Int16[6,6]),\\n    FastKey(BigInt(54)) => (lower ? \
Int32[18,240] : Int32[18,120], Int16[18,18]),\\n    FastKey(BigInt(57)) => \
(lower ? Int32[19,241] : Int32[20,134], Int16[10,10]),\\n    \
FastKey(BigInt(59)) => (lower ? Int32[19,241] : Int32[20,134], \
Int16[8,8]),\\n    FastKey(BigInt(66)) => (lower ? Int32[17,239] : \
Int32[17,107], Int16[8,8]),\\n    FastKey(BigInt(74)) => (lower ? \
Int32[42,252] : Int32[21,135], Int16[-24,-24]),\\n    FastKey(BigInt(79)) => \
(lower ? Int32[20,242] : Int32[23,149], Int16[-2,-2]),\\n    \
FastKey(BigInt(80)) => (lower ? Int32[20,242] : Int32[23,149], \
Int16[6,6]),\\n    FastKey(BigInt(83)) => (lower ? \
Int32[21,43,64,243,253,262] : Int32[22,24,27,136,150,165], lower ? \
Int16[18,18,6,18,18,6] : Int16[6,18,18,6,18,18]),\\n    FastKey(BigInt(84)) \
=> (lower ? Int32[17,239] : Int32[17,107], Int16[4,4]),\\n    \
FastKey(BigInt(92)) => (lower ? Int32[22,65,244,263] : Int32[25,32,151,182], \
Int16[10,10,10,10]),\\n    FastKey(BigInt(151)) => (lower ? \
Int32[22,65,244,263] : Int32[25,32,151,182], Int16[8,8,8,8]),\\n    \
FastKey(BigInt(158)) => (lower ? Int32[20,242] : Int32[23,149], \
Int16[8,8]),\\n    FastKey(BigInt(166)) => (lower ? Int32[45,66,255,264] : \
Int32[29,33,167,183], Int16[-24,-24,-24,-24]),\\n    FastKey(BigInt(171)) => \
(lower ? Int32[86,272] : Int32[26,152], Int16[-2,-2]),\\n    \
FastKey(BigInt(172)) => (lower ? Int32[86,272] : Int32[26,152], \
Int16[6,6]),\\n    FastKey(BigInt(175)) => (lower ? Int32[67,87,265,273] : \
Int32[30,34,168,184], lower ? Int16[6,18,6,18] : Int16[18,6,18,6]),\\n    \
FastKey(BigInt(176)) => (lower ? Int32[20,242] : Int32[23,149], \
Int16[4,4]),\\n    FastKey(BigInt(205)) => (lower ? Int32[88,274] : \
Int32[35,185], Int16[10,10]),\\n    FastKey(BigInt(272)) => (lower ? \
Int32[23,35,152,245] : Int32[38,101,188,200], lower ? Int16[-1,-3,3,-1] : \
Int16[-1,3,-3,-1]),\\n    FastKey(BigInt(273)) => (lower ? \
Int32[23,35,152,245] : Int32[38,101,188,200], lower ? Int16[-1,3,-3,-1] : \
Int16[-1,-3,3,-1]),\\n    FastKey(BigInt(275)) => (lower ? \
Int32[23,35,152,245] : Int32[38,101,188,200], lower ? Int16[-3,-1,1,-3] : \
Int16[-3,1,-1,-3]),\\n    FastKey(BigInt(276)) => (lower ? \
Int32[23,35,152,245] : Int32[38,101,188,200], lower ? Int16[3,-1,1,3] : \
Int16[3,1,-1,3]),\\n    FastKey(BigInt(281)) => (lower ? Int32[24,46,246,256] \
: Int32[39,45,201,219], Int16[9,9,9,9]),\\n    FastKey(BigInt(282)) => (lower \
? Int32[36,58,153,169] : Int32[102,114,189,207], lower ? Int16[9,9,-9,-9] : \
Int16[-9,-9,9,9]),\\n    FastKey(BigInt(397)) => (lower ? Int32[88,274] : \
Int32[35,185], Int16[8,8]),\\n    FastKey(BigInt(404)) => (lower ? \
Int32[86,272] : Int32[26,152], Int16[8,8]),\\n    FastKey(BigInt(412)) => \
(lower ? Int32[108,282] : Int32[36,186], Int16[-24,-24]),\\n    \
FastKey(BigInt(421)) => (lower ? Int32[127,289] : Int32[37,187], Int16[6,6]),\
\\n    FastKey(BigInt(422)) => (lower ? Int32[86,272] : Int32[26,152], \
Int16[4,4]),\\n    FastKey(BigInt(456)) => (lower ? Int32[25,68,247,266] : \
Int32[40,53,202,239], Int16[5,5,5,5]),\\n    FastKey(BigInt(457)) => (lower ? \
Int32[37,80,154,185] : Int32[103,128,190,227], lower ? Int16[5,5,-5,-5] : \
Int16[-5,-5,5,5]),\\n    FastKey(BigInt(640)) => (lower ? \
Int32[25,68,247,266] : Int32[40,53,202,239], Int16[4,4,4,4]),\\n    \
FastKey(BigInt(646)) => (lower ? Int32[37,80,154,185] : \
Int32[103,128,190,227], lower ? Int16[4,4,-4,-4] : Int16[-4,-4,4,4]),\\n    \
FastKey(BigInt(650)) => (lower ? Int32[23,245] : Int32[38,200], \
Int16[4,4]),\\n    FastKey(BigInt(653)) => (lower ? Int32[35,152] : \
Int32[101,188], lower ? Int16[4,-4] : Int16[-4,4]),\\n    \
FastKey(BigInt(728)) => (lower ? Int32[60,81,171,186] : \
Int32[116,129,209,228], lower ? Int16[12,12,-12,-12] : Int16[-12,-12,12,12]),\
\\n    FastKey(BigInt(729)) => (lower ? Int32[60,81,171,186] : \
Int32[116,129,209,228], lower ? Int16[-12,-12,12,12] : Int16[12,12,-12,-12]),\
\\n    FastKey(BigInt(731)) => (lower ? Int32[48,69,258,267] : \
Int32[47,54,221,240], Int16[12,12,12,12]),\\n    FastKey(BigInt(732)) => \
(lower ? Int32[48,69,258,267] : Int32[47,54,221,240], \
Int16[-12,-12,-12,-12]),\\n    FastKey(BigInt(854)) => (lower ? \
Int32[89,101,155,275] : Int32[41,143,191,203], lower ? Int16[-1,-3,3,-1] : \
Int16[-1,3,-3,-1]),\\n    FastKey(BigInt(855)) => (lower ? \
Int32[89,101,155,275] : Int32[41,143,191,203], lower ? Int16[-1,3,-3,-1] : \
Int16[-1,-3,3,-1]),\\n    FastKey(BigInt(857)) => (lower ? \
Int32[89,101,155,275] : Int32[41,143,191,203], lower ? Int16[-3,-1,1,-3] : \
Int16[-3,1,-1,-3]),\\n    FastKey(BigInt(858)) => (lower ? \
Int32[89,101,155,275] : Int32[41,143,191,203], lower ? Int16[3,-1,1,3] : \
Int16[3,1,-1,3]),\\n    FastKey(BigInt(863)) => (lower ? \
Int32[70,90,109,268,276,283] : Int32[42,48,55,204,222,241], lower ? \
Int16[3,9,9,3,9,9] : Int16[9,9,3,9,9,3]),\\n    FastKey(BigInt(864)) => \
(lower ? Int32[82,102,121,156,172,187] : Int32[130,144,159,192,210,229], \
lower ? Int16[3,9,9,-9,-9,-3] : Int16[-3,-9,-9,9,9,3]),\\n    \
FastKey(BigInt(898)) => (lower ? Int32[23,245] : Int32[38,200], \
Int16[2,2]),\\n    FastKey(BigInt(899)) => (lower ? Int32[35,152] : \
Int32[101,188], lower ? Int16[2,-2] : Int16[-2,2]),\\n    \
FastKey(BigInt(1164)) => (lower ? Int32[91,128,277,290] : \
Int32[43,56,205,242], Int16[5,5,5,5]),\\n    FastKey(BigInt(1165)) => (lower \
? Int32[103,140,157,188] : Int32[145,176,193,230], lower ? Int16[5,5,-5,-5] : \
Int16[-5,-5,5,5]),\\n    FastKey(BigInt(1742)) => (lower ? \
Int32[26,38,200,248] : Int32[62,104,248,260], lower ? Int16[-1,-3,3,-1] : \
Int16[-1,3,-3,-1]),\\n    FastKey(BigInt(1743)) => (lower ? \
Int32[26,38,200,248] : Int32[62,104,248,260], lower ? Int16[-1,3,-3,-1] : \
Int16[-1,-3,3,-1]),\\n    FastKey(BigInt(1744)) => (lower ? \
Int32[26,38,200,248] : Int32[62,104,248,260], lower ? Int16[-3,-1,1,-3] : \
Int16[-3,1,-1,-3]),\\n    FastKey(BigInt(1745)) => (lower ? \
Int32[26,38,200,248] : Int32[62,104,248,260], lower ? Int16[3,-1,1,3] : \
Int16[3,1,-1,3]),\\n    FastKey(BigInt(1762)) => (lower ? \
Int32[27,49,249,259] : Int32[63,72,261,282], Int16[9,9,9,9]),\\n    \
FastKey(BigInt(1764)) => (lower ? Int32[39,61,201,214] : \
Int32[105,117,249,270], lower ? Int16[9,9,-9,-9] : Int16[-9,-9,9,9]),\\n    \
FastKey(BigInt(1894)) => (lower ? Int32[91,128,277,290] : \
Int32[43,56,205,242], Int16[4,4,4,4]),\\n    FastKey(BigInt(1900)) => (lower \
? Int32[103,140,157,188] : Int32[145,176,193,230], lower ? Int16[4,4,-4,-4] : \
Int16[-4,-4,4,4]),\\n    FastKey(BigInt(1904)) => (lower ? Int32[89,275] : \
Int32[41,203], Int16[4,4]),\\n    FastKey(BigInt(1907)) => (lower ? \
Int32[101,155] : Int32[143,191], lower ? Int16[4,-4] : Int16[-4,4]),\\n    \
FastKey(BigInt(1982)) => (lower ? Int32[123,141,174,189] : \
Int32[161,177,212,231], lower ? Int16[12,12,-12,-12] : Int16[-12,-12,12,12]),\
\\n    FastKey(BigInt(1983)) => (lower ? Int32[123,141,174,189] : \
Int32[161,177,212,231], lower ? Int16[-12,-12,12,12] : Int16[12,12,-12,-12]),\
\\n    FastKey(BigInt(1985)) => (lower ? Int32[111,129,285,291] : \
Int32[50,57,224,243], Int16[12,12,12,12]),\\n    FastKey(BigInt(1986)) => \
(lower ? Int32[111,129,285,291] : Int32[50,57,224,243], \
Int16[-12,-12,-12,-12]),\\n    FastKey(BigInt(2117)) => (lower ? \
Int32[130,292] : Int32[58,244], Int16[3,3]),\\n    FastKey(BigInt(2118)) => \
(lower ? Int32[142,190] : Int32[178,232], lower ? Int16[3,-3] : Int16[-3,3]),\
\\n    FastKey(BigInt(2152)) => (lower ? Int32[89,275] : Int32[41,203], \
Int16[2,2]),\\n    FastKey(BigInt(2153)) => (lower ? Int32[101,155] : \
Int32[143,191], lower ? Int16[2,-2] : Int16[-2,2]),\\n    \
FastKey(BigInt(2491)) => (lower ? Int32[28,71,250,269] : \
Int32[64,83,262,305], Int16[5,5,5,5]),\\n    FastKey(BigInt(2493)) => (lower \
? Int32[40,83,202,227] : Int32[106,131,250,293], lower ? Int16[5,5,-5,-5] : \
Int16[-5,-5,5,5]),\\n    FastKey(BigInt(3360)) => (lower ? Int32[146,296] : \
Int32[44,206], Int16[-2,-2]),\\n    FastKey(BigInt(3361)) => (lower ? \
Int32[146,296] : Int32[44,206], Int16[6,6]),\\n    FastKey(BigInt(3375)) => \
(lower ? Int32[147,297] : Int32[51,225], Int16[18,18]),\\n    \
FastKey(BigInt(3719)) => (lower ? Int32[28,71,250,269] : \
Int32[64,83,262,305], Int16[4,4,4,4]),\\n    FastKey(BigInt(3721)) => (lower \
? Int32[40,83,202,227] : Int32[106,131,250,293], lower ? Int16[4,4,-4,-4] : \
Int16[-4,-4,4,4]),\\n    FastKey(BigInt(3737)) => (lower ? Int32[26,248] : \
Int32[62,260], Int16[4,4]),\\n    FastKey(BigInt(3739)) => (lower ? \
Int32[38,200] : Int32[104,248], lower ? Int16[4,-4] : Int16[-4,4]),\\n    \
FastKey(BigInt(3788)) => (lower ? Int32[63,84,216,228] : \
Int32[119,132,272,294], lower ? Int16[12,12,-12,-12] : Int16[-12,-12,12,12]),\
\\n    FastKey(BigInt(3789)) => (lower ? Int32[63,84,216,228] : \
Int32[119,132,272,294], lower ? Int16[-12,-12,12,12] : Int16[12,12,-12,-12]),\
\\n    FastKey(BigInt(3790)) => (lower ? Int32[51,72,261,270] : \
Int32[74,84,284,306], Int16[12,12,12,12]),\\n    FastKey(BigInt(3791)) => \
(lower ? Int32[51,72,261,270] : Int32[74,84,284,306], \
Int16[-12,-12,-12,-12]),\\n    FastKey(BigInt(4250)) => (lower ? \
Int32[92,104,203,278] : Int32[65,146,251,263], lower ? Int16[-1,-3,3,-1] : \
Int16[-1,3,-3,-1]),\\n    FastKey(BigInt(4251)) => (lower ? \
Int32[92,104,203,278] : Int32[65,146,251,263], lower ? Int16[-1,3,-3,-1] : \
Int16[-1,-3,3,-1]),\\n    FastKey(BigInt(4252)) => (lower ? \
Int32[92,104,203,278] : Int32[65,146,251,263], lower ? Int16[-3,-1,1,-3] : \
Int16[-3,1,-1,-3]),\\n    FastKey(BigInt(4253)) => (lower ? \
Int32[92,104,203,278] : Int32[65,146,251,263], lower ? Int16[3,-1,1,3] : \
Int16[3,1,-1,3]),\\n    FastKey(BigInt(4270)) => (lower ? \
Int32[73,93,112,271,279,286] : Int32[66,75,85,264,285,307], lower ? \
Int16[3,9,9,3,9,9] : Int16[9,9,3,9,9,3]),\\n    FastKey(BigInt(4272)) => \
(lower ? Int32[85,105,124,204,217,229] : Int32[133,147,162,252,273,295], \
lower ? Int16[3,9,9,-9,-9,-3] : Int16[-3,-9,-9,9,9,3]),\\n    \
FastKey(BigInt(4285)) => (lower ? Int32[26,248] : Int32[62,260], Int16[2,2]),\
\\n    FastKey(BigInt(4287)) => (lower ? Int32[38,200] : Int32[104,248], \
lower ? Int16[2,-2] : Int16[-2,2]),\\n    FastKey(BigInt(4971)) => (lower ? \
Int32[148,298] : Int32[59,245], Int16[10,10]),\\n    FastKey(BigInt(5461)) => \
(lower ? Int32[94,131,280,293] : Int32[67,86,265,308], Int16[5,5,5,5]),\\n    \
FastKey(BigInt(5463)) => (lower ? Int32[106,143,205,230] : \
Int32[148,179,253,296], lower ? Int16[5,5,-5,-5] : Int16[-5,-5,5,5]),\\n    \
FastKey(BigInt(6929)) => (lower ? Int32[148,298] : Int32[59,245], \
Int16[8,8]),\\n    FastKey(BigInt(6939)) => (lower ? Int32[146,296] : \
Int32[44,206], Int16[8,8]),\\n    FastKey(BigInt(7288)) => (lower ? \
Int32[165,303] : Int32[60,246], Int16[-24,-24]),\\n    FastKey(BigInt(8094)) \
=> (lower ? Int32[181,307] : Int32[61,247], Int16[6,6]),\\n    \
FastKey(BigInt(8304)) => (lower ? Int32[146,296] : Int32[44,206], \
Int16[4,4]),\\n    FastKey(BigInt(8438)) => (lower ? Int32[94,131,280,293] : \
Int32[67,86,265,308], Int16[4,4,4,4]),\\n    FastKey(BigInt(8440)) => (lower \
? Int32[106,143,205,230] : Int32[148,179,253,296], lower ? Int16[4,4,-4,-4] : \
Int16[-4,-4,4,4]),\\n    FastKey(BigInt(8456)) => (lower ? Int32[92,278] : \
Int32[65,263], Int16[4,4]),\\n    FastKey(BigInt(8458)) => (lower ? \
Int32[104,203] : Int32[146,251], lower ? Int16[4,-4] : Int16[-4,4]),\\n    \
FastKey(BigInt(8507)) => (lower ? Int32[126,144,219,231] : \
Int32[164,180,275,297], lower ? Int16[12,12,-12,-12] : Int16[-12,-12,12,12]),\
\\n    FastKey(BigInt(8508)) => (lower ? Int32[126,144,219,231] : \
Int32[164,180,275,297], lower ? Int16[-12,-12,12,12] : Int16[12,12,-12,-12]),\
\\n    FastKey(BigInt(8509)) => (lower ? Int32[114,132,288,294] : \
Int32[77,87,287,309], Int16[12,12,12,12]),\\n    FastKey(BigInt(8510)) => \
(lower ? Int32[114,132,288,294] : Int32[77,87,287,309], \
Int16[-12,-12,-12,-12]),\\n    FastKey(BigInt(8989)) => (lower ? \
Int32[133,295] : Int32[88,310], Int16[3,3]),\\n    FastKey(BigInt(8991)) => \
(lower ? Int32[145,232] : Int32[181,298], lower ? Int16[3,-3] : Int16[-3,3]),\
\\n    FastKey(BigInt(9004)) => (lower ? Int32[92,278] : Int32[65,263], \
Int16[2,2]),\\n    FastKey(BigInt(9006)) => (lower ? Int32[104,203] : \
Int32[146,251], lower ? Int16[2,-2] : Int16[-2,2]),\\n    \
FastKey(BigInt(14606)) => (lower ? Int32[149,161,206,299] : \
Int32[68,197,254,266], lower ? Int16[-1,3,-3,-1] : Int16[-1,-3,3,-1]),\\n    \
FastKey(BigInt(14607)) => (lower ? Int32[149,161,206,299] : \
Int32[68,197,254,266], lower ? Int16[-1,-3,3,-1] : Int16[-1,3,-3,-1]),\\n    \
FastKey(BigInt(14614)) => (lower ? Int32[149,161,206,299] : \
Int32[68,197,254,266], lower ? Int16[-3,1,-1,-3] : Int16[-3,-1,1,-3]),\\n    \
FastKey(BigInt(14615)) => (lower ? Int32[149,161,206,299] : \
Int32[68,197,254,266], lower ? Int16[3,1,-1,3] : Int16[3,-1,1,3]),\\n    \
FastKey(BigInt(14640)) => (lower ? Int32[150,166,300,304] : \
Int32[69,78,267,288], Int16[9,9,9,9]),\\n    FastKey(BigInt(14644)) => (lower \
? Int32[162,178,207,220] : Int32[198,216,255,276], lower ? Int16[-9,-9,9,9] : \
Int16[9,9,-9,-9]),\\n    FastKey(BigInt(19056)) => (lower ? \
Int32[151,182,301,308] : Int32[70,89,268,311], Int16[5,5,5,5]),\\n    \
FastKey(BigInt(19060)) => (lower ? Int32[163,194,208,233] : \
Int32[199,236,256,299], lower ? Int16[-5,-5,5,5] : Int16[5,5,-5,-5]),\\n    \
FastKey(BigInt(26783)) => (lower ? Int32[151,182,301,308] : \
Int32[70,89,268,311], Int16[4,4,4,4]),\\n    FastKey(BigInt(26796)) => (lower \
? Int32[163,194,208,233] : Int32[199,236,256,299], lower ? Int16[-4,-4,4,4] : \
Int16[4,4,-4,-4]),\\n    FastKey(BigInt(26806)) => (lower ? Int32[149,299] : \
Int32[68,266], Int16[4,4]),\\n    FastKey(BigInt(26814)) => (lower ? \
Int32[161,206] : Int32[197,254], lower ? Int16[-4,4] : Int16[4,-4]),\\n    \
FastKey(BigInt(27047)) => (lower ? Int32[180,195,222,234] : \
Int32[218,237,278,300], lower ? Int16[-12,-12,12,12] : Int16[12,12,-12,-12]),\
\\n    FastKey(BigInt(27048)) => (lower ? Int32[180,195,222,234] : \
Int32[218,237,278,300], lower ? Int16[12,12,-12,-12] : Int16[-12,-12,12,12]),\
\\n    FastKey(BigInt(27055)) => (lower ? Int32[168,183,306,309] : \
Int32[80,90,290,312], Int16[12,12,12,12]),\\n    FastKey(BigInt(27056)) => \
(lower ? Int32[168,183,306,309] : Int32[80,90,290,312], \
Int16[-12,-12,-12,-12]),\\n    FastKey(BigInt(29083)) => (lower ? \
Int32[184,310] : Int32[91,313], Int16[3,3]),\\n    FastKey(BigInt(29087)) => \
(lower ? Int32[196,235] : Int32[238,301], lower ? Int16[-3,3] : Int16[3,-3]),\
\\n    FastKey(BigInt(29209)) => (lower ? Int32[149,299] : Int32[68,266], \
Int16[2,2]),\\n    FastKey(BigInt(29213)) => (lower ? Int32[161,206] : \
Int32[197,254], lower ? Int16[-2,2] : Int16[2,-2]),\\n    \
FastKey(BigInt(47925)) => (lower ? Int32[197,311] : Int32[71,269], \
Int16[-2,-2]),\\n    FastKey(BigInt(47926)) => (lower ? Int32[197,311] : \
Int32[71,269], Int16[6,6]),\\n    FastKey(BigInt(47981)) => (lower ? \
Int32[198,312] : Int32[81,291], Int16[18,18]),\\n    FastKey(BigInt(59062)) \
=> (lower ? Int32[199,313] : Int32[92,314], Int16[10,10]),\\n    \
FastKey(BigInt(81360)) => (lower ? Int32[199,313] : Int32[92,314], \
Int16[8,8]),\\n    FastKey(BigInt(81393)) => (lower ? Int32[197,311] : \
Int32[71,269], Int16[8,8]),\\n    FastKey(BigInt(81570)) => (lower ? \
Int32[213,315] : Int32[93,315], Int16[-24,-24]),\\n    FastKey(BigInt(85993)) \
=> (lower ? Int32[226,316] : Int32[94,316], Int16[6,6]),\\n    \
FastKey(BigInt(86063)) => (lower ? Int32[197,311] : Int32[71,269], \
Int16[4,4]),\\n)\"\>"], "Output",
 CellLabel->"Out[80]=",ExpressionUUID->"3d756d3c-9a46-dc46-84a5-cc54ac3c7068"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCode", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "2"], ",", 
     RowBox[{
      SubscriptBox["z", "1"], 
      SubsuperscriptBox["x", "4", "2"]}], ",", 
     RowBox[{
      SubsuperscriptBox["z", "2", "2"], 
      SubsuperscriptBox["x", "3", "3"]}]}], "}"}], ",", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        RowBox[{"4", 
         SubscriptBox["x", "2"], 
         SubscriptBox["x", "3"]}], "+", 
        RowBox[{"8", 
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"6", "I"}]}], ")"}], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"6", "I"}]}], ")"}], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "-", 
           RowBox[{"2", "I"}]}], ")"}], 
         SubsuperscriptBox[
          OverscriptBox["z", "_"], "2", "2"]}], "-", 
        RowBox[{"8", 
         SubsuperscriptBox["z", "2", "2"]}], "-", 
        RowBox[{"6", "I", " ", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"2", 
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}]}], 
       RowBox[{
        RowBox[{"10", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"8", 
         SubscriptBox["z", "2"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "+", 
           RowBox[{"2", "I"}]}], ")"}], 
         SubsuperscriptBox["z", "2", "2"]}], "-", 
        RowBox[{"8", 
         SubsuperscriptBox[
          OverscriptBox["z", "_"], "2", "2"]}], "+", 
        RowBox[{"6", "I", " ", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"2", 
         SubscriptBox["z", "1"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}]}], "0", 
       RowBox[{
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}]},
      {
       RowBox[{
        RowBox[{"10", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{"8", 
         SubscriptBox["z", "2"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox["z", "2"]}], "-", 
        RowBox[{"24", "I", " ", 
         SubscriptBox["x", "3"], 
         SubscriptBox[
          OverscriptBox["z", "_"], "2"]}]}], 
       RowBox[{"6", 
        SubscriptBox["x", "2"], 
        SubscriptBox["x", "4"]}]}
     }], ")"}], ",", "17", ",", "True", ",", 
   RowBox[{"Complexes", "->", "Reals"}]}], "]"}]], "Input",
 CellLabel->"In[81]:=",ExpressionUUID->"25a8bca2-373e-8148-831d-cd0e5f4c6d46"],

Cell[BoxData["\<\"Dict{FastKey{BigInt},Tuple{Vector{Int32},Vector{Int16}}}(\\\
n    FastKey(BigInt(50)) => (lower ? Int32[17,239] : Int32[17,107], \
Int16[-2,-2]),\\n    FastKey(BigInt(51)) => (lower ? Int32[17,239] : \
Int32[17,107], Int16[6,6]),\\n    FastKey(BigInt(57)) => (lower ? \
Int32[19,30,52,241] : Int32[20,96,108,134], lower ? Int16[10,6,-6,10] : \
Int16[10,-6,6,10]),\\n    FastKey(BigInt(58)) => (lower ? Int32[30,52] : \
Int32[96,108], lower ? Int16[1,-1] : Int16[-1,1]),\\n    FastKey(BigInt(59)) \
=> (lower ? Int32[19,241] : Int32[20,134], Int16[8,8]),\\n    \
FastKey(BigInt(60)) => (lower ? Int32[18,30,52,240] : Int32[18,96,108,120], \
lower ? Int16[-1,8,-8,-1] : Int16[-1,-8,8,-1]),\\n    FastKey(BigInt(66)) => \
(lower ? Int32[17,18,239,240] : Int32[17,18,107,120], Int16[8,2,8,2]),\\n    \
FastKey(BigInt(74)) => (lower ? Int32[42,252] : Int32[21,135], \
Int16[-24,-24]),\\n    FastKey(BigInt(79)) => (lower ? Int32[20,242] : \
Int32[23,149], Int16[-2,-2]),\\n    FastKey(BigInt(80)) => (lower ? \
Int32[20,242] : Int32[23,149], Int16[6,6]),\\n    FastKey(BigInt(83)) => \
(lower ? Int32[64,262] : Int32[22,136], Int16[6,6]),\\n    \
FastKey(BigInt(84)) => (lower ? Int32[17,239] : Int32[17,107], \
Int16[4,4]),\\n    FastKey(BigInt(92)) => (lower ? \
Int32[22,33,55,65,96,115,244,263] : Int32[25,32,99,111,138,151,153,182], \
lower ? Int16[10,6,-6,10,6,-6,10,10] : Int16[10,10,-6,6,-6,10,6,10]),\\n    \
FastKey(BigInt(150)) => (lower ? Int32[33,55,96,115] : Int32[99,111,138,153], \
lower ? Int16[1,-1,1,-1] : Int16[-1,1,-1,1]),\\n    FastKey(BigInt(151)) => \
(lower ? Int32[22,65,244,263] : Int32[25,32,151,182], Int16[8,8,8,8]),\\n    \
FastKey(BigInt(152)) => (lower ? Int32[21,33,43,55,96,115,243,253] : \
Int32[24,27,99,111,138,150,153,165], lower ? Int16[-1,8,-1,-8,8,-8,-1,-1] : \
Int16[-1,-1,-8,8,-8,-1,8,-1]),\\n    FastKey(BigInt(158)) => (lower ? \
Int32[20,21,43,242,243,253] : Int32[23,24,27,149,150,165], \
Int16[8,2,2,8,2,2]),\\n    FastKey(BigInt(166)) => (lower ? \
Int32[45,66,255,264] : Int32[29,33,167,183], Int16[-24,-24,-24,-24]),\\n    \
FastKey(BigInt(171)) => (lower ? Int32[86,272] : Int32[26,152], \
Int16[-2,-2]),\\n    FastKey(BigInt(172)) => (lower ? Int32[86,272] : \
Int32[26,152], Int16[6,6]),\\n    FastKey(BigInt(175)) => (lower ? \
Int32[67,265] : Int32[34,184], Int16[6,6]),\\n    FastKey(BigInt(176)) => \
(lower ? Int32[20,242] : Int32[23,149], Int16[4,4]),\\n    \
FastKey(BigInt(205)) => (lower ? Int32[88,99,118,274] : \
Int32[35,141,156,185], lower ? Int16[10,6,-6,10] : Int16[10,-6,6,10]),\\n    \
FastKey(BigInt(272)) => (lower ? Int32[23,35,152,245] : \
Int32[38,101,188,200], lower ? Int16[-1,-3,3,-1] : Int16[-1,3,-3,-1]),\\n    \
FastKey(BigInt(273)) => (lower ? Int32[23,35,152,245] : \
Int32[38,101,188,200], lower ? Int16[-1,3,-3,-1] : Int16[-1,-3,3,-1]),\\n    \
FastKey(BigInt(275)) => (lower ? Int32[23,35,152,245] : \
Int32[38,101,188,200], lower ? Int16[-3,-1,1,-3] : Int16[-3,1,-1,-3]),\\n    \
FastKey(BigInt(276)) => (lower ? Int32[23,35,152,245] : \
Int32[38,101,188,200], lower ? Int16[3,-1,1,3] : Int16[3,1,-1,3]),\\n    \
FastKey(BigInt(396)) => (lower ? Int32[99,118] : Int32[141,156], lower ? \
Int16[1,-1] : Int16[-1,1]),\\n    FastKey(BigInt(397)) => (lower ? \
Int32[88,274] : Int32[35,185], Int16[8,8]),\\n    FastKey(BigInt(398)) => \
(lower ? Int32[87,99,118,273] : Int32[30,141,156,168], lower ? \
Int16[-1,8,-8,-1] : Int16[-1,-8,8,-1]),\\n    FastKey(BigInt(404)) => (lower \
? Int32[86,87,272,273] : Int32[26,30,152,168], Int16[8,2,8,2]),\\n    \
FastKey(BigInt(412)) => (lower ? Int32[108,282] : Int32[36,186], \
Int16[-24,-24]),\\n    FastKey(BigInt(421)) => (lower ? Int32[127,289] : \
Int32[37,187], Int16[6,6]),\\n    FastKey(BigInt(422)) => (lower ? \
Int32[86,272] : Int32[26,152], Int16[4,4]),\\n    FastKey(BigInt(456)) => \
(lower ? Int32[25,36,58,68,153,169,247,266] : \
Int32[40,53,102,114,189,202,207,239], lower ? Int16[5,3,-3,5,3,-3,5,5] : \
Int16[5,5,-3,3,-3,5,3,5]),\\n    FastKey(BigInt(457)) => (lower ? \
Int32[24,37,46,80,154,185,246,256] : Int32[39,45,103,128,190,201,219,227], \
lower ? Int16[-3,5,3,5,-5,-5,-3,3] : Int16[3,-3,-5,-5,5,3,-3,5]),\\n    \
FastKey(BigInt(639)) => (lower ? Int32[24,36,46,169,246,256] : \
Int32[39,45,102,201,207,219], lower ? Int16[4,1,-4,-1,4,-4] : \
Int16[-4,4,-1,-4,1,4]),\\n    FastKey(BigInt(640)) => (lower ? \
Int32[25,68,247,266] : Int32[40,53,202,239], Int16[4,4,4,4]),\\n    \
FastKey(BigInt(641)) => (lower ? Int32[24,46,58,153,246,256] : \
Int32[39,45,114,189,201,219], lower ? Int16[-4,4,-1,1,-4,4] : \
Int16[4,-4,1,-1,4,-4]),\\n    FastKey(BigInt(645)) => (lower ? \
Int32[36,46,58,153,169,256] : Int32[39,102,114,189,201,207], lower ? \
Int16[-4,1,4,-4,4,1] : Int16[1,4,-4,4,1,-4]),\\n    FastKey(BigInt(646)) => \
(lower ? Int32[37,80,154,185] : Int32[103,128,190,227], lower ? \
Int16[4,4,-4,-4] : Int16[-4,-4,4,4]),\\n    FastKey(BigInt(647)) => (lower ? \
Int32[24,36,58,153,169,246] : Int32[45,102,114,189,207,219], lower ? \
Int16[-1,4,-4,4,-4,-1] : Int16[-1,-4,4,-4,4,-1]),\\n    FastKey(BigInt(650)) \
=> (lower ? Int32[23,24,46,245,246,256] : Int32[38,39,45,200,201,219], \
Int16[4,1,1,4,1,1]),\\n    FastKey(BigInt(653)) => (lower ? \
Int32[35,36,58,152,153,169] : Int32[101,102,114,188,189,207], lower ? \
Int16[4,1,1,-4,-1,-1] : Int16[-4,-1,-1,4,1,1]),\\n    FastKey(BigInt(728)) => \
(lower ? Int32[60,81,171,186] : Int32[116,129,209,228], lower ? \
Int16[12,12,-12,-12] : Int16[-12,-12,12,12]),\\n    FastKey(BigInt(729)) => \
(lower ? Int32[60,81,171,186] : Int32[116,129,209,228], lower ? \
Int16[-12,-12,12,12] : Int16[12,12,-12,-12]),\\n    FastKey(BigInt(731)) => \
(lower ? Int32[48,69,258,267] : Int32[47,54,221,240], Int16[12,12,12,12]),\\n \
   FastKey(BigInt(732)) => (lower ? Int32[48,69,258,267] : \
Int32[47,54,221,240], Int16[-12,-12,-12,-12]),\\n    FastKey(BigInt(854)) => \
(lower ? Int32[89,101,155,275] : Int32[41,143,191,203], lower ? \
Int16[-1,-3,3,-1] : Int16[-1,3,-3,-1]),\\n    FastKey(BigInt(855)) => (lower \
? Int32[89,101,155,275] : Int32[41,143,191,203], lower ? Int16[-1,3,-3,-1] : \
Int16[-1,-3,3,-1]),\\n    FastKey(BigInt(857)) => (lower ? \
Int32[89,101,155,275] : Int32[41,143,191,203], lower ? Int16[-3,-1,1,-3] : \
Int16[-3,1,-1,-3]),\\n    FastKey(BigInt(858)) => (lower ? \
Int32[89,101,155,275] : Int32[41,143,191,203], lower ? Int16[3,-1,1,3] : \
Int16[3,1,-1,3]),\\n    FastKey(BigInt(863)) => (lower ? Int32[70,268] : \
Int32[55,241], Int16[3,3]),\\n    FastKey(BigInt(864)) => (lower ? \
Int32[82,187] : Int32[130,229], lower ? Int16[3,-3] : Int16[-3,3]),\\n    \
FastKey(BigInt(898)) => (lower ? Int32[23,245] : Int32[38,200], \
Int16[2,2]),\\n    FastKey(BigInt(899)) => (lower ? Int32[35,152] : \
Int32[101,188], lower ? Int16[2,-2] : Int16[-2,2]),\\n    \
FastKey(BigInt(1164)) => (lower ? Int32[91,102,121,128,156,172,277,290] : \
Int32[43,56,144,159,192,205,210,242], lower ? Int16[5,3,-3,5,3,-3,5,5] : \
Int16[5,5,-3,3,-3,5,3,5]),\\n    FastKey(BigInt(1165)) => (lower ? \
Int32[90,103,109,140,157,188,276,283] : Int32[42,48,145,176,193,204,222,230], \
lower ? Int16[-3,5,3,5,-5,-5,-3,3] : Int16[3,-3,-5,-5,5,3,-3,5]),\\n    \
FastKey(BigInt(1742)) => (lower ? Int32[26,38,200,248] : \
Int32[62,104,248,260], lower ? Int16[-1,-3,3,-1] : Int16[-1,3,-3,-1]),\\n    \
FastKey(BigInt(1743)) => (lower ? Int32[26,38,200,248] : \
Int32[62,104,248,260], lower ? Int16[-1,3,-3,-1] : Int16[-1,-3,3,-1]),\\n    \
FastKey(BigInt(1744)) => (lower ? Int32[26,38,200,248] : \
Int32[62,104,248,260], lower ? Int16[-3,-1,1,-3] : Int16[-3,1,-1,-3]),\\n    \
FastKey(BigInt(1745)) => (lower ? Int32[26,38,200,248] : \
Int32[62,104,248,260], lower ? Int16[3,-1,1,3] : Int16[3,1,-1,3]),\\n    \
FastKey(BigInt(1893)) => (lower ? Int32[90,102,109,172,276,283] : \
Int32[42,48,144,204,210,222], lower ? Int16[4,1,-4,-1,4,-4] : \
Int16[-4,4,-1,-4,1,4]),\\n    FastKey(BigInt(1894)) => (lower ? \
Int32[91,128,277,290] : Int32[43,56,205,242], Int16[4,4,4,4]),\\n    \
FastKey(BigInt(1895)) => (lower ? Int32[90,109,121,156,276,283] : \
Int32[42,48,159,192,204,222], lower ? Int16[-4,4,-1,1,-4,4] : \
Int16[4,-4,1,-1,4,-4]),\\n    FastKey(BigInt(1899)) => (lower ? \
Int32[102,109,121,156,172,283] : Int32[42,144,159,192,204,210], lower ? \
Int16[-4,1,4,-4,4,1] : Int16[1,4,-4,4,1,-4]),\\n    FastKey(BigInt(1900)) => \
(lower ? Int32[103,140,157,188] : Int32[145,176,193,230], lower ? \
Int16[4,4,-4,-4] : Int16[-4,-4,4,4]),\\n    FastKey(BigInt(1901)) => (lower ? \
Int32[90,102,121,156,172,276] : Int32[48,144,159,192,210,222], lower ? \
Int16[-1,4,-4,4,-4,-1] : Int16[-1,-4,4,-4,4,-1]),\\n    FastKey(BigInt(1904)) \
=> (lower ? Int32[89,90,109,275,276,283] : Int32[41,42,48,203,204,222], \
Int16[4,1,1,4,1,1]),\\n    FastKey(BigInt(1907)) => (lower ? \
Int32[101,102,121,155,156,172] : Int32[143,144,159,191,192,210], lower ? \
Int16[4,1,1,-4,-1,-1] : Int16[-4,-1,-1,4,1,1]),\\n    FastKey(BigInt(1982)) \
=> (lower ? Int32[123,141,174,189] : Int32[161,177,212,231], lower ? \
Int16[12,12,-12,-12] : Int16[-12,-12,12,12]),\\n    FastKey(BigInt(1983)) => \
(lower ? Int32[123,141,174,189] : Int32[161,177,212,231], lower ? \
Int16[-12,-12,12,12] : Int16[12,12,-12,-12]),\\n    FastKey(BigInt(1985)) => \
(lower ? Int32[111,129,285,291] : Int32[50,57,224,243], \
Int16[12,12,12,12]),\\n    FastKey(BigInt(1986)) => (lower ? \
Int32[111,129,285,291] : Int32[50,57,224,243], Int16[-12,-12,-12,-12]),\\n    \
FastKey(BigInt(2117)) => (lower ? Int32[130,292] : Int32[58,244], \
Int16[3,3]),\\n    FastKey(BigInt(2118)) => (lower ? Int32[142,190] : \
Int32[178,232], lower ? Int16[3,-3] : Int16[-3,3]),\\n    \
FastKey(BigInt(2152)) => (lower ? Int32[89,275] : Int32[41,203], Int16[2,2]),\
\\n    FastKey(BigInt(2153)) => (lower ? Int32[101,155] : Int32[143,191], \
lower ? Int16[2,-2] : Int16[-2,2]),\\n    FastKey(BigInt(2491)) => (lower ? \
Int32[28,39,61,71,201,214,250,269] : Int32[64,83,105,117,249,262,270,305], \
lower ? Int16[5,3,-3,5,3,-3,5,5] : Int16[5,5,-3,3,-3,5,3,5]),\\n    \
FastKey(BigInt(2493)) => (lower ? Int32[27,40,49,83,202,227,249,259] : \
Int32[63,72,106,131,250,261,282,293], lower ? Int16[-3,5,3,5,-5,-5,-3,3] : \
Int16[3,-3,-5,-5,5,3,-3,5]),\\n    FastKey(BigInt(3360)) => (lower ? \
Int32[146,296] : Int32[44,206], Int16[-2,-2]),\\n    FastKey(BigInt(3361)) => \
(lower ? Int32[146,296] : Int32[44,206], Int16[6,6]),\\n    \
FastKey(BigInt(3718)) => (lower ? Int32[27,39,49,214,249,259] : \
Int32[63,72,105,261,270,282], lower ? Int16[4,1,-4,-1,4,-4] : \
Int16[-4,4,-1,-4,1,4]),\\n    FastKey(BigInt(3719)) => (lower ? \
Int32[28,71,250,269] : Int32[64,83,262,305], Int16[4,4,4,4]),\\n    \
FastKey(BigInt(3720)) => (lower ? Int32[27,49,61,201,249,259] : \
Int32[63,72,117,249,261,282], lower ? Int16[-8,8,-2,2,-8,8] : \
Int16[8,-8,2,-2,8,-8]),\\n    FastKey(BigInt(3721)) => (lower ? \
Int32[40,83,202,227] : Int32[106,131,250,293], lower ? Int16[4,4,-4,-4] : \
Int16[-4,-4,4,4]),\\n    FastKey(BigInt(3722)) => (lower ? \
Int32[27,39,61,201,214,249] : Int32[72,105,117,249,270,282], lower ? \
Int16[-1,4,-4,4,-4,-1] : Int16[-1,-4,4,-4,4,-1]),\\n    FastKey(BigInt(3737)) \
=> (lower ? Int32[26,27,49,248,249,259] : Int32[62,63,72,260,261,282], \
Int16[4,1,1,4,1,1]),\\n    FastKey(BigInt(3739)) => (lower ? \
Int32[38,39,61,200,201,214] : Int32[104,105,117,248,249,270], lower ? \
Int16[4,1,1,-4,-1,-1] : Int16[-4,-1,-1,4,1,1]),\\n    FastKey(BigInt(3788)) \
=> (lower ? Int32[63,84,216,228] : Int32[119,132,272,294], lower ? \
Int16[12,12,-12,-12] : Int16[-12,-12,12,12]),\\n    FastKey(BigInt(3789)) => \
(lower ? Int32[63,84,216,228] : Int32[119,132,272,294], lower ? \
Int16[-12,-12,12,12] : Int16[12,12,-12,-12]),\\n    FastKey(BigInt(3790)) => \
(lower ? Int32[51,72,261,270] : Int32[74,84,284,306], Int16[12,12,12,12]),\\n \
   FastKey(BigInt(3791)) => (lower ? Int32[51,72,261,270] : \
Int32[74,84,284,306], Int16[-12,-12,-12,-12]),\\n    FastKey(BigInt(4250)) => \
(lower ? Int32[92,104,203,278] : Int32[65,146,251,263], lower ? \
Int16[-1,-3,3,-1] : Int16[-1,3,-3,-1]),\\n    FastKey(BigInt(4251)) => (lower \
? Int32[92,104,203,278] : Int32[65,146,251,263], lower ? Int16[-1,3,-3,-1] : \
Int16[-1,-3,3,-1]),\\n    FastKey(BigInt(4252)) => (lower ? \
Int32[92,104,203,278] : Int32[65,146,251,263], lower ? Int16[-3,-1,1,-3] : \
Int16[-3,1,-1,-3]),\\n    FastKey(BigInt(4253)) => (lower ? \
Int32[92,104,203,278] : Int32[65,146,251,263], lower ? Int16[3,-1,1,3] : \
Int16[3,1,-1,3]),\\n    FastKey(BigInt(4270)) => (lower ? Int32[73,271] : \
Int32[85,307], Int16[3,3]),\\n    FastKey(BigInt(4272)) => (lower ? \
Int32[85,229] : Int32[133,295], lower ? Int16[3,-3] : Int16[-3,3]),\\n    \
FastKey(BigInt(4285)) => (lower ? Int32[26,248] : Int32[62,260], Int16[2,2]),\
\\n    FastKey(BigInt(4287)) => (lower ? Int32[38,200] : Int32[104,248], \
lower ? Int16[2,-2] : Int16[-2,2]),\\n    FastKey(BigInt(4971)) => (lower ? \
Int32[148,159,175,298] : Int32[59,195,213,245], lower ? Int16[10,6,-6,10] : \
Int16[10,-6,6,10]),\\n    FastKey(BigInt(5461)) => (lower ? \
Int32[94,105,124,131,204,217,280,293] : Int32[67,86,147,162,252,265,273,308], \
lower ? Int16[5,3,-3,5,3,-3,5,5] : Int16[5,5,-3,3,-3,5,3,5]),\\n    \
FastKey(BigInt(5463)) => (lower ? Int32[93,106,112,143,205,230,279,286] : \
Int32[66,75,148,179,253,264,285,296], lower ? Int16[-3,5,3,5,-5,-5,-3,3] : \
Int16[3,-3,-5,-5,5,3,-3,5]),\\n    FastKey(BigInt(6928)) => (lower ? \
Int32[159,175] : Int32[195,213], lower ? Int16[1,-1] : Int16[-1,1]),\\n    \
FastKey(BigInt(6929)) => (lower ? Int32[148,298] : Int32[59,245], \
Int16[8,8]),\\n    FastKey(BigInt(6930)) => (lower ? Int32[147,159,175,297] : \
Int32[51,195,213,225], lower ? Int16[-1,8,-8,-1] : Int16[-1,-8,8,-1]),\\n    \
FastKey(BigInt(6939)) => (lower ? Int32[146,147,296,297] : \
Int32[44,51,206,225], Int16[8,2,8,2]),\\n    FastKey(BigInt(7288)) => (lower \
? Int32[165,303] : Int32[60,246], Int16[-24,-24]),\\n    \
FastKey(BigInt(8094)) => (lower ? Int32[181,307] : Int32[61,247], \
Int16[6,6]),\\n    FastKey(BigInt(8304)) => (lower ? Int32[146,296] : \
Int32[44,206], Int16[4,4]),\\n    FastKey(BigInt(8437)) => (lower ? \
Int32[93,105,112,217,279,286] : Int32[66,75,147,264,273,285], lower ? \
Int16[4,1,-4,-1,4,-4] : Int16[-4,4,-1,-4,1,4]),\\n    FastKey(BigInt(8438)) \
=> (lower ? Int32[94,131,280,293] : Int32[67,86,265,308], Int16[4,4,4,4]),\\n \
   FastKey(BigInt(8439)) => (lower ? Int32[93,112,124,204,279,286] : \
Int32[66,75,162,252,264,285], lower ? Int16[-8,8,-2,2,-8,8] : \
Int16[8,-8,2,-2,8,-8]),\\n    FastKey(BigInt(8440)) => (lower ? \
Int32[106,143,205,230] : Int32[148,179,253,296], lower ? Int16[4,4,-4,-4] : \
Int16[-4,-4,4,4]),\\n    FastKey(BigInt(8441)) => (lower ? \
Int32[93,105,124,204,217,279] : Int32[75,147,162,252,273,285], lower ? \
Int16[-1,4,-4,4,-4,-1] : Int16[-1,-4,4,-4,4,-1]),\\n    FastKey(BigInt(8456)) \
=> (lower ? Int32[92,93,112,278,279,286] : Int32[65,66,75,263,264,285], \
Int16[4,1,1,4,1,1]),\\n    FastKey(BigInt(8458)) => (lower ? \
Int32[104,105,124,203,204,217] : Int32[146,147,162,251,252,273], lower ? \
Int16[4,1,1,-4,-1,-1] : Int16[-4,-1,-1,4,1,1]),\\n    FastKey(BigInt(8507)) \
=> (lower ? Int32[126,144,219,231] : Int32[164,180,275,297], lower ? \
Int16[12,12,-12,-12] : Int16[-12,-12,12,12]),\\n    FastKey(BigInt(8508)) => \
(lower ? Int32[126,144,219,231] : Int32[164,180,275,297], lower ? \
Int16[-12,-12,12,12] : Int16[12,12,-12,-12]),\\n    FastKey(BigInt(8509)) => \
(lower ? Int32[114,132,288,294] : Int32[77,87,287,309], \
Int16[12,12,12,12]),\\n    FastKey(BigInt(8510)) => (lower ? \
Int32[114,132,288,294] : Int32[77,87,287,309], Int16[-12,-12,-12,-12]),\\n    \
FastKey(BigInt(8989)) => (lower ? Int32[133,295] : Int32[88,310], \
Int16[3,3]),\\n    FastKey(BigInt(8991)) => (lower ? Int32[145,232] : \
Int32[181,298], lower ? Int16[3,-3] : Int16[-3,3]),\\n    \
FastKey(BigInt(9004)) => (lower ? Int32[92,278] : Int32[65,263], Int16[2,2]),\
\\n    FastKey(BigInt(9006)) => (lower ? Int32[104,203] : Int32[146,251], \
lower ? Int16[2,-2] : Int16[-2,2]),\\n    FastKey(BigInt(14606)) => (lower ? \
Int32[149,161,206,299] : Int32[68,197,254,266], lower ? Int16[-1,3,-3,-1] : \
Int16[-1,-3,3,-1]),\\n    FastKey(BigInt(14607)) => (lower ? \
Int32[149,161,206,299] : Int32[68,197,254,266], lower ? Int16[-1,-3,3,-1] : \
Int16[-1,3,-3,-1]),\\n    FastKey(BigInt(14614)) => (lower ? \
Int32[149,161,206,299] : Int32[68,197,254,266], lower ? Int16[-3,1,-1,-3] : \
Int16[-3,-1,1,-3]),\\n    FastKey(BigInt(14615)) => (lower ? \
Int32[149,161,206,299] : Int32[68,197,254,266], lower ? Int16[3,1,-1,3] : \
Int16[3,-1,1,3]),\\n    FastKey(BigInt(19056)) => (lower ? \
Int32[151,162,178,182,207,220,301,308] : \
Int32[70,89,198,216,255,268,276,311], lower ? Int16[5,3,-3,5,3,-3,5,5] : \
Int16[5,5,-3,3,-3,5,3,5]),\\n    FastKey(BigInt(19060)) => (lower ? \
Int32[150,163,166,194,208,233,300,304] : \
Int32[69,78,199,236,256,267,288,299], lower ? Int16[3,-5,-3,-5,5,5,3,-3] : \
Int16[-3,3,5,5,-5,-3,3,-5]),\\n    FastKey(BigInt(26782)) => (lower ? \
Int32[150,166,178,207,300,304] : Int32[69,78,216,255,267,288], lower ? \
Int16[-4,4,-1,1,-4,4] : Int16[4,-4,1,-1,4,-4]),\\n    FastKey(BigInt(26783)) \
=> (lower ? Int32[151,182,301,308] : Int32[70,89,268,311], \
Int16[4,4,4,4]),\\n    FastKey(BigInt(26784)) => (lower ? \
Int32[150,162,166,220,300,304] : Int32[69,78,198,267,276,288], lower ? \
Int16[4,1,-4,-1,4,-4] : Int16[-4,4,-1,-4,1,4]),\\n    FastKey(BigInt(26795)) \
=> (lower ? Int32[150,162,178,207,220,300] : Int32[78,198,216,255,276,288], \
lower ? Int16[1,-4,4,-4,4,1] : Int16[1,4,-4,4,-4,1]),\\n    \
FastKey(BigInt(26796)) => (lower ? Int32[163,194,208,233] : \
Int32[199,236,256,299], lower ? Int16[-4,-4,4,4] : Int16[4,4,-4,-4]),\\n    \
FastKey(BigInt(26797)) => (lower ? Int32[162,166,178,207,220,304] : \
Int32[69,198,216,255,267,276], lower ? Int16[4,-1,-4,4,-4,-1] : \
Int16[-1,-4,4,-4,-1,4]),\\n    FastKey(BigInt(26806)) => (lower ? \
Int32[149,150,166,299,300,304] : Int32[68,69,78,266,267,288], \
Int16[4,1,1,4,1,1]),\\n    FastKey(BigInt(26814)) => (lower ? \
Int32[161,162,178,206,207,220] : Int32[197,198,216,254,255,276], lower ? \
Int16[-4,-1,-1,4,1,1] : Int16[4,1,1,-4,-1,-1]),\\n    FastKey(BigInt(27047)) \
=> (lower ? Int32[180,195,222,234] : Int32[218,237,278,300], lower ? \
Int16[-12,-12,12,12] : Int16[12,12,-12,-12]),\\n    FastKey(BigInt(27048)) => \
(lower ? Int32[180,195,222,234] : Int32[218,237,278,300], lower ? \
Int16[12,12,-12,-12] : Int16[-12,-12,12,12]),\\n    FastKey(BigInt(27055)) => \
(lower ? Int32[168,183,306,309] : Int32[80,90,290,312], \
Int16[12,12,12,12]),\\n    FastKey(BigInt(27056)) => (lower ? \
Int32[168,183,306,309] : Int32[80,90,290,312], Int16[-12,-12,-12,-12]),\\n    \
FastKey(BigInt(29083)) => (lower ? Int32[184,310] : Int32[91,313], \
Int16[3,3]),\\n    FastKey(BigInt(29087)) => (lower ? Int32[196,235] : \
Int32[238,301], lower ? Int16[-3,3] : Int16[3,-3]),\\n    \
FastKey(BigInt(29209)) => (lower ? Int32[149,299] : Int32[68,266], \
Int16[2,2]),\\n    FastKey(BigInt(29213)) => (lower ? Int32[161,206] : \
Int32[197,254], lower ? Int16[-2,2] : Int16[2,-2]),\\n    \
FastKey(BigInt(47925)) => (lower ? Int32[197,311] : Int32[71,269], \
Int16[-2,-2]),\\n    FastKey(BigInt(47926)) => (lower ? Int32[197,311] : \
Int32[71,269], Int16[6,6]),\\n    FastKey(BigInt(59062)) => (lower ? \
Int32[199,210,223,313] : Int32[92,258,279,314], lower ? Int16[10,6,-6,10] : \
Int16[10,-6,6,10]),\\n    FastKey(BigInt(81359)) => (lower ? Int32[210,223] : \
Int32[258,279], lower ? Int16[1,-1] : Int16[-1,1]),\\n    \
FastKey(BigInt(81360)) => (lower ? Int32[199,313] : Int32[92,314], \
Int16[8,8]),\\n    FastKey(BigInt(81361)) => (lower ? Int32[198,210,223,312] \
: Int32[81,258,279,291], lower ? Int16[-1,8,-8,-1] : Int16[-1,-8,8,-1]),\\n   \
 FastKey(BigInt(81393)) => (lower ? Int32[197,198,311,312] : \
Int32[71,81,269,291], Int16[8,2,8,2]),\\n    FastKey(BigInt(81570)) => (lower \
? Int32[213,315] : Int32[93,315], Int16[-24,-24]),\\n    \
FastKey(BigInt(85993)) => (lower ? Int32[226,316] : Int32[94,316], \
Int16[6,6]),\\n    FastKey(BigInt(86063)) => (lower ? Int32[197,311] : \
Int32[71,269], Int16[4,4]),\\n)\"\>"], "Output",
 CellLabel->"Out[81]=",ExpressionUUID->"ec147eff-1b18-084c-914a-a107e6e25ffd"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Index juggling", "Subsubsection",ExpressionUUID->"3cf34e75-6466-1743-85f3-31731d3bda64"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LowerTriangularize", "@", 
   RowBox[{"toFull", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"17", ",", 
       RowBox[{"16", "+", 
        RowBox[{"24", "*", 
         RowBox[{"25", "/", "2"}]}]}]}], "]"}], ",", "\"\<LC\>\""}], "]"}]}], 
  "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[436]:=",ExpressionUUID->"73b68598-b470-44ef-8db1-7689bf73713e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"17", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"18", "41", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"19", "42", "64", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"20", "43", "65", "86", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"21", "44", "66", "87", "107", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"22", "45", "67", "88", "108", "127", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"23", "46", "68", "89", "109", "128", "146", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"24", "47", "69", "90", "110", "129", "147", "164", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"25", "48", "70", "91", "111", "130", "148", "165", "181", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"26", "49", "71", "92", "112", "131", "149", "166", "182", "197", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"27", "50", "72", "93", "113", "132", "150", "167", "183", "198", "212",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"28", "51", "73", "94", "114", "133", "151", "168", "184", "199", "213",
       "226", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"29", "52", "74", "95", "115", "134", "152", "169", "185", "200", "214",
       "227", "239", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"30", "53", "75", "96", "116", "135", "153", "170", "186", "201", "215",
       "228", "240", "251", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"31", "54", "76", "97", "117", "136", "154", "171", "187", "202", "216",
       "229", "241", "252", "262", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"32", "55", "77", "98", "118", "137", "155", "172", "188", "203", "217",
       "230", "242", "253", "263", "272", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"33", "56", "78", "99", "119", "138", "156", "173", "189", "204", "218",
       "231", "243", "254", "264", "273", "281", "0", "0", "0", "0", "0", "0",
       "0"},
     {"34", "57", "79", "100", "120", "139", "157", "174", "190", "205", 
      "219", "232", "244", "255", "265", "274", "282", "289", "0", "0", "0", 
      "0", "0", "0"},
     {"35", "58", "80", "101", "121", "140", "158", "175", "191", "206", 
      "220", "233", "245", "256", "266", "275", "283", "290", "296", "0", "0",
       "0", "0", "0"},
     {"36", "59", "81", "102", "122", "141", "159", "176", "192", "207", 
      "221", "234", "246", "257", "267", "276", "284", "291", "297", "302", 
      "0", "0", "0", "0"},
     {"37", "60", "82", "103", "123", "142", "160", "177", "193", "208", 
      "222", "235", "247", "258", "268", "277", "285", "292", "298", "303", 
      "307", "0", "0", "0"},
     {"38", "61", "83", "104", "124", "143", "161", "178", "194", "209", 
      "223", "236", "248", "259", "269", "278", "286", "293", "299", "304", 
      "308", "311", "0", "0"},
     {"39", "62", "84", "105", "125", "144", "162", "179", "195", "210", 
      "224", "237", "249", "260", "270", "279", "287", "294", "300", "305", 
      "309", "312", "314", "0"},
     {"40", "63", "85", "106", "126", "145", "163", "180", "196", "211", 
      "225", "238", "250", "261", "271", "280", "288", "295", "301", "306", 
      "310", "313", "315", "316"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[436]//MatrixForm=",ExpressionUUID->"014b69ca-c025-4655-b9ee-\
3e239ce49bd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"12", ",", "12"}], "}"}]}], "]"}], "&"}], ",", 
      RowBox[{"Partition", "[", 
       RowBox[{"%", ",", 
        RowBox[{"{", 
         RowBox[{"12", ",", "12"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], ",", 
      RowBox[{"{", "5", "}"}], ",", 
      RowBox[{"{", "6", "}"}]}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->
  "In[437]:=",ExpressionUUID->"70c1c8e2-fd99-4a1d-831e-31c606955de1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"17", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
         {"18", "41", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
         {"19", "42", "64", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
         {"20", "43", "65", "86", "0", "0", "0", "0", "0", "0", "0", "0"},
         {"21", "44", "66", "87", "107", "0", "0", "0", "0", "0", "0", "0"},
         {"22", "45", "67", "88", "108", "127", "0", "0", "0", "0", "0", 
          "0"},
         {"23", "46", "68", "89", "109", "128", "146", "0", "0", "0", "0", 
          "0"},
         {"24", "47", "69", "90", "110", "129", "147", "164", "0", "0", "0", 
          "0"},
         {"25", "48", "70", "91", "111", "130", "148", "165", "181", "0", "0",
           "0"},
         {"26", "49", "71", "92", "112", "131", "149", "166", "182", "197", 
          "0", "0"},
         {"27", "50", "72", "93", "113", "132", "150", "167", "183", "198", 
          "212", "0"},
         {"28", "51", "73", "94", "114", "133", "151", "168", "184", "199", 
          "213", "226"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
         {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
         {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
         {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
         {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
         {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
         {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
         {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
         {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
         {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
         {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
         {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"29", "52", "74", "95", "115", "134", "152", "169", "185", "200", 
          "214", "227"},
         {"30", "53", "75", "96", "116", "135", "153", "170", "186", "201", 
          "215", "228"},
         {"31", "54", "76", "97", "117", "136", "154", "171", "187", "202", 
          "216", "229"},
         {"32", "55", "77", "98", "118", "137", "155", "172", "188", "203", 
          "217", "230"},
         {"33", "56", "78", "99", "119", "138", "156", "173", "189", "204", 
          "218", "231"},
         {"34", "57", "79", "100", "120", "139", "157", "174", "190", "205", 
          "219", "232"},
         {"35", "58", "80", "101", "121", "140", "158", "175", "191", "206", 
          "220", "233"},
         {"36", "59", "81", "102", "122", "141", "159", "176", "192", "207", 
          "221", "234"},
         {"37", "60", "82", "103", "123", "142", "160", "177", "193", "208", 
          "222", "235"},
         {"38", "61", "83", "104", "124", "143", "161", "178", "194", "209", 
          "223", "236"},
         {"39", "62", "84", "105", "125", "144", "162", "179", "195", "210", 
          "224", "237"},
         {"40", "63", "85", "106", "126", "145", "163", "180", "196", "211", 
          "225", "238"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"239", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
         {"240", "251", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
         {"241", "252", "262", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
         {"242", "253", "263", "272", "0", "0", "0", "0", "0", "0", "0", 
          "0"},
         {"243", "254", "264", "273", "281", "0", "0", "0", "0", "0", "0", 
          "0"},
         {"244", "255", "265", "274", "282", "289", "0", "0", "0", "0", "0", 
          "0"},
         {"245", "256", "266", "275", "283", "290", "296", "0", "0", "0", "0",
           "0"},
         {"246", "257", "267", "276", "284", "291", "297", "302", "0", "0", 
          "0", "0"},
         {"247", "258", "268", "277", "285", "292", "298", "303", "307", "0", 
          "0", "0"},
         {"248", "259", "269", "278", "286", "293", "299", "304", "308", 
          "311", "0", "0"},
         {"249", "260", "270", "279", "287", "294", "300", "305", "309", 
          "312", "314", "0"},
         {"250", "261", "271", "280", "288", "295", "301", "306", "310", 
          "313", "315", "316"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[437]//MatrixForm=",ExpressionUUID->"4abe0f89-944b-4a4f-9627-\
48e59781df06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], 
      RowBox[{"col", "-", "1"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "dim"}], "-", "j", "+", "1"}], ")"}]}], "+", "offset"}], "/.", 
   RowBox[{"col", "\[Rule]", 
    RowBox[{"dim", "+", "1"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[458]:=",ExpressionUUID->"410c3838-8fdb-479a-9f75-62beeb9395aa"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"dim", "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["dim", "2"]}], "+", 
    RowBox[{"2", " ", "offset"}]}], ")"}]}]], "Output",
 CellLabel->
  "Out[458]=",ExpressionUUID->"6373520c-c5ed-4076-953a-3fb68a8d2b69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rcToI", "[", 
   RowBox[{
    RowBox[{"2", "dim"}], ",", 
    RowBox[{"col", "+", "dim", "+", "offset", "-", "1"}], ",", 
    RowBox[{"row", "+", "offset", "-", "1"}], ",", "offset", ",", 
    "\"\<LC\>\""}], "]"}], "//", "FullSimplify"}]], "Input",
 CellLabel->
  "In[478]:=",ExpressionUUID->"89812359-a56c-4932-8487-c674fa8fa127"],

Cell[BoxData[
 RowBox[{"col", "+", "dim", "+", "offset", "-", "row", "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "row"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "-", 
     RowBox[{"4", " ", "dim"}], "+", "row"}], ")"}]}]}]], "Output",
 CellLabel->
  "Out[478]=",ExpressionUUID->"236ef5fa-984c-47c1-8ac6-18b6c37e534a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"dim", "=", "12"}], ",", 
     RowBox[{"offset", "=", "17"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"LowerTriangularize", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"rcToI", "[", 
         RowBox[{
          RowBox[{"2", "dim"}], ",", 
          RowBox[{"col", "+", "dim", "+", "offset", "-", "1"}], ",", 
          RowBox[{"row", "+", "offset", "-", "1"}], ",", "offset", ",", 
          "\"\<LC\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"row", ",", "dim"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"col", ",", "dim"}], "}"}]}], "]"}]}]}], "//", 
    "MatrixForm"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[475]:=",ExpressionUUID->"e9af9045-0ad9-430d-8ffa-e2948dae5de3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"29", "52", "74", "95", "115", "134", "152", "169", "185", "200", "214",
       "227"},
     {"0", "53", "75", "96", "116", "135", "153", "170", "186", "201", "215", 
      "228"},
     {"0", "0", "76", "97", "117", "136", "154", "171", "187", "202", "216", 
      "229"},
     {"0", "0", "0", "98", "118", "137", "155", "172", "188", "203", "217", 
      "230"},
     {"0", "0", "0", "0", "119", "138", "156", "173", "189", "204", "218", 
      "231"},
     {"0", "0", "0", "0", "0", "139", "157", "174", "190", "205", "219", 
      "232"},
     {"0", "0", "0", "0", "0", "0", "158", "175", "191", "206", "220", 
      "233"},
     {"0", "0", "0", "0", "0", "0", "0", "176", "192", "207", "221", "234"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "193", "208", "222", "235"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "209", "223", "236"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "224", "237"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "238"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[475]//MatrixForm=",ExpressionUUID->"5b8b850a-8ee6-480a-8d2f-\
e19446229ede"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%458", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"dim", "\[Rule]", "12"}], ",", 
    RowBox[{"offset", "\[Rule]", "17"}]}], "}"}]}]], "Input",
 CellLabel->
  "In[459]:=",ExpressionUUID->"c951dac2-11a2-42d8-b170-c8eae30dff6c"],

Cell[BoxData["239"], "Output",
 CellLabel->
  "Out[459]=",ExpressionUUID->"1584afee-5bc7-49f4-93d7-5e87bb4760ce"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code generation: equality constraints", "Section",ExpressionUUID->"61c6bc7b-6b8c-164a-b4c6-341e881f5157"],

Cell[CellGroupData[{

Cell["Derivation", "Subsection",ExpressionUUID->"d0a21168-ba17-3840-a3ab-a703408de620"],

Cell["\<\
We generally split each constraint into its real and imaginary part. All \
prefactors are then real-valued polynomials (in total, although they might \
involve complex-valued coefficients if complex variables are present).\
\>", "Text",ExpressionUUID->"47a74c9a-c081-8f47-b0d2-25376e11873b"],

Cell[CellGroupData[{

Cell["Real-valued basis and polynomial", "Subsubsection",ExpressionUUID->"7fcde382-0a4d-494b-a16a-43b328cf04f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"basis", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SubscriptBox["x", "1"], ",", 
        SubsuperscriptBox["x", "2", "2"]}], "}"}]}], ",", 
     RowBox[{"constraint", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"6", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "-", 
           RowBox[{"4", "I"}]}], ")"}], 
         SubscriptBox["z", "1"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "+", 
           RowBox[{"4", "I"}]}], ")"}], 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}]}], ")"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lb", "=", 
       RowBox[{"Length", "@", "basis"}]}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"k", "=", "0"}], "}"}], ",", 
         RowBox[{
          SubsuperscriptBox["\[Sum]", 
           RowBox[{"j", "=", "1"}], "lb"], 
          RowBox[{
           SubsuperscriptBox["\[Sum]", 
            RowBox[{"i", "=", "1"}], "lb"], 
           TagBox[GridBox[{
              {"\[Piecewise]", GridBox[{
                 {"0", 
                  RowBox[{
                   RowBox[{"isreal", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}], "&&", 
                   RowBox[{"i", "<", "j"}]}]},
                 {
                  RowBox[{
                   SubscriptBox["p", 
                    RowBox[{"k", "++"}]], 
                   RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], 
                   RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}]}], 
                  RowBox[{"isreal", "[", 
                   RowBox[{
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}]},
                 {
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["p", 
                    RowBox[{"k", "++"}]], "+", 
                    RowBox[{"I", " ", 
                    SubscriptBox["p", 
                    RowBox[{"k", "++"}]]}]}], ")"}], 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["p", 
                    RowBox[{"k", "-", "2"}]], "-", 
                    RowBox[{"I", " ", 
                    SubscriptBox["p", 
                    RowBox[{"k", "-", "1"}]]}]}], ")"}], 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], 
                  RowBox[{"iscanonical", "[", 
                   RowBox[{
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}]},
                 {"0", "True"}
                },
                AllowedDimensions->{2, Automatic},
                Editable->True,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                Selectable->True]}
             },
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.35]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}}],
            "Piecewise",
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True,
            Selectable->False,
            StripWrapperBoxes->True]}]}]}], "]"}], ")"}], "constraint"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[82]:=",ExpressionUUID->"6c1cbd34-893d-3343-91ea-0f07008df817"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    SubscriptBox["p", "0"], "+", 
    RowBox[{
     SubscriptBox["p", "1"], " ", 
     SubscriptBox["x", "1"]}], "+", 
    RowBox[{
     SubscriptBox["p", "3"], " ", 
     SubsuperscriptBox["x", "1", "2"]}], "+", 
    RowBox[{
     SubscriptBox["p", "2"], " ", 
     SubsuperscriptBox["x", "2", "2"]}], "+", 
    RowBox[{
     SubscriptBox["p", "4"], " ", 
     SubscriptBox["x", "1"], " ", 
     SubsuperscriptBox["x", "2", "2"]}], "+", 
    RowBox[{
     SubscriptBox["p", "5"], " ", 
     SubsuperscriptBox["x", "2", "4"]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"6", " ", 
     SubscriptBox["x", "1"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"8", "-", 
       RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SubscriptBox["z", "1"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"8", "+", 
       RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}]}], ")"}]}]], "Output",
 CellLabel->"Out[82]=",ExpressionUUID->"53ff8740-d985-c246-aaf1-9ee627fd1459"]
}, Open  ]],

Cell["Regroup in terms of the monomials.", "Text",ExpressionUUID->"4a733540-ea41-a848-ad83-2ed053a199c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KeyMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", 
     RowBox[{"(", 
      SuperscriptBox["allvars", "#"], ")"}]}], "&"}], ",", 
   RowBox[{"Association", "@", 
    RowBox[{"CoefficientRules", "[", 
     RowBox[{"%", ",", "allvars"}], "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[83]:=",ExpressionUUID->"a3d2def2-4790-0f49-86db-17dd83421a51"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["x", "1", "3"], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "3"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "1", "2"], " ", 
     SubsuperscriptBox["x", "2", "2"]}], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "4"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "1", "2"], " ", 
     SubscriptBox["z", "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"8", "-", 
       RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SubscriptBox["p", "3"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "1", "2"], " ", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"8", "+", 
       RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SubscriptBox["p", "3"]}]}], ",", 
   RowBox[{
    SubsuperscriptBox["x", "1", "2"], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "1"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], " ", 
     SubsuperscriptBox["x", "2", "4"]}], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "5"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], " ", 
     SubsuperscriptBox["x", "2", "2"], " ", 
     SubscriptBox["z", "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"8", "-", 
       RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SubscriptBox["p", "4"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], " ", 
     SubsuperscriptBox["x", "2", "2"], " ", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"8", "+", 
       RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SubscriptBox["p", "4"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], " ", 
     SubsuperscriptBox["x", "2", "2"]}], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], " ", 
     SubscriptBox["z", "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"8", "-", 
       RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SubscriptBox["p", "1"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], " ", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"8", "+", 
       RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SubscriptBox["p", "1"]}]}], ",", 
   RowBox[{
    SubscriptBox["x", "1"], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "0"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "2", "4"], " ", 
     SubscriptBox["z", "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"8", "-", 
       RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SubscriptBox["p", "5"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "2", "4"], " ", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"8", "+", 
       RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SubscriptBox["p", "5"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "2", "2"], " ", 
     SubscriptBox["z", "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"8", "-", 
       RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SubscriptBox["p", "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "2", "2"], " ", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"8", "+", 
       RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SubscriptBox["p", "2"]}]}], ",", 
   RowBox[{
    SubscriptBox["z", "1"], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"8", "-", 
       RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SubscriptBox["p", "0"]}]}], ",", 
   RowBox[{
    SubscriptBox[
     OverscriptBox["z", "_"], "1"], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"8", "+", 
       RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     SubscriptBox["p", "0"]}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[83]=",ExpressionUUID->"95fc0cff-8930-d24d-8486-a63b79fffd71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "@", 
  RowBox[{"KeyValueMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mon", ",", "val"}], "}"}], "|->", 
     RowBox[{"Splice", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["br", "mon"], "->", 
         RowBox[{"Re", "[", "val", "]"}]}], ",", 
        RowBox[{
         SubscriptBox["bi", "mon"], "->", 
         RowBox[{"Im", "[", "val", "]"}]}]}], "}"}]}]}], ",", "%"}], 
   "]"}]}]], "Input",
 CellLabel->"In[84]:=",ExpressionUUID->"6408a21d-76a7-eb4a-9ac4-1e831489787d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "213"],
      RowBox[{"Re", "[", 
        SubsuperscriptBox["x", "1", "3"], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^3], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "3"]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "535"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "1", "2"], " ", 
          SubsuperscriptBox["x", "2", "2"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^2 Subscript[$CellContext`x, 2]^2], 
      "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "4"]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "208"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "1", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"8", " ", 
     SubscriptBox["p", "3"]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     TagBox[
      TooltipBox[
       SubscriptBox["X", "209"],
       RowBox[{"Im", "[", 
         RowBox[{
           SubsuperscriptBox["x", "1", "2"], " ", 
           SubscriptBox[
            OverscriptBox["z", "_"], "1"]}], "]"}]],
      Annotation[#, 
       Im[Subscript[$CellContext`x, 1]^2 Subscript[
          OverBar[$CellContext`z], 1]], "Tooltip"]& ]}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", "4"}], " ", 
     SubscriptBox["p", "3"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "208"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "1", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"8", " ", 
     SubscriptBox["p", "3"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "209"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubsuperscriptBox["x", "1", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 1]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"4", " ", 
     SubscriptBox["p", "3"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "93"],
      RowBox[{"Re", "[", 
        SubsuperscriptBox["x", "1", "2"], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^2], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "1"]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "1215"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "4"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^4], 
      "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "5"]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "503"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"8", " ", 
     SubscriptBox["p", "4"]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     TagBox[
      TooltipBox[
       SubscriptBox["X", "504"],
       RowBox[{"Im", "[", 
         RowBox[{
           SubscriptBox["x", "1"], " ", 
           SubsuperscriptBox["x", "2", "2"], " ", 
           SubscriptBox[
            OverscriptBox["z", "_"], "1"]}], "]"}]],
      Annotation[#, 
       Im[
       Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^2 Subscript[
          OverBar[$CellContext`z], 1]], "Tooltip"]& ]}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", "4"}], " ", 
     SubscriptBox["p", "4"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "503"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"8", " ", 
     SubscriptBox["p", "4"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "504"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"4", " ", 
     SubscriptBox["p", "4"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "205"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "2"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^2], 
      "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "2"]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "88"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"8", " ", 
     SubscriptBox["p", "1"]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     TagBox[
      TooltipBox[
       SubscriptBox["X", "89"],
       RowBox[{"Im", "[", 
         RowBox[{
           SubscriptBox["x", "1"], " ", 
           SubscriptBox[
            OverscriptBox["z", "_"], "1"]}], "]"}]],
      Annotation[#, 
       Im[Subscript[$CellContext`x, 1] Subscript[
          OverBar[$CellContext`z], 1]], "Tooltip"]& ]}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", "4"}], " ", 
     SubscriptBox["p", "1"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "88"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"8", " ", 
     SubscriptBox["p", "1"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "89"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 1] Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"4", " ", 
     SubscriptBox["p", "1"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "57"],
      RowBox[{"Re", "[", 
        SubscriptBox["x", "1"], "]"}]],
     Annotation[#, 
      Re[
       Subscript[$CellContext`x, 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "0"]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "1001"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "4"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 2]^4 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"8", " ", 
     SubscriptBox["p", "5"]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     TagBox[
      TooltipBox[
       SubscriptBox["X", "1002"],
       RowBox[{"Im", "[", 
         RowBox[{
           SubsuperscriptBox["x", "2", "4"], " ", 
           SubscriptBox[
            OverscriptBox["z", "_"], "1"]}], "]"}]],
      Annotation[#, 
       Im[Subscript[$CellContext`x, 2]^4 Subscript[
          OverBar[$CellContext`z], 1]], "Tooltip"]& ]}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", "4"}], " ", 
     SubscriptBox["p", "5"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "1001"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "4"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 2]^4 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"8", " ", 
     SubscriptBox["p", "5"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "1002"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "4"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 2]^4 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"4", " ", 
     SubscriptBox["p", "5"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "173"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"8", " ", 
     SubscriptBox["p", "2"]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     TagBox[
      TooltipBox[
       SubscriptBox["X", "174"],
       RowBox[{"Im", "[", 
         RowBox[{
           SubsuperscriptBox["x", "2", "2"], " ", 
           SubscriptBox[
            OverscriptBox["z", "_"], "1"]}], "]"}]],
      Annotation[#, 
       Im[Subscript[$CellContext`x, 2]^2 Subscript[
          OverBar[$CellContext`z], 1]], "Tooltip"]& ]}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", "4"}], " ", 
     SubscriptBox["p", "2"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "173"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"8", " ", 
     SubscriptBox["p", "2"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "174"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"4", " ", 
     SubscriptBox["p", "2"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "52"],
      RowBox[{"Re", "[", 
        SubscriptBox[
         OverscriptBox["z", "_"], "1"], "]"}]],
     Annotation[#, 
      Re[
       Subscript[
        OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"8", " ", 
     SubscriptBox["p", "0"]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     TagBox[
      TooltipBox[
       SubscriptBox["X", "53"],
       RowBox[{"Im", "[", 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"], "]"}]],
      Annotation[#, 
       Im[
        Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ]}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", "4"}], " ", 
     SubscriptBox["p", "0"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "52"],
      RowBox[{"Re", "[", 
        SubscriptBox[
         OverscriptBox["z", "_"], "1"], "]"}]],
     Annotation[#, 
      Re[
       Subscript[
        OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"8", " ", 
     SubscriptBox["p", "0"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "53"],
      RowBox[{"Im", "[", 
        SubscriptBox[
         OverscriptBox["z", "_"], "1"], "]"}]],
     Annotation[#, 
      Im[
       Subscript[
        OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"4", " ", 
     SubscriptBox["p", "0"]}]}]}], "}"}]], "Output",
 CellLabel->"Out[84]=",ExpressionUUID->"a45fc74d-1d17-5548-9ec9-120ebcff31b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{
   RowBox[{"DeleteCases", "[", 
    RowBox[{"%", ",", 
     RowBox[{"0", "->", "0"}]}], "]"}], "/.", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"m_Times", "->", "v_"}], ")"}], ":>", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "m"}], "->", 
      RowBox[{"-", "v"}]}], ")"}]}]}], "]"}]], "Input",
 CellLabel->"In[85]:=",ExpressionUUID->"a6ec5e1b-0367-f44e-aa80-0937aa6424e4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "52"],
      RowBox[{"Re", "[", 
        SubscriptBox[
         OverscriptBox["z", "_"], "1"], "]"}]],
     Annotation[#, 
      Re[
       Subscript[
        OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"8", " ", 
     SubscriptBox["p", "0"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "53"],
      RowBox[{"Im", "[", 
        SubscriptBox[
         OverscriptBox["z", "_"], "1"], "]"}]],
     Annotation[#, 
      Im[
       Subscript[
        OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"4", " ", 
     SubscriptBox["p", "0"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "57"],
      RowBox[{"Re", "[", 
        SubscriptBox["x", "1"], "]"}]],
     Annotation[#, 
      Re[
       Subscript[$CellContext`x, 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "0"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "88"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"8", " ", 
     SubscriptBox["p", "1"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "89"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 1] Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"4", " ", 
     SubscriptBox["p", "1"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "93"],
      RowBox[{"Re", "[", 
        SubsuperscriptBox["x", "1", "2"], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^2], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "1"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "173"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"8", " ", 
     SubscriptBox["p", "2"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "174"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"4", " ", 
     SubscriptBox["p", "2"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "205"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "2"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^2], 
      "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "2"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "208"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "1", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"8", " ", 
     SubscriptBox["p", "3"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "209"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubsuperscriptBox["x", "1", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 1]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"4", " ", 
     SubscriptBox["p", "3"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "213"],
      RowBox[{"Re", "[", 
        SubsuperscriptBox["x", "1", "3"], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^3], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "3"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "503"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"8", " ", 
     SubscriptBox["p", "4"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "504"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"4", " ", 
     SubscriptBox["p", "4"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "535"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "1", "2"], " ", 
          SubsuperscriptBox["x", "2", "2"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^2 Subscript[$CellContext`x, 2]^2], 
      "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "4"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "1001"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "4"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 2]^4 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"8", " ", 
     SubscriptBox["p", "5"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "1002"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "4"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 2]^4 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"4", " ", 
     SubscriptBox["p", "5"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "1215"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "4"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^4], 
      "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "5"]}]}]}], "}"}]], "Output",
 CellLabel->"Out[85]=",ExpressionUUID->"59f3631c-4e0f-8d42-bff2-7385d0ca2c25"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Real-valued basis, complex-valued polynomial", "Subsubsection",ExpressionUUID->"ccc0a6bc-2818-7043-bfbf-91a7401a39a0"],

Cell["\<\
Now we get two constraints and two prefactors, we just work with them \
separately; in the objective, they are added together.\
\>", "Text",ExpressionUUID->"8fb3c9c6-f80a-0d46-ab6e-510a762cd90e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"basis", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SubscriptBox["x", "1"], ",", 
        SubsuperscriptBox["x", "2", "2"]}], "}"}]}], ",", 
     RowBox[{"constraint", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"6", 
         SubscriptBox["x", "1"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "-", 
           RowBox[{"4", "I"}]}], ")"}], 
         SubscriptBox["z", "1"]}], "+", 
        RowBox[{"2", 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"]}], "+", 
        RowBox[{"10", "I", " ", 
         SubscriptBox["x", "2"]}]}], ")"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lb", "=", 
        RowBox[{"Length", "@", "basis"}]}], ",", 
       RowBox[{"constraints", "=", 
        RowBox[{
         RowBox[{"ComplexExpand", "[", 
          RowBox[{"Through", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Re", ",", "Im"}], "}"}], "[", 
            RowBox[{"constraint", "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                SubscriptBox[
                 OverscriptBox["z", "_"], "i_"], ":>", 
                RowBox[{
                 SubscriptBox["zr", "i"], "-", 
                 RowBox[{"I", " ", 
                  SubscriptBox["zi", "i"]}]}]}], ",", 
               RowBox[{
                SubscriptBox["z", "i_"], ":>", 
                RowBox[{
                 SubscriptBox["zr", "i"], "+", 
                 RowBox[{"I", " ", 
                  SubscriptBox["zi", "i"]}]}]}]}], "}"}]}], "]"}], "]"}], 
          "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["zr", "i_"], ":>", 
            FractionBox[
             RowBox[{
              SubscriptBox["z", "i"], "+", 
              SubscriptBox[
               OverscriptBox["z", "_"], "i"]}], "2"]}], ",", 
           RowBox[{
            SubscriptBox["zi", "i_"], ":>", 
            FractionBox[
             RowBox[{
              SubscriptBox["z", "i"], "-", 
              SubscriptBox[
               OverscriptBox["z", "_"], "i"]}], 
             RowBox[{"2", "I"}]]}]}], "}"}]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Total", "[", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"k", "=", "0"}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubsuperscriptBox["\[Sum]", 
              RowBox[{"j", "=", "1"}], "lb"], 
             RowBox[{
              SubsuperscriptBox["\[Sum]", 
               RowBox[{"i", "=", "1"}], "lb"], 
              TagBox[GridBox[{
                 {"\[Piecewise]", GridBox[{
                    {"0", 
                    RowBox[{
                    RowBox[{"isreal", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}], "&&", 
                    RowBox[{"i", "<", "j"}]}]},
                    {
                    RowBox[{
                    SubscriptBox["p", 
                    RowBox[{"k", "++"}]], 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}]}], 
                    RowBox[{"isreal", "[", 
                    RowBox[{
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["p", 
                    RowBox[{"k", "++"}]], "+", 
                    RowBox[{"I", " ", 
                    SubscriptBox["p", 
                    RowBox[{"k", "++"}]]}]}], ")"}], 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["p", 
                    RowBox[{"k", "-", "2"}]], "-", 
                    RowBox[{"I", " ", 
                    SubscriptBox["p", 
                    RowBox[{"k", "-", "1"}]]}]}], ")"}], 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], 
                    RowBox[{"iscanonical", "[", 
                    RowBox[{
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}]},
                    {"0", "True"}
                   },
                   AllowedDimensions->{2, Automatic},
                   Editable->True,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                   Selectable->True]}
                },
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}],
               "Piecewise",
               DeleteWithContents->True,
               Editable->False,
               SelectWithContents->True,
               Selectable->False,
               StripWrapperBoxes->True]}]}], ")"}], "#"}], "&"}], "/@", 
         "constraints"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[86]:=",ExpressionUUID->"dda6ffa4-0415-6b4d-b6f6-8d70f36c1d89"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["p", "6"], "+", 
     RowBox[{
      SubscriptBox["p", "7"], " ", 
      SubscriptBox["x", "1"]}], "+", 
     RowBox[{
      SubscriptBox["p", "9"], " ", 
      SubsuperscriptBox["x", "1", "2"]}], "+", 
     RowBox[{
      SubscriptBox["p", "8"], " ", 
      SubsuperscriptBox["x", "2", "2"]}], "+", 
     RowBox[{
      SubscriptBox["p", "10"], " ", 
      SubscriptBox["x", "1"], " ", 
      SubsuperscriptBox["x", "2", "2"]}], "+", 
     RowBox[{
      SubscriptBox["p", "11"], " ", 
      SubsuperscriptBox["x", "2", "4"]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"10", " ", 
      SubscriptBox["x", "2"]}], "-", 
     RowBox[{"3", " ", "\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["z", "1"], "-", 
        SubscriptBox[
         OverscriptBox["z", "_"], "1"]}], ")"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["z", "1"], "+", 
        SubscriptBox[
         OverscriptBox["z", "_"], "1"]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["p", "0"], "+", 
     RowBox[{
      SubscriptBox["p", "1"], " ", 
      SubscriptBox["x", "1"]}], "+", 
     RowBox[{
      SubscriptBox["p", "3"], " ", 
      SubsuperscriptBox["x", "1", "2"]}], "+", 
     RowBox[{
      SubscriptBox["p", "2"], " ", 
      SubsuperscriptBox["x", "2", "2"]}], "+", 
     RowBox[{
      SubscriptBox["p", "4"], " ", 
      SubscriptBox["x", "1"], " ", 
      SubsuperscriptBox["x", "2", "2"]}], "+", 
     RowBox[{
      SubscriptBox["p", "5"], " ", 
      SubsuperscriptBox["x", "2", "4"]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"6", " ", 
      SubscriptBox["x", "1"]}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["z", "1"], "-", 
        SubscriptBox[
         OverscriptBox["z", "_"], "1"]}], ")"}]}], "+", 
     RowBox[{"5", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["z", "1"], "+", 
        SubscriptBox[
         OverscriptBox["z", "_"], "1"]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellLabel->"Out[86]=",ExpressionUUID->"b23988a0-6f1e-0e46-8c9e-433a450a3e17"]
}, Open  ]],

Cell["Regroup in terms of the monomials.", "Text",ExpressionUUID->"17943fa7-53c7-3944-88de-2aff67e6e75f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KeyMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", 
     RowBox[{"(", 
      SuperscriptBox["allvars", "#"], ")"}]}], "&"}], ",", 
   RowBox[{"Association", "@", 
    RowBox[{"CoefficientRules", "[", 
     RowBox[{"%", ",", "allvars"}], "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[87]:=",ExpressionUUID->"5ce124d2-fb5c-2843-be67-d4a5782576a8"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["x", "1", "3"], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "3"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "1", "2"], " ", 
     SubsuperscriptBox["x", "2", "2"]}], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "4"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "1", "2"], " ", 
     SubscriptBox["x", "2"]}], "\[Rule]", 
    RowBox[{"10", " ", 
     SubscriptBox["p", "9"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "1", "2"], " ", 
     SubscriptBox["z", "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "-", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "3"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "9"]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "1", "2"], " ", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "3"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "9"]}]}]}], ",", 
   RowBox[{
    SubsuperscriptBox["x", "1", "2"], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "1"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], " ", 
     SubsuperscriptBox["x", "2", "4"]}], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "5"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], " ", 
     SubsuperscriptBox["x", "2", "3"]}], "\[Rule]", 
    RowBox[{"10", " ", 
     SubscriptBox["p", "10"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], " ", 
     SubsuperscriptBox["x", "2", "2"], " ", 
     SubscriptBox["z", "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "-", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "4"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "10"]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], " ", 
     SubsuperscriptBox["x", "2", "2"], " ", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "4"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "10"]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], " ", 
     SubsuperscriptBox["x", "2", "2"]}], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], " ", 
     SubscriptBox["x", "2"]}], "\[Rule]", 
    RowBox[{"10", " ", 
     SubscriptBox["p", "7"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], " ", 
     SubscriptBox["z", "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "-", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "1"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "7"]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], " ", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "1"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "7"]}]}]}], ",", 
   RowBox[{
    SubscriptBox["x", "1"], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "0"]}]}], ",", 
   RowBox[{
    SubsuperscriptBox["x", "2", "5"], "\[Rule]", 
    RowBox[{"10", " ", 
     SubscriptBox["p", "11"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "2", "4"], " ", 
     SubscriptBox["z", "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "-", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "5"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "11"]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "2", "4"], " ", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "5"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "11"]}]}]}], ",", 
   RowBox[{
    SubsuperscriptBox["x", "2", "3"], "\[Rule]", 
    RowBox[{"10", " ", 
     SubscriptBox["p", "8"]}]}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "2", "2"], " ", 
     SubscriptBox["z", "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "-", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "2"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "8"]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "2", "2"], " ", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "2"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "8"]}]}]}], ",", 
   RowBox[{
    SubscriptBox["x", "2"], "\[Rule]", 
    RowBox[{"10", " ", 
     SubscriptBox["p", "6"]}]}], ",", 
   RowBox[{
    SubscriptBox["z", "1"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "-", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "0"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "6"]}]}]}], ",", 
   RowBox[{
    SubscriptBox[
     OverscriptBox["z", "_"], "1"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "0"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      SubscriptBox["p", "6"]}]}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[87]=",ExpressionUUID->"73969aa0-265d-a343-b96d-2dc75413abd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "@", 
  RowBox[{"KeyValueMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mon", ",", "val"}], "}"}], "|->", 
     RowBox[{"Splice", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["br", "mon"], "->", 
         RowBox[{"Re", "[", "val", "]"}]}], ",", 
        RowBox[{
         SubscriptBox["bi", "mon"], "->", 
         RowBox[{"Im", "[", "val", "]"}]}]}], "}"}]}]}], ",", "%"}], 
   "]"}]}]], "Input",
 CellLabel->"In[88]:=",ExpressionUUID->"3ced873f-389d-8848-9d72-7286488d000c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "213"],
      RowBox[{"Re", "[", 
        SubsuperscriptBox["x", "1", "3"], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^3], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "3"]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "535"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "1", "2"], " ", 
          SubsuperscriptBox["x", "2", "2"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^2 Subscript[$CellContext`x, 2]^2], 
      "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "4"]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "212"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "1", "2"], " ", 
          SubscriptBox["x", "2"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^2 Subscript[$CellContext`x, 2]], 
      "Tooltip"]& ], "\[Rule]", 
    RowBox[{"10", " ", 
     SubscriptBox["p", "9"]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "208"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "1", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["p", "3"]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p", "9"]}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     TagBox[
      TooltipBox[
       SubscriptBox["X", "209"],
       RowBox[{"Im", "[", 
         RowBox[{
           SubsuperscriptBox["x", "1", "2"], " ", 
           SubscriptBox[
            OverscriptBox["z", "_"], "1"]}], "]"}]],
      Annotation[#, 
       Im[Subscript[$CellContext`x, 1]^2 Subscript[
          OverBar[$CellContext`z], 1]], "Tooltip"]& ]}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SubscriptBox["p", "3"]}], "-", 
     RowBox[{"3", " ", 
      SubscriptBox["p", "9"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "208"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "1", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["p", "3"]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p", "9"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "209"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubsuperscriptBox["x", "1", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 1]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      SubscriptBox["p", "3"]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["p", "9"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "93"],
      RowBox[{"Re", "[", 
        SubsuperscriptBox["x", "1", "2"], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^2], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "1"]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "1215"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "4"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^4], 
      "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "5"]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "507"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "3"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^3], 
      "Tooltip"]& ], "\[Rule]", 
    RowBox[{"10", " ", 
     SubscriptBox["p", "10"]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "503"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["p", "4"]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p", "10"]}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     TagBox[
      TooltipBox[
       SubscriptBox["X", "504"],
       RowBox[{"Im", "[", 
         RowBox[{
           SubscriptBox["x", "1"], " ", 
           SubsuperscriptBox["x", "2", "2"], " ", 
           SubscriptBox[
            OverscriptBox["z", "_"], "1"]}], "]"}]],
      Annotation[#, 
       Im[
       Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^2 Subscript[
          OverBar[$CellContext`z], 1]], "Tooltip"]& ]}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SubscriptBox["p", "4"]}], "-", 
     RowBox[{"3", " ", 
      SubscriptBox["p", "10"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "503"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["p", "4"]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p", "10"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "504"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      SubscriptBox["p", "4"]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["p", "10"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "205"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "2"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^2], 
      "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "2"]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "92"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox["x", "2"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]], 
      "Tooltip"]& ], "\[Rule]", 
    RowBox[{"10", " ", 
     SubscriptBox["p", "7"]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "88"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["p", "1"]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p", "7"]}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     TagBox[
      TooltipBox[
       SubscriptBox["X", "89"],
       RowBox[{"Im", "[", 
         RowBox[{
           SubscriptBox["x", "1"], " ", 
           SubscriptBox[
            OverscriptBox["z", "_"], "1"]}], "]"}]],
      Annotation[#, 
       Im[Subscript[$CellContext`x, 1] Subscript[
          OverBar[$CellContext`z], 1]], "Tooltip"]& ]}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SubscriptBox["p", "1"]}], "-", 
     RowBox[{"3", " ", 
      SubscriptBox["p", "7"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "88"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["p", "1"]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p", "7"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "89"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 1] Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      SubscriptBox["p", "1"]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["p", "7"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "57"],
      RowBox[{"Re", "[", 
        SubscriptBox["x", "1"], "]"}]],
     Annotation[#, 
      Re[
       Subscript[$CellContext`x, 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "0"]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "1005"],
      RowBox[{"Re", "[", 
        SubsuperscriptBox["x", "2", "5"], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 2]^5], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"10", " ", 
     SubscriptBox["p", "11"]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "1001"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "4"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 2]^4 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["p", "5"]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p", "11"]}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     TagBox[
      TooltipBox[
       SubscriptBox["X", "1002"],
       RowBox[{"Im", "[", 
         RowBox[{
           SubsuperscriptBox["x", "2", "4"], " ", 
           SubscriptBox[
            OverscriptBox["z", "_"], "1"]}], "]"}]],
      Annotation[#, 
       Im[Subscript[$CellContext`x, 2]^4 Subscript[
          OverBar[$CellContext`z], 1]], "Tooltip"]& ]}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SubscriptBox["p", "5"]}], "-", 
     RowBox[{"3", " ", 
      SubscriptBox["p", "11"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "1001"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "4"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 2]^4 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["p", "5"]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p", "11"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "1002"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "4"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 2]^4 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      SubscriptBox["p", "5"]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["p", "11"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "177"],
      RowBox[{"Re", "[", 
        SubsuperscriptBox["x", "2", "3"], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 2]^3], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"10", " ", 
     SubscriptBox["p", "8"]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "173"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["p", "2"]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p", "8"]}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     TagBox[
      TooltipBox[
       SubscriptBox["X", "174"],
       RowBox[{"Im", "[", 
         RowBox[{
           SubsuperscriptBox["x", "2", "2"], " ", 
           SubscriptBox[
            OverscriptBox["z", "_"], "1"]}], "]"}]],
      Annotation[#, 
       Im[Subscript[$CellContext`x, 2]^2 Subscript[
          OverBar[$CellContext`z], 1]], "Tooltip"]& ]}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SubscriptBox["p", "2"]}], "-", 
     RowBox[{"3", " ", 
      SubscriptBox["p", "8"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "173"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["p", "2"]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p", "8"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "174"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      SubscriptBox["p", "2"]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["p", "8"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "56"],
      RowBox[{"Re", "[", 
        SubscriptBox["x", "2"], "]"}]],
     Annotation[#, 
      Re[
       Subscript[$CellContext`x, 2]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"10", " ", 
     SubscriptBox["p", "6"]}]}], ",", 
   RowBox[{"0", "\[Rule]", "0"}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "52"],
      RowBox[{"Re", "[", 
        SubscriptBox[
         OverscriptBox["z", "_"], "1"], "]"}]],
     Annotation[#, 
      Re[
       Subscript[
        OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["p", "0"]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p", "6"]}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     TagBox[
      TooltipBox[
       SubscriptBox["X", "53"],
       RowBox[{"Im", "[", 
         SubscriptBox[
          OverscriptBox["z", "_"], "1"], "]"}]],
      Annotation[#, 
       Im[
        Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ]}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SubscriptBox["p", "0"]}], "-", 
     RowBox[{"3", " ", 
      SubscriptBox["p", "6"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "52"],
      RowBox[{"Re", "[", 
        SubscriptBox[
         OverscriptBox["z", "_"], "1"], "]"}]],
     Annotation[#, 
      Re[
       Subscript[
        OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["p", "0"]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p", "6"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "53"],
      RowBox[{"Im", "[", 
        SubscriptBox[
         OverscriptBox["z", "_"], "1"], "]"}]],
     Annotation[#, 
      Im[
       Subscript[
        OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      SubscriptBox["p", "0"]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["p", "6"]}]}]}]}], "}"}]], "Output",
 CellLabel->"Out[88]=",ExpressionUUID->"f7ed3f53-6150-dd46-8fa4-e12c63e7b044"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{
   RowBox[{"DeleteCases", "[", 
    RowBox[{"%", ",", 
     RowBox[{"0", "->", "0"}]}], "]"}], "/.", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"m_Times", "->", "v_"}], ")"}], ":>", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "m"}], "->", 
      RowBox[{"-", "v"}]}], ")"}]}]}], "]"}]], "Input",
 CellLabel->"In[89]:=",ExpressionUUID->"f857df35-ded6-dc48-8356-a140bca3835a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "52"],
      RowBox[{"Re", "[", 
        SubscriptBox[
         OverscriptBox["z", "_"], "1"], "]"}]],
     Annotation[#, 
      Re[
       Subscript[
        OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["p", "0"]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p", "6"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "53"],
      RowBox[{"Im", "[", 
        SubscriptBox[
         OverscriptBox["z", "_"], "1"], "]"}]],
     Annotation[#, 
      Im[
       Subscript[
        OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      SubscriptBox["p", "0"]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["p", "6"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "56"],
      RowBox[{"Re", "[", 
        SubscriptBox["x", "2"], "]"}]],
     Annotation[#, 
      Re[
       Subscript[$CellContext`x, 2]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"10", " ", 
     SubscriptBox["p", "6"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "57"],
      RowBox[{"Re", "[", 
        SubscriptBox["x", "1"], "]"}]],
     Annotation[#, 
      Re[
       Subscript[$CellContext`x, 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "0"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "88"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["p", "1"]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p", "7"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "89"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 1] Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      SubscriptBox["p", "1"]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["p", "7"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "92"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox["x", "2"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]], 
      "Tooltip"]& ], "\[Rule]", 
    RowBox[{"10", " ", 
     SubscriptBox["p", "7"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "93"],
      RowBox[{"Re", "[", 
        SubsuperscriptBox["x", "1", "2"], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^2], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "1"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "173"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["p", "2"]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p", "8"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "174"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      SubscriptBox["p", "2"]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["p", "8"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "177"],
      RowBox[{"Re", "[", 
        SubsuperscriptBox["x", "2", "3"], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 2]^3], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"10", " ", 
     SubscriptBox["p", "8"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "205"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "2"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^2], 
      "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "2"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "208"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "1", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["p", "3"]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p", "9"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "209"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubsuperscriptBox["x", "1", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 1]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      SubscriptBox["p", "3"]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["p", "9"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "212"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "1", "2"], " ", 
          SubscriptBox["x", "2"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^2 Subscript[$CellContext`x, 2]], 
      "Tooltip"]& ], "\[Rule]", 
    RowBox[{"10", " ", 
     SubscriptBox["p", "9"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "213"],
      RowBox[{"Re", "[", 
        SubsuperscriptBox["x", "1", "3"], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^3], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "3"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "503"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["p", "4"]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p", "10"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "504"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "2"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^2 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      SubscriptBox["p", "4"]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["p", "10"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "507"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "3"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^3], 
      "Tooltip"]& ], "\[Rule]", 
    RowBox[{"10", " ", 
     SubscriptBox["p", "10"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "535"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "1", "2"], " ", 
          SubsuperscriptBox["x", "2", "2"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1]^2 Subscript[$CellContext`x, 2]^2], 
      "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "4"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "1001"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "4"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 2]^4 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SubscriptBox["p", "5"]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["p", "11"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "1002"],
      RowBox[{"Im", "[", 
        RowBox[{
          SubsuperscriptBox["x", "2", "4"], " ", 
          SubscriptBox[
           OverscriptBox["z", "_"], "1"]}], "]"}]],
     Annotation[#, 
      Im[Subscript[$CellContext`x, 2]^4 Subscript[
         OverBar[$CellContext`z], 1]], "Tooltip"]& ], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      SubscriptBox["p", "5"]}], "+", 
     RowBox[{"3", " ", 
      SubscriptBox["p", "11"]}]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "1005"],
      RowBox[{"Re", "[", 
        SubsuperscriptBox["x", "2", "5"], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 2]^5], "Tooltip"]& ], "\[Rule]", 
    RowBox[{"10", " ", 
     SubscriptBox["p", "11"]}]}], ",", 
   RowBox[{
    TagBox[
     TooltipBox[
      SubscriptBox["X", "1215"],
      RowBox[{"Re", "[", 
        RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubsuperscriptBox["x", "2", "4"]}], "]"}]],
     Annotation[#, 
      Re[Subscript[$CellContext`x, 1] Subscript[$CellContext`x, 2]^4], 
      "Tooltip"]& ], "\[Rule]", 
    RowBox[{"6", " ", 
     SubscriptBox["p", "5"]}]}]}], "}"}]], "Output",
 CellLabel->"Out[89]=",ExpressionUUID->"7149342f-40e2-ff4a-a745-c72c4346293a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Real-valued basis, real-valued polynomial", "Subsubsection",ExpressionUUID->"3d4f9063-e6af-de45-9737-c5039f72b8df"],

Cell["\<\
This is interesting if a complex monomial can be turned real by \
multiplication with an appropriate basis term\
\>", "Text",ExpressionUUID->"a6cfe6a7-1fb4-8f4d-bad9-1a7740d4320f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"basis", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SubscriptBox["z", "1"]}], "}"}]}], ",", 
     RowBox[{"constraint", "=", 
      RowBox[{
       SubscriptBox["z", "1"], "+", 
       SubscriptBox[
        OverscriptBox["z", "_"], "1"]}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lb", "=", 
        RowBox[{"Length", "@", "basis"}]}], ",", 
       RowBox[{"constraints", "=", 
        RowBox[{
         RowBox[{"ComplexExpand", "[", 
          RowBox[{"Through", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Re", ",", "Im"}], "}"}], "[", 
            RowBox[{"constraint", "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                SubscriptBox[
                 OverscriptBox["z", "_"], "i_"], ":>", 
                RowBox[{
                 SubscriptBox["zr", "i"], "-", 
                 RowBox[{"I", " ", 
                  SubscriptBox["zi", "i"]}]}]}], ",", 
               RowBox[{
                SubscriptBox["z", "i_"], ":>", 
                RowBox[{
                 SubscriptBox["zr", "i"], "+", 
                 RowBox[{"I", " ", 
                  SubscriptBox["zi", "i"]}]}]}]}], "}"}]}], "]"}], "]"}], 
          "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["zr", "i_"], ":>", 
            FractionBox[
             RowBox[{
              SubscriptBox["z", "i"], "+", 
              SubscriptBox[
               OverscriptBox["z", "_"], "i"]}], "2"]}], ",", 
           RowBox[{
            SubscriptBox["zi", "i_"], ":>", 
            FractionBox[
             RowBox[{
              SubscriptBox["z", "i"], "-", 
              SubscriptBox[
               OverscriptBox["z", "_"], "i"]}], 
             RowBox[{"2", "I"}]]}]}], "}"}]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Total", "[", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"k", "=", "0"}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubsuperscriptBox["\[Sum]", 
              RowBox[{"j", "=", "1"}], "lb"], 
             RowBox[{
              SubsuperscriptBox["\[Sum]", 
               RowBox[{"i", "=", "1"}], "lb"], 
              TagBox[GridBox[{
                 {"\[Piecewise]", GridBox[{
                    {"0", 
                    RowBox[{
                    RowBox[{"isreal", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}], "&&", 
                    RowBox[{"i", "<", "j"}]}]},
                    {
                    RowBox[{
                    SubscriptBox["p", 
                    RowBox[{"k", "++"}]], 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}]}], 
                    RowBox[{"isreal", "[", 
                    RowBox[{
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["p", 
                    RowBox[{"k", "++"}]], "+", 
                    RowBox[{"I", " ", 
                    SubscriptBox["p", 
                    RowBox[{"k", "++"}]]}]}], ")"}], 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["p", 
                    RowBox[{"k", "-", "2"}]], "-", 
                    RowBox[{"I", " ", 
                    SubscriptBox["p", 
                    RowBox[{"k", "-", "1"}]]}]}], ")"}], 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], 
                    RowBox[{"iscanonical", "[", 
                    RowBox[{
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}]},
                    {"0", "True"}
                   },
                   AllowedDimensions->{2, Automatic},
                   Editable->True,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                   Selectable->True]}
                },
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}],
               "Piecewise",
               DeleteWithContents->True,
               Editable->False,
               SelectWithContents->True,
               Selectable->False,
               StripWrapperBoxes->True]}]}], ")"}], "#"}], "&"}], "/@", 
         "constraints"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[90]:=",ExpressionUUID->"8b411604-88dc-fa49-9a6d-e5dfce21694f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    SubscriptBox["z", "1"], "+", 
    SubscriptBox[
     OverscriptBox["z", "_"], "1"]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    SubscriptBox["p", "0"], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["p", "1"], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["p", "2"]}]}], ")"}], " ", 
     SubscriptBox["z", "1"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["p", "1"], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["p", "2"]}]}], ")"}], " ", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "+", 
    RowBox[{
     SubscriptBox["p", "3"], " ", 
     SubscriptBox["z", "1"], " ", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}]}], ")"}]}]], "Output",
 CellLabel->"Out[90]=",ExpressionUUID->"9d6632e8-a62e-9d41-b983-1bd1825a353a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KeyMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", 
     RowBox[{"(", 
      SuperscriptBox["allvars", "#"], ")"}]}], "&"}], ",", 
   RowBox[{"Association", "@", 
    RowBox[{"CoefficientRules", "[", 
     RowBox[{"%", ",", "allvars"}], "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[91]:=",ExpressionUUID->"b0c11f17-c8e0-9448-9fd2-9ac595606ebd"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubsuperscriptBox["z", "1", "2"], " ", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "\[Rule]", 
    SubscriptBox["p", "3"]}], ",", 
   RowBox[{
    SubsuperscriptBox["z", "1", "2"], "\[Rule]", 
    RowBox[{
     SubscriptBox["p", "1"], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
      SubscriptBox["p", "2"]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["z", "1"], " ", 
     SubsuperscriptBox[
      OverscriptBox["z", "_"], "1", "2"]}], "\[Rule]", 
    SubscriptBox["p", "3"]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["z", "1"], " ", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "\[Rule]", 
    RowBox[{"2", " ", 
     SubscriptBox["p", "1"]}]}], ",", 
   RowBox[{
    SubscriptBox["z", "1"], "\[Rule]", 
    SubscriptBox["p", "0"]}], ",", 
   RowBox[{
    SubsuperscriptBox[
     OverscriptBox["z", "_"], "1", "2"], "\[Rule]", 
    RowBox[{
     SubscriptBox["p", "1"], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      SubscriptBox["p", "2"]}]}]}], ",", 
   RowBox[{
    SubscriptBox[
     OverscriptBox["z", "_"], "1"], "\[Rule]", 
    SubscriptBox["p", "0"]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[91]=",ExpressionUUID->"6d39660b-d46f-8d45-b359-2740922fb246"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Automation", "Subsection",ExpressionUUID->"b87d660d-7450-7d47-9abc-77f38bd62d3c"],

Cell["\<\
For the automated way to distribute the coefficients, we\[CloseCurlyQuote]ll \
do it a bit differently to have an alternation between the real and imaginary \
part of the constraints.\
\>", "Text",ExpressionUUID->"f8a50d30-2dd3-994b-8bdf-730a0d7ea1a8"],

Cell[BoxData[{
 RowBox[{"ClearAll", "@", "getEquality"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getEquality", "[", 
   RowBox[{"basis_", ",", "constraint_"}], "]"}], ":=", 
  RowBox[{"toAssociation", "@", 
   RowBox[{"Union", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"DeleteCases", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"lb", "=", 
            RowBox[{"Length", "@", "basis"}]}], ",", 
           RowBox[{"constraints", "=", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ComplexExpand", "[", 
                RowBox[{"Through", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Re", ",", "Im"}], "}"}], "[", 
                  RowBox[{"constraint", "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox[
                    OverscriptBox["z", "_"], "i_"], ":>", 
                    RowBox[{
                    SubscriptBox["zr", "i"], "-", 
                    RowBox[{"I", " ", 
                    SubscriptBox["zi", "i"]}]}]}], ",", 
                    RowBox[{
                    SubscriptBox["z", "i_"], ":>", 
                    RowBox[{
                    SubscriptBox["zr", "i"], "+", 
                    RowBox[{"I", " ", 
                    SubscriptBox["zi", "i"]}]}]}]}], "}"}]}], "]"}], "]"}], 
                "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["zr", "i_"], ":>", 
                  FractionBox[
                   RowBox[{
                    SubscriptBox["z", "i"], "+", 
                    SubscriptBox[
                    OverscriptBox["z", "_"], "i"]}], "2"]}], ",", 
                 RowBox[{
                  SubscriptBox["zi", "i_"], ":>", 
                  FractionBox[
                   RowBox[{
                    SubscriptBox["z", "i"], "-", 
                    SubscriptBox[
                    OverscriptBox["z", "_"], "i"]}], 
                   RowBox[{"2", "I"}]]}]}], "}"}]}], ",", "0"}], "]"}]}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ComplexExpand", "@", 
          RowBox[{"KeyValueMap", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"mon", ",", "val"}], "}"}], "|->", 
             RowBox[{"Splice", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 SubscriptBox["br", "mon"], "->", 
                 RowBox[{"Re", "[", "val", "]"}]}], ",", 
                RowBox[{
                 SubscriptBox["bi", "mon"], "->", 
                 RowBox[{"Im", "[", "val", "]"}]}]}], "}"}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"KeyMap", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Times", "@@", 
                RowBox[{"(", 
                 SuperscriptBox["allvars", "#"], ")"}]}], "&"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Association", "@", 
               RowBox[{"CoefficientRules", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"lc", "=", 
                    RowBox[{"Length", "@", "constraints"}]}], "}"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    SubsuperscriptBox["\[Sum]", 
                    RowBox[{"\[Delta]", "=", "0"}], 
                    RowBox[{"lc", "-", "1"}]], 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"k", "=", "0"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"constraints", "[", 
                    RowBox[{"[", 
                    RowBox[{"\[Delta]", "+", "1"}], "]"}], "]"}], 
                    RowBox[{
                    SubsuperscriptBox["\[Sum]", 
                    RowBox[{"j", "=", "1"}], "lb"], 
                    RowBox[{
                    SubsuperscriptBox["\[Sum]", 
                    RowBox[{"i", "=", "1"}], "lb"], 
                    TagBox[GridBox[{
                    {"\[Piecewise]", GridBox[{
                    {"0", 
                    RowBox[{
                    RowBox[{"isreal", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}], "&&", 
                    RowBox[{"i", "<", "j"}]}]},
                    {
                    RowBox[{
                    SubscriptBox["p", 
                    RowBox[{
                    RowBox[{"lc", 
                    RowBox[{"(", 
                    RowBox[{"k", "++"}], ")"}]}], "+", "\[Delta]"}]], 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}]}], 
                    RowBox[{"isreal", "[", 
                    RowBox[{
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["p", 
                    RowBox[{
                    RowBox[{"lc", 
                    RowBox[{"(", 
                    RowBox[{"k", "++"}], ")"}]}], "+", "\[Delta]"}]], "+", 
                    RowBox[{"I", " ", 
                    SubscriptBox["p", 
                    RowBox[{
                    RowBox[{"lc", 
                    RowBox[{"(", 
                    RowBox[{"k", "++"}], ")"}]}], "+", "\[Delta]"}]]}]}], 
                    ")"}], 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["p", 
                    RowBox[{
                    RowBox[{"lc", 
                    RowBox[{"(", 
                    RowBox[{"k", "-", "2"}], ")"}]}], "+", "\[Delta]"}]], "-", 
                    RowBox[{"I", " ", 
                    SubscriptBox["p", 
                    RowBox[{
                    RowBox[{"lc", 
                    RowBox[{"(", 
                    RowBox[{"k", "-", "1"}], ")"}]}], "+", "\[Delta]"}]]}]}], 
                    ")"}], 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], 
                    RowBox[{"iscanonical", "[", 
                    RowBox[{
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], 
                    RowBox[{"conj", "[", 
                    RowBox[{"basis", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}]},
                    {"0", "True"}
                    },
                    AllowedDimensions->{2, Automatic},
                    Editable->True,
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                    Selectable->True]}
                    },
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}],
                    "Piecewise",
                    DeleteWithContents->True,
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False,
                    StripWrapperBoxes->True]}]}]}]}], "]"}]}]}], 
                  "\[IndentingNewLine]", "]"}], ",", "allvars"}], 
                "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]",
         "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"0", "->", "0"}]}], "\[IndentingNewLine]", "]"}], "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m_Times", "->", "v_"}], ")"}], ":>", 
      RowBox[{
       RowBox[{"-", "m"}], "->", 
       RowBox[{"-", "v"}]}]}]}], "\[IndentingNewLine]", "]"}]}]}]}], "Input",
 CellLabel->"In[92]:=",ExpressionUUID->"54c544d3-f141-5a44-8eab-5f0f82f8016f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"generateCodeEquality", "[", 
   RowBox[{"basis_", ",", "constraint_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"equality", "=", 
      RowBox[{"Total", "@", 
       RowBox[{"KeyValueMap", "[", 
        RowBox[{"Times", ",", 
         RowBox[{"getEquality", "[", 
          RowBox[{"basis", ",", "constraint"}], "]"}]}], "]"}]}]}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vars", "=", 
        RowBox[{"Union", "@", 
         RowBox[{"Cases", "[", 
          RowBox[{"equality", ",", 
           SubscriptBox["p", "_"], ",", "\[Infinity]"}], "]"}]}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ca", "=", 
          RowBox[{"Normal", "@", 
           RowBox[{"CoefficientArrays", "[", 
            RowBox[{"equality", ",", "vars"}], "]"}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Assert", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ca", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "==", "0"}], "&&", 
           RowBox[{
            RowBox[{"Length", "[", "ca", "]"}], "==", "2"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Xvars", "=", 
             RowBox[{"Variables", "[", 
              RowBox[{"ca", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"ca2", "=", 
               RowBox[{"CoefficientArrays", "[", 
                RowBox[{
                 RowBox[{"ca", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "Xvars"}], "]"}]}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Assert", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{"ca2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "==", "0"}], "&&", 
                RowBox[{
                 RowBox[{"Length", "[", "ca2", "]"}], "==", "2"}]}], "]"}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"StringRiffle", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Array", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"coeffs", "=", 
                    RowBox[{"ca2", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "#"}], "]"}], "]"}]}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<(eqstate == \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"#", "-", "1"}], "]"}], "<>", 
                    "\"\< && index == BigInt\>\"", "<>", 
                    RowBox[{"exportList", "[", 
                    RowBox[{
                    RowBox[{"Extract", "[", 
                    RowBox[{"Xvars", ",", 
                    RowBox[{
                    "coeffs", "[", "\"\<NonzeroPositions\>\"", "]"}]}], "]"}],
                     "/.", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    SubscriptBox["X", "d_"], ",", "_"}], "]"}], ":>", "d"}]}],
                     "]"}], "<>", "\"\< && value == Int16\>\"", "<>", 
                    RowBox[{"exportList", "@", 
                    RowBox[{"coeffs", "[", "\"\<NonzeroValues\>\"", "]"}]}], 
                    "<>", "\"\<)\>\""}]}], "\[IndentingNewLine]", "]"}], 
                   "&"}], ",", 
                  RowBox[{"Length", "@", 
                   RowBox[{"ca2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], 
                "\[IndentingNewLine]", ",", "\"\< ||\\n\>\""}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[94]:=",ExpressionUUID->"21ab8329-c944-1343-8181-fc83941f839e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Test cases", "Subsection",ExpressionUUID->"e4ebe377-fc57-cd4c-a50e-72f8bdeacc7b"],

Cell[CellGroupData[{

Cell["Elementary test cases", "Subsubsection",ExpressionUUID->"9bf25f91-62dc-cb49-9084-b4ecc9308558"],

Cell["81", "Text",ExpressionUUID->"e857f1ff-0fc9-7943-9dd4-6d3ddd184439"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "1"]}], "}"}], ",", 
   RowBox[{"5", 
    SubscriptBox["x", "1"]}]}], "]"}]], "Input",
 CellLabel->"In[95]:=",ExpressionUUID->"39ead2e6-7175-5a4e-a2c1-d50515d7efb2"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[57] && value == Int16[5]) \
||\\n(eqstate == 1 && index == BigInt[93] && value == Int16[5]) ||\\n(eqstate \
== 2 && index == BigInt[213] && value == Int16[5])\"\>"], "Output",
 CellLabel->"Out[95]=",ExpressionUUID->"c661c96a-1ef6-524a-b743-2326c5b5dc3d"]
}, Open  ]],

Cell["82", "Text",ExpressionUUID->"dd9584bc-865d-4a46-b7cc-e674bdc1f227"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["z", "1"]}], "}"}], ",", 
   RowBox[{"5", 
    SubscriptBox["x", "1"]}]}], "]"}]], "Input",
 CellLabel->"In[96]:=",ExpressionUUID->"4ad63bf6-fe8e-164c-8e37-77bd1c563fc1"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[57] && value == Int16[5]) \
||\\n(eqstate == 1 && index == BigInt[88] && value == Int16[5]) ||\\n(eqstate \
== 2 && index == BigInt[89] && value == Int16[5]) ||\\n(eqstate == 3 && index \
== BigInt[186] && value == Int16[5])\"\>"], "Output",
 CellLabel->"Out[96]=",ExpressionUUID->"7c99343a-06b8-1849-8d61-72bfbfae3ca5"]
}, Open  ]],

Cell["83", "Text",ExpressionUUID->"be8306e9-ebbd-de4e-8ae6-e1ecf8c12430"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "1"]}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"6", "+", 
       RowBox[{"8", "I"}]}], ")"}], 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"6", "-", 
       RowBox[{"8", "I"}]}], ")"}], 
     SubscriptBox["z", "1"]}]}]}], "]"}]], "Input",
 CellLabel->"In[97]:=",ExpressionUUID->"765f4a42-3194-164f-acf8-4c7efaad13a2"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[52,53] && value == \
Int16[6,8]) ||\\n(eqstate == 1 && index == BigInt[88,89] && value == \
Int16[6,8]) ||\\n(eqstate == 2 && index == BigInt[208,209] && value == \
Int16[6,8])\"\>"], "Output",
 CellLabel->"Out[97]=",ExpressionUUID->"0c64ea7c-9c48-bd46-80e1-26f43aba7b40"]
}, Open  ]],

Cell["84", "Text",ExpressionUUID->"84dbd519-8103-e740-aebf-30505808c55c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["z", "1"]}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"6", "+", 
       RowBox[{"8", "I"}]}], ")"}], 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"6", "-", 
       RowBox[{"8", "I"}]}], ")"}], 
     SubscriptBox["z", "1"]}]}]}], "]"}]], "Input",
 CellLabel->"In[98]:=",ExpressionUUID->"9b666341-4497-044c-8820-336908141da4"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[52,53] && value == \
Int16[6,8]) ||\\n(eqstate == 1 && index == BigInt[63,66,67] && value == \
Int16[6,12,8]) ||\\n(eqstate == 2 && index == BigInt[63,66,67] && value == \
Int16[-8,16,6]) ||\\n(eqstate == 3 && index == BigInt[109,112] && value == \
Int16[6,8])\"\>"], "Output",
 CellLabel->"Out[98]=",ExpressionUUID->"df0641bf-7bac-0142-a321-00addf6ed741"]
}, Open  ]],

Cell["85", "Text",ExpressionUUID->"f30a2e01-76dd-a34f-93df-0e4f43f5b8ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["z", "2"]}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"6", "+", 
       RowBox[{"8", "I"}]}], ")"}], 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"6", "-", 
       RowBox[{"8", "I"}]}], ")"}], 
     SubscriptBox["z", "1"]}]}]}], "]"}]], "Input",
 CellLabel->"In[99]:=",ExpressionUUID->"e72594bb-a185-b943-b3a2-34e23ffcdf47"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[52,53] && value == \
Int16[6,8]) ||\\n(eqstate == 1 && index == BigInt[61,62,64,65] && value == \
Int16[6,6,8,8]) ||\\n(eqstate == 2 && index == BigInt[61,62,64,65] && value \
== Int16[-8,8,-6,6]) ||\\n(eqstate == 3 && index == BigInt[99,105] && value \
== Int16[6,8])\"\>"], "Output",
 CellLabel->"Out[99]=",ExpressionUUID->"70514792-9ca1-a141-845a-3da450375cee"]
}, Open  ]],

Cell["86", "Text",ExpressionUUID->"8a1b5b8d-d14f-f945-a993-9a5794deef1d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "1"]}], "}"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"6", "+", 
      RowBox[{"8", "I"}]}], ")"}], 
    SubscriptBox[
     OverscriptBox["z", "_"], "1"]}]}], "]"}]], "Input",
 CellLabel->
  "In[100]:=",ExpressionUUID->"6df35e46-6b5e-e747-98aa-e8b5c522d15c"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[52,53] && value == \
Int16[3,4]) ||\\n(eqstate == 1 && index == BigInt[52,53] && value == \
Int16[4,-3]) ||\\n(eqstate == 2 && index == BigInt[88,89] && value == \
Int16[3,4]) ||\\n(eqstate == 3 && index == BigInt[88,89] && value == \
Int16[4,-3]) ||\\n(eqstate == 4 && index == BigInt[208,209] && value == \
Int16[3,4]) ||\\n(eqstate == 5 && index == BigInt[208,209] && value == \
Int16[4,-3])\"\>"], "Output",
 CellLabel->
  "Out[100]=",ExpressionUUID->"4920cf0a-86d8-fd42-8eff-1e910557ebfe"]
}, Open  ]],

Cell["87", "Text",ExpressionUUID->"7d67bcb1-0e79-9a49-b02b-2fc44a548a49"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["z", "1"]}], "}"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"6", "+", 
      RowBox[{"8", "I"}]}], ")"}], 
    SubscriptBox[
     OverscriptBox["z", "_"], "1"]}]}], "]"}]], "Input",
 CellLabel->
  "In[117]:=",ExpressionUUID->"0e023bbc-3c00-3542-8fb8-afaefc6f2eb2"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[52,53] && value == \
Int16[3,4]) ||\\n(eqstate == 1 && index == BigInt[52,53] && value == \
Int16[4,-3]) ||\\n(eqstate == 2 && index == BigInt[63,66,67] && value == \
Int16[3,6,4]) ||\\n(eqstate == 3 && index == BigInt[63,66,67] && value == \
Int16[4,8,-3]) ||\\n(eqstate == 4 && index == BigInt[63,66,67] && value == \
Int16[-4,8,3]) ||\\n(eqstate == 5 && index == BigInt[63,66,67] && value == \
Int16[3,-6,4]) ||\\n(eqstate == 6 && index == BigInt[109,112] && value == \
Int16[3,4]) ||\\n(eqstate == 7 && index == BigInt[109,112] && value == \
Int16[4,-3])\"\>"], "Output",
 CellLabel->
  "Out[117]=",ExpressionUUID->"9d31c8b7-b779-8842-ae15-0349f6cf15ad"]
}, Open  ]],

Cell["88", "Text",ExpressionUUID->"e068525e-0055-534e-be37-551599d2447b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["z", "2"]}], "}"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"6", "+", 
      RowBox[{"8", "I"}]}], ")"}], 
    SubscriptBox[
     OverscriptBox["z", "_"], "1"]}]}], "]"}]], "Input",
 CellLabel->
  "In[101]:=",ExpressionUUID->"19c442d2-cc37-bb45-96db-08e76cb785f9"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[52,53] && value == \
Int16[3,4]) ||\\n(eqstate == 1 && index == BigInt[52,53] && value == \
Int16[4,-3]) ||\\n(eqstate == 2 && index == BigInt[61,62,64,65] && value == \
Int16[3,3,4,4]) ||\\n(eqstate == 3 && index == BigInt[61,62,64,65] && value \
== Int16[4,4,-3,-3]) ||\\n(eqstate == 4 && index == BigInt[61,62,64,65] && \
value == Int16[-4,4,-3,3]) ||\\n(eqstate == 5 && index == BigInt[61,62,64,65] \
&& value == Int16[3,-3,-4,4]) ||\\n(eqstate == 6 && index == BigInt[99,105] \
&& value == Int16[3,4]) ||\\n(eqstate == 7 && index == BigInt[99,105] && \
value == Int16[4,-3])\"\>"], "Output",
 CellLabel->
  "Out[101]=",ExpressionUUID->"9d500c9b-dadb-9d43-87ba-e4b8018cb149"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["More tests", "Subsubsection",ExpressionUUID->"d960f4e8-7c2b-af4d-a8e4-d614f87a28a0"],

Cell["91 - 95", "Text",ExpressionUUID->"efc30cfd-7b00-2946-a829-048c0b80c7fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"(", 
    RowBox[{"6", 
     SubscriptBox["x", "1"]}], ")"}]}], "]"}]], "Input",
 CellLabel->
  "In[102]:=",ExpressionUUID->"983274f2-e0e8-464c-bd96-092a9577ee26"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[57] && value == \
Int16[6])\"\>"], "Output",
 CellLabel->
  "Out[102]=",ExpressionUUID->"cffc51ba-9e3e-8b46-a996-66c317290a39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"6", "+", 
       RowBox[{"4", "I"}]}], ")"}], 
     SubscriptBox["z", "1"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"6", "-", 
       RowBox[{"4", "I"}]}], ")"}], 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}]}]}], "]"}]], "Input",
 CellLabel->
  "In[103]:=",ExpressionUUID->"f65e7dfe-247b-cd45-8228-ed7181d6cabd"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[52,53] && value == \
Int16[6,-4])\"\>"], "Output",
 CellLabel->
  "Out[103]=",ExpressionUUID->"9853c262-e3fa-1c4f-8772-b44b60d3d5f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"6", "+", 
      RowBox[{"4", "I"}]}], ")"}], 
    SubscriptBox["z", "1"]}]}], "]"}]], "Input",
 CellLabel->
  "In[104]:=",ExpressionUUID->"79640444-4624-ed47-8669-08165bfd5292"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[52,53] && value == \
Int16[3,-2]) ||\\n(eqstate == 1 && index == BigInt[52,53] && value == \
Int16[2,3])\"\>"], "Output",
 CellLabel->
  "Out[104]=",ExpressionUUID->"6c2473cb-4348-114f-9bf5-41ec5bd2d39a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"6", "+", 
       RowBox[{"4", "I"}]}], ")"}], 
     SubscriptBox["z", "1"]}], "+", 
    RowBox[{"8", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "+", 
    RowBox[{"2", "I", " ", 
     SubscriptBox["x", "3"]}]}]}], "]"}]], "Input",
 CellLabel->
  "In[105]:=",ExpressionUUID->"3a22314e-cccb-ca49-99e5-becfbf0abaac"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[52,53] && value == \
Int16[7,-2]) ||\\n(eqstate == 1 && index == BigInt[52,53,55] && value == \
Int16[2,-1,2])\"\>"], "Output",
 CellLabel->
  "Out[105]=",ExpressionUUID->"d4d8fca4-960f-aa4b-9142-db6f7a987ab9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{
    RowBox[{"-", "10"}], "-", 
    RowBox[{"2", 
     SubsuperscriptBox[
      OverscriptBox["z", "_"], "2", "2"]}], "+", 
    RowBox[{"8", 
     SubscriptBox["z", "2"], 
     SubscriptBox[
      OverscriptBox["z", "_"], "2"]}], "-", 
    RowBox[{"2", 
     SubsuperscriptBox["z", "2", "2"]}]}]}], "]"}]], "Input",
 CellLabel->
  "In[106]:=",ExpressionUUID->"f1e79281-2c45-e643-9d53-d3c9b6e05b37"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[49,58,59] && value == \
Int16[-10,-2,8])\"\>"], "Output",
 CellLabel->
  "Out[106]=",ExpressionUUID->"c27c77df-7cd4-6f4f-af78-8e5e93ca753b"]
}, Open  ]],

Cell["101 - 105", "Text",ExpressionUUID->"a3bce02a-cfbe-2549-b13f-0930398e1981"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "1"], ",", 
     SubsuperscriptBox["x", "2", "2"]}], "}"}], ",", 
   RowBox[{"(", 
    RowBox[{"6", 
     SubscriptBox["x", "1"]}], ")"}]}], "]"}]], "Input",
 CellLabel->
  "In[107]:=",ExpressionUUID->"a0eca070-8d11-724a-aea6-3bc9cefb4f6d"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[57] && value == Int16[6]) \
||\\n(eqstate == 1 && index == BigInt[93] && value == Int16[6]) ||\\n(eqstate \
== 2 && index == BigInt[205] && value == Int16[6]) ||\\n(eqstate == 3 && \
index == BigInt[213] && value == Int16[6]) ||\\n(eqstate == 4 && index == \
BigInt[535] && value == Int16[6]) ||\\n(eqstate == 5 && index == BigInt[1215] \
&& value == Int16[6])\"\>"], "Output",
 CellLabel->
  "Out[107]=",ExpressionUUID->"dbe04754-9084-e749-b874-417f6fdd015f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "1"], ",", 
     SubsuperscriptBox["x", "2", "2"]}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"6", "+", 
       RowBox[{"4", "I"}]}], ")"}], 
     SubscriptBox["z", "1"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"6", "-", 
       RowBox[{"4", "I"}]}], ")"}], 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}]}]}], "]"}]], "Input",
 CellLabel->
  "In[108]:=",ExpressionUUID->"45f7f64f-4b40-5d4b-8545-0f71c1c5091e"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[52,53] && value == \
Int16[6,-4]) ||\\n(eqstate == 1 && index == BigInt[88,89] && value == \
Int16[6,-4]) ||\\n(eqstate == 2 && index == BigInt[173,174] && value == \
Int16[6,-4]) ||\\n(eqstate == 3 && index == BigInt[208,209] && value == \
Int16[6,-4]) ||\\n(eqstate == 4 && index == BigInt[503,504] && value == \
Int16[6,-4]) ||\\n(eqstate == 5 && index == BigInt[1001,1002] && value == \
Int16[6,-4])\"\>"], "Output",
 CellLabel->
  "Out[108]=",ExpressionUUID->"10e2235b-03f1-914b-8e5f-eeeae8589aa7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "1"], ",", 
     SubsuperscriptBox["x", "2", "2"]}], "}"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"6", "+", 
      RowBox[{"4", "I"}]}], ")"}], 
    SubscriptBox["z", "1"]}]}], "]"}]], "Input",
 CellLabel->
  "In[109]:=",ExpressionUUID->"9919d434-43a4-8d4c-b3b5-0011a35d0b69"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[52,53] && value == \
Int16[3,-2]) ||\\n(eqstate == 1 && index == BigInt[52,53] && value == \
Int16[2,3]) ||\\n(eqstate == 2 && index == BigInt[88,89] && value == \
Int16[3,-2]) ||\\n(eqstate == 3 && index == BigInt[88,89] && value == \
Int16[2,3]) ||\\n(eqstate == 4 && index == BigInt[173,174] && value == \
Int16[3,-2]) ||\\n(eqstate == 5 && index == BigInt[173,174] && value == \
Int16[2,3]) ||\\n(eqstate == 6 && index == BigInt[208,209] && value == \
Int16[3,-2]) ||\\n(eqstate == 7 && index == BigInt[208,209] && value == \
Int16[2,3]) ||\\n(eqstate == 8 && index == BigInt[503,504] && value == \
Int16[3,-2]) ||\\n(eqstate == 9 && index == BigInt[503,504] && value == \
Int16[2,3]) ||\\n(eqstate == 10 && index == BigInt[1001,1002] && value == \
Int16[3,-2]) ||\\n(eqstate == 11 && index == BigInt[1001,1002] && value == \
Int16[2,3])\"\>"], "Output",
 CellLabel->
  "Out[109]=",ExpressionUUID->"1d4eb21e-921d-aa45-9ea9-348b9b67f856"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "1"], ",", 
     SubsuperscriptBox["x", "2", "2"]}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"6", "+", 
       RowBox[{"4", "I"}]}], ")"}], 
     SubscriptBox["z", "1"]}], "+", 
    RowBox[{"8", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "+", 
    RowBox[{"2", "I", " ", 
     SubscriptBox["x", "3"]}]}]}], "]"}]], "Input",
 CellLabel->
  "In[110]:=",ExpressionUUID->"cefd2be2-104a-1c4a-a8aa-c5528d710372"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[52,53] && value == \
Int16[7,-2]) ||\\n(eqstate == 1 && index == BigInt[52,53,55] && value == \
Int16[2,-1,2]) ||\\n(eqstate == 2 && index == BigInt[88,89] && value == \
Int16[7,-2]) ||\\n(eqstate == 3 && index == BigInt[88,89,91] && value == \
Int16[2,-1,2]) ||\\n(eqstate == 4 && index == BigInt[173,174] && value == \
Int16[7,-2]) ||\\n(eqstate == 5 && index == BigInt[173,174,176] && value == \
Int16[2,-1,2]) ||\\n(eqstate == 6 && index == BigInt[208,209] && value == \
Int16[7,-2]) ||\\n(eqstate == 7 && index == BigInt[208,209,211] && value == \
Int16[2,-1,2]) ||\\n(eqstate == 8 && index == BigInt[503,504] && value == \
Int16[7,-2]) ||\\n(eqstate == 9 && index == BigInt[503,504,506] && value == \
Int16[2,-1,2]) ||\\n(eqstate == 10 && index == BigInt[1001,1002] && value == \
Int16[7,-2]) ||\\n(eqstate == 11 && index == BigInt[1001,1002,1004] && value \
== Int16[2,-1,2])\"\>"], "Output",
 CellLabel->
  "Out[110]=",ExpressionUUID->"7a142b50-06c5-4543-a054-d3d71bffbce3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "1"], ",", 
     SubsuperscriptBox["x", "2", "2"]}], "}"}], ",", 
   RowBox[{
    RowBox[{"-", "10"}], "-", 
    RowBox[{"2", 
     SubsuperscriptBox[
      OverscriptBox["z", "_"], "2", "2"]}], "+", 
    RowBox[{"8", 
     SubscriptBox["z", "2"], 
     SubscriptBox[
      OverscriptBox["z", "_"], "2"]}], "-", 
    RowBox[{"2", 
     SubsuperscriptBox["z", "2", "2"]}]}]}], "]"}]], "Input",
 CellLabel->
  "In[111]:=",ExpressionUUID->"838a255c-0839-b448-a03c-47662d24fb35"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[49,58,59] && value == \
Int16[-10,-2,8]) ||\\n(eqstate == 1 && index == BigInt[57,178,179] && value \
== Int16[-10,-2,8]) ||\\n(eqstate == 2 && index == BigInt[85,396,397] && \
value == Int16[-10,-2,8]) ||\\n(eqstate == 3 && index == BigInt[93,508,509] \
&& value == Int16[-10,-2,8]) ||\\n(eqstate == 4 && index == \
BigInt[205,1188,1189] && value == Int16[-10,-2,8]) ||\\n(eqstate == 5 && \
index == BigInt[423,2232,2233] && value == Int16[-10,-2,8])\"\>"], "Output",
 CellLabel->
  "Out[111]=",ExpressionUUID->"a0eea388-d7be-4a40-96bb-ab016a7d19c0"]
}, Open  ]],

Cell["111 - 115", "Text",ExpressionUUID->"492fb47b-d70a-db49-95ed-a4ff03f2c8cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "1"], ",", 
     SubsuperscriptBox["z", "2", "2"]}], "}"}], ",", 
   RowBox[{"(", 
    RowBox[{"6", 
     SubscriptBox["x", "1"]}], ")"}]}], "]"}]], "Input",
 CellLabel->
  "In[112]:=",ExpressionUUID->"e75f3048-7b4e-184d-8bad-81ef4fe984c1"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[57] && value == Int16[6]) \
||\\n(eqstate == 1 && index == BigInt[93] && value == Int16[6]) ||\\n(eqstate \
== 2 && index == BigInt[213] && value == Int16[6]) ||\\n(eqstate == 3 && \
index == BigInt[178] && value == Int16[6]) ||\\n(eqstate == 4 && index == \
BigInt[180] && value == Int16[6]) ||\\n(eqstate == 5 && index == BigInt[508] \
&& value == Int16[6]) ||\\n(eqstate == 6 && index == BigInt[510] && value == \
Int16[6]) ||\\n(eqstate == 7 && index == BigInt[1008] && value == Int16[6])\"\
\>"], "Output",
 CellLabel->
  "Out[112]=",ExpressionUUID->"726089c0-621d-bd4c-b3d8-76e44e5f8290"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "1"], ",", 
     SubsuperscriptBox["z", "2", "2"]}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"6", "+", 
       RowBox[{"4", "I"}]}], ")"}], 
     SubscriptBox["z", "1"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"6", "-", 
       RowBox[{"4", "I"}]}], ")"}], 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}]}]}], "]"}]], "Input",
 CellLabel->
  "In[113]:=",ExpressionUUID->"ef3174c7-21bb-534f-8cc5-c2ab38223cb0"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[52,53] && value == \
Int16[6,-4]) ||\\n(eqstate == 1 && index == BigInt[88,89] && value == \
Int16[6,-4]) ||\\n(eqstate == 2 && index == BigInt[208,209] && value == \
Int16[6,-4]) ||\\n(eqstate == 3 && index == BigInt[98,100,104,106] && value \
== Int16[6,6,-4,-4]) ||\\n(eqstate == 4 && index == BigInt[98,100,104,106] && \
value == Int16[4,-4,-6,6]) ||\\n(eqstate == 5 && index == \
BigInt[428,430,434,436] && value == Int16[6,6,-4,-4]) ||\\n(eqstate == 6 && \
index == BigInt[428,430,434,436] && value == Int16[4,-4,-6,6]) ||\\n(eqstate \
== 7 && index == BigInt[552,567] && value == Int16[6,-4])\"\>"], "Output",
 CellLabel->
  "Out[113]=",ExpressionUUID->"ea7ea2cc-bb8c-9b4b-8d78-12dfad61c574"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "1"], ",", 
     SubsuperscriptBox["z", "2", "2"]}], "}"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"6", "+", 
      RowBox[{"4", "I"}]}], ")"}], 
    SubscriptBox["z", "1"]}]}], "]"}]], "Input",
 CellLabel->
  "In[114]:=",ExpressionUUID->"30e63239-adb5-ab43-ab19-66b756e2bfd2"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[52,53] && value == \
Int16[3,-2]) ||\\n(eqstate == 1 && index == BigInt[52,53] && value == \
Int16[2,3]) ||\\n(eqstate == 2 && index == BigInt[88,89] && value == \
Int16[3,-2]) ||\\n(eqstate == 3 && index == BigInt[88,89] && value == \
Int16[2,3]) ||\\n(eqstate == 4 && index == BigInt[208,209] && value == \
Int16[3,-2]) ||\\n(eqstate == 5 && index == BigInt[208,209] && value == \
Int16[2,3]) ||\\n(eqstate == 6 && index == BigInt[98,100,104,106] && value == \
Int16[3,3,-2,-2]) ||\\n(eqstate == 7 && index == BigInt[98,100,104,106] && \
value == Int16[2,2,3,3]) ||\\n(eqstate == 8 && index == \
BigInt[98,100,104,106] && value == Int16[2,-2,-3,3]) ||\\n(eqstate == 9 && \
index == BigInt[98,100,104,106] && value == Int16[-3,3,-2,2]) ||\\n(eqstate \
== 10 && index == BigInt[428,430,434,436] && value == Int16[3,3,-2,-2]) \
||\\n(eqstate == 11 && index == BigInt[428,430,434,436] && value == \
Int16[2,2,3,3]) ||\\n(eqstate == 12 && index == BigInt[428,430,434,436] && \
value == Int16[2,-2,-3,3]) ||\\n(eqstate == 13 && index == \
BigInt[428,430,434,436] && value == Int16[-3,3,-2,2]) ||\\n(eqstate == 14 && \
index == BigInt[552,567] && value == Int16[3,-2]) ||\\n(eqstate == 15 && \
index == BigInt[552,567] && value == Int16[2,3])\"\>"], "Output",
 CellLabel->
  "Out[114]=",ExpressionUUID->"ddd99682-1852-5849-9a9a-c87390a31fe2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "1"], ",", 
     SubsuperscriptBox["z", "2", "2"]}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"6", "+", 
       RowBox[{"4", "I"}]}], ")"}], 
     SubscriptBox["z", "1"]}], "+", 
    RowBox[{"8", 
     SubscriptBox[
      OverscriptBox["z", "_"], "1"]}], "+", 
    RowBox[{"2", "I", " ", 
     SubscriptBox["x", "3"]}]}]}], "]"}]], "Input",
 CellLabel->
  "In[115]:=",ExpressionUUID->"1e65a371-41bc-434a-8eca-388f0f3c58d3"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[52,53] && value == \
Int16[7,-2]) ||\\n(eqstate == 1 && index == BigInt[52,53,55] && value == \
Int16[2,-1,2]) ||\\n(eqstate == 2 && index == BigInt[88,89] && value == \
Int16[7,-2]) ||\\n(eqstate == 3 && index == BigInt[88,89,91] && value == \
Int16[2,-1,2]) ||\\n(eqstate == 4 && index == BigInt[208,209] && value == \
Int16[7,-2]) ||\\n(eqstate == 5 && index == BigInt[208,209,211] && value == \
Int16[2,-1,2]) ||\\n(eqstate == 6 && index == BigInt[98,100,104,106] && value \
== Int16[7,7,-2,-2]) ||\\n(eqstate == 7 && index == \
BigInt[98,100,104,106,129] && value == Int16[2,2,-1,-1,2]) ||\\n(eqstate == 8 \
&& index == BigInt[98,100,104,106] && value == Int16[2,-2,-7,7]) \
||\\n(eqstate == 9 && index == BigInt[98,100,104,106,131] && value == \
Int16[1,-1,-2,2,2]) ||\\n(eqstate == 10 && index == BigInt[428,430,434,436] \
&& value == Int16[7,7,-2,-2]) ||\\n(eqstate == 11 && index == \
BigInt[428,430,434,436,459] && value == Int16[2,2,-1,-1,2]) ||\\n(eqstate == \
12 && index == BigInt[428,430,434,436] && value == Int16[2,-2,-7,7]) \
||\\n(eqstate == 13 && index == BigInt[428,430,434,436,461] && value == \
Int16[1,-1,-2,2,2]) ||\\n(eqstate == 14 && index == BigInt[552,567] && value \
== Int16[7,-2]) ||\\n(eqstate == 15 && index == BigInt[552,567,672] && value \
== Int16[2,-1,2])\"\>"], "Output",
 CellLabel->
  "Out[115]=",ExpressionUUID->"0f1945b9-145e-f641-83f1-5e7870df1669"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateCodeEquality", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     SubscriptBox["x", "1"], ",", 
     SubsuperscriptBox["z", "2", "2"]}], "}"}], ",", 
   RowBox[{
    RowBox[{"-", "10"}], "-", 
    RowBox[{"2", 
     SubsuperscriptBox[
      OverscriptBox["z", "_"], "2", "2"]}], "+", 
    RowBox[{"8", 
     SubscriptBox["z", "2"], 
     SubscriptBox[
      OverscriptBox["z", "_"], "2"]}], "-", 
    RowBox[{"2", 
     SubsuperscriptBox["z", "2", "2"]}]}]}], "]"}]], "Input",
 CellLabel->
  "In[116]:=",ExpressionUUID->"db400a0c-4028-754d-9e5a-440a82a551bf"],

Cell[BoxData["\<\"(eqstate == 0 && index == BigInt[49,58,59] && value == \
Int16[-10,-2,8]) ||\\n(eqstate == 1 && index == BigInt[57,178,179] && value \
== Int16[-10,-2,8]) ||\\n(eqstate == 2 && index == BigInt[93,508,509] && \
value == Int16[-10,-2,8]) ||\\n(eqstate == 3 && index == \
BigInt[58,214,215,216] && value == Int16[-10,-2,8,-4]) ||\\n(eqstate == 4 && \
index == BigInt[60,217,218] && value == Int16[-10,8,-2]) ||\\n(eqstate == 5 \
&& index == BigInt[178,1006,1007,1008] && value == Int16[-10,-2,8,-4]) \
||\\n(eqstate == 6 && index == BigInt[180,1009,1010] && value == \
Int16[-10,8,-2]) ||\\n(eqstate == 7 && index == BigInt[216,1338,1339] && \
value == Int16[-10,-2,8])\"\>"], "Output",
 CellLabel->
  "Out[116]=",ExpressionUUID->"2212401f-e815-0f4e-b526-de5056428f9f"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{718.5, 735},
WindowMargins->{{-5.25, Automatic}, {Automatic, 0}},
Magnification:>1. Inherited,
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b9b69fe9-3544-064f-b741-58c08bf10c1a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 125, 2, 45, "Subsubsection",ExpressionUUID->"d2adc66b-9332-4297-80c4-829a104f5939",
 InitializationGroup->True],
Cell[708, 26, 243, 6, 81, "Text",ExpressionUUID->"7bcd1241-d3de-4dbb-9e28-a1d9ac19d3ba",
 InitializationGroup->True],
Cell[954, 34, 399301, 6567, 73, "Input",ExpressionUUID->"6aa69e89-79df-47c3-bd6a-43613b37fe48",
 InitializationGroup->True],
Cell[400258, 6603, 859, 27, 69, "Input",ExpressionUUID->"bb565efa-42d6-4be9-92e6-e3f8c80c767e",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[401154, 6635, 133, 2, 37, "Subsubsection",ExpressionUUID->"433c828a-0b3d-4517-a118-92c00fb255e9",
 InitializationGroup->True],
Cell[401290, 6639, 1006, 29, 88, "Input",ExpressionUUID->"4e56be59-eb2f-4deb-98cd-a2fda6516f4f",
 InitializationGroup->True],
Cell[402299, 6670, 205, 5, 30, "Input",ExpressionUUID->"4330540d-71a3-41fb-b120-0daa2e22a6aa",
 InitializationGroup->True],
Cell[402507, 6677, 274, 7, 28, "Input",ExpressionUUID->"831e8066-1c19-4cb7-abd4-c627a261f3d8",
 InitializationGroup->True],
Cell[402784, 6686, 3044, 86, 84, "Input",ExpressionUUID->"b93dfee4-df7e-4cb0-8480-7c1dac130bb4",
 InitializationGroup->True],
Cell[405831, 6774, 468, 12, 48, "Input",ExpressionUUID->"7ccd15c2-7997-c445-b907-0e14b139bd51"]
}, Closed]],
Cell[CellGroupData[{
Cell[406336, 6791, 97, 0, 37, "Subsubsection",ExpressionUUID->"065399bf-a2d8-4dba-8b47-f824092d622c"],
Cell[CellGroupData[{
Cell[406458, 6795, 324, 9, 28, "Input",ExpressionUUID->"5dc848ba-eb1e-4fbd-85ac-580434f02f2f"],
Cell[406785, 6806, 766, 22, 95, "Output",ExpressionUUID->"e5e43223-e48f-42c0-b8ce-65e19b5f79fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407588, 6833, 668, 19, 54, "Input",ExpressionUUID->"db9d8441-bec3-4220-9424-1af16a34a24b",
 InitializationCell->True],
Cell[408259, 6854, 415, 12, 70, "Output",ExpressionUUID->"c11749ad-3c88-5d4c-95fa-42e7c69992f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[408711, 6871, 798, 23, 28, "Input",ExpressionUUID->"be0ef48c-46bd-41e5-a8b0-c05b46d97a39"],
Cell[409512, 6896, 766, 22, 95, "Output",ExpressionUUID->"3f9b5161-636a-4ac9-a581-53f1f7393642"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410315, 6923, 324, 9, 28, "Input",ExpressionUUID->"36df0116-ee48-4895-817c-15e1b30dadca"],
Cell[410642, 6934, 766, 22, 95, "Output",ExpressionUUID->"fb3f779c-917f-4f41-bbda-462d22f1838f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411445, 6961, 573, 17, 54, "Input",ExpressionUUID->"7d4386c0-380b-45c3-b2a6-3a5f49053354",
 InitializationCell->True],
Cell[412021, 6980, 310, 9, 70, "Output",ExpressionUUID->"e336e6f2-c2b3-f944-ab7c-0c40a725d770"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412368, 6994, 798, 23, 28, "Input",ExpressionUUID->"d2d5c580-346e-408a-b858-39e713323f60"],
Cell[413169, 7019, 766, 22, 95, "Output",ExpressionUUID->"5a5c50ed-5344-41fa-b0f6-337e7c6b77a6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[413984, 7047, 164, 3, 91, "Section",ExpressionUUID->"53cf714f-f1a3-4dbf-b8c2-a0674fa3d4f3"],
Cell[CellGroupData[{
Cell[414173, 7054, 87, 0, 54, "Subsection",ExpressionUUID->"73e5c409-a556-af48-9dd5-0d67fa8c4eb5"],
Cell[414263, 7056, 317, 5, 58, "Text",ExpressionUUID->"53c070a4-1a98-2946-a39e-1d99b7421ac6"],
Cell[CellGroupData[{
Cell[414605, 7065, 3140, 86, 174, "Input",ExpressionUUID->"1e90f500-066f-3a4d-837d-1cf74b9b065c"],
Cell[417748, 7153, 1301, 41, 35, "Output",ExpressionUUID->"ca92db92-5e4e-8146-8305-10ebcc6e90a9"]
}, Open  ]],
Cell[419064, 7197, 139, 1, 35, "Text",ExpressionUUID->"5b56e47e-854b-fc48-a3b3-541aa3e5dce2"],
Cell[CellGroupData[{
Cell[419228, 7202, 381, 10, 31, "Input",ExpressionUUID->"ddcdd6fc-6005-0648-b033-343c42b83085"],
Cell[419612, 7214, 1567, 49, 34, "Output",ExpressionUUID->"97cc2924-abae-754b-aab2-d15bec3c68e0"]
}, Open  ]],
Cell[421194, 7266, 1597, 37, 107, "Text",ExpressionUUID->"9be94458-1ee3-b443-b5d2-a0e0d009e3b4"],
Cell[CellGroupData[{
Cell[422816, 7307, 349, 9, 28, "Input",ExpressionUUID->"30f6a6e4-4473-af4b-8c9e-284c6f810ce7"],
Cell[423168, 7318, 1176, 36, 34, "Output",ExpressionUUID->"7f3be01b-6e26-6f49-aa94-dca9eab4a748"]
}, Open  ]],
Cell[424359, 7357, 115, 0, 35, "Text",ExpressionUUID->"a005cd58-6603-fc4f-9546-9443280b05cc"],
Cell[CellGroupData[{
Cell[424499, 7361, 134, 0, 45, "Subsubsection",ExpressionUUID->"5ee824be-3043-484c-b69b-9abca1ccbb13"],
Cell[424636, 7363, 505, 7, 81, "Text",ExpressionUUID->"db3e7d3b-b241-6b4f-9a3c-1e64148c2fd8"],
Cell[CellGroupData[{
Cell[425166, 7374, 621, 18, 28, "Input",ExpressionUUID->"9abd8a04-2236-d748-8919-6ecd0ae95fca"],
Cell[425790, 7394, 3855, 128, 33, "Output",ExpressionUUID->"eebce50b-21e3-8445-8e1e-99f8a2a36425"]
}, Open  ]],
Cell[429660, 7525, 207, 3, 35, "Text",ExpressionUUID->"9ceb25af-6fcf-374d-abff-fc3df72453f3"],
Cell[CellGroupData[{
Cell[429892, 7532, 1106, 33, 30, "Input",ExpressionUUID->"7a91bd9b-4e26-5a43-8bc0-135ae1a8db4b"],
Cell[431001, 7567, 1976, 65, 33, "Output",ExpressionUUID->"84745770-5c10-5a48-b719-f4f9fa2b6011"]
}, Open  ]],
Cell[432992, 7635, 439, 6, 58, "Text",ExpressionUUID->"3b46185a-caa2-824c-9420-7e832b1f028c"],
Cell[CellGroupData[{
Cell[433456, 7645, 586, 18, 30, "Input",ExpressionUUID->"32b7a7d6-335d-9d42-afa8-409824383952"],
Cell[434045, 7665, 1919, 63, 33, "Output",ExpressionUUID->"0c7a8d29-8929-d244-8a6f-51802135e7fe"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[436013, 7734, 120, 0, 37, "Subsubsection",ExpressionUUID->"35ba9763-32b7-0941-a287-a1ac8125b073"],
Cell[436136, 7736, 277, 4, 35, "Text",ExpressionUUID->"580e8cd2-6f1f-fd4d-9054-c29f6abb3997"],
Cell[CellGroupData[{
Cell[436438, 7744, 1693, 47, 68, "Input",ExpressionUUID->"69f20ff3-9d81-a548-8db9-e15523e95091"],
Cell[438134, 7793, 3490, 109, 53, "Output",ExpressionUUID->"89b0fbbc-cf9a-8b4e-89e7-0478997e6425"]
}, Open  ]],
Cell[441639, 7905, 538, 15, 53, "Text",ExpressionUUID->"a4e62bfd-ff51-8f43-a17e-ce95d5af09f0"],
Cell[CellGroupData[{
Cell[442202, 7924, 954, 30, 30, "Input",ExpressionUUID->"aa077555-1b3b-1748-99bb-b470675ed1ec"],
Cell[443159, 7956, 2559, 85, 33, "Output",ExpressionUUID->"93bf1317-e3a2-9d4b-a88e-d5881f7fe55c"]
}, Open  ]],
Cell[445733, 8044, 105, 0, 35, "Text",ExpressionUUID->"93057b19-a0a7-644f-aabd-1fdbc611573b"],
Cell[CellGroupData[{
Cell[445863, 8048, 191, 4, 28, "Input",ExpressionUUID->"dd6b3e75-3517-2245-8d35-eea34e261991"],
Cell[446057, 8054, 2479, 83, 33, "Output",ExpressionUUID->"704e940b-48c2-0f47-b8b7-222d8936000a"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[448597, 8144, 87, 0, 38, "Subsection",ExpressionUUID->"8fa16236-1f8b-6347-b74b-57d78406e560"],
Cell[448687, 8146, 145, 1, 35, "Text",ExpressionUUID->"bb8aa0bb-6efa-3446-9f46-08e7f12b62df"],
Cell[448835, 8149, 2877, 74, 189, "Input",ExpressionUUID->"31b23969-fb3a-ae45-8de4-8f12ac3b9824"],
Cell[451715, 8225, 311, 4, 35, "Text",ExpressionUUID->"f8ee2cf7-2806-3c41-b6f3-f4be64ce4700"],
Cell[452029, 8231, 505, 14, 44, "Input",ExpressionUUID->"3f9d30d4-ac4e-7943-a2b3-eec6ef0d6a4c",
 InitializationCell->True],
Cell[452537, 8247, 6726, 167, 358, "Input",ExpressionUUID->"305a6ac0-9ef2-114d-acf3-1a0657bccd5a"],
Cell[459266, 8416, 406, 6, 81, "Text",ExpressionUUID->"d01afc7e-11de-ce45-b289-6983257be63a"],
Cell[459675, 8424, 1459, 43, 121, "Input",ExpressionUUID->"ed856af2-3686-454b-8175-70fdb8ed5e54",
 InitializationCell->True],
Cell[461137, 8469, 6337, 173, 316, "Input",ExpressionUUID->"d253fb69-7538-f348-978e-918b4ab197fe"],
Cell[467477, 8644, 4763, 116, 412, "Input",ExpressionUUID->"d6450db8-042c-9e4b-b1e0-b7bd216dcf4b"],
Cell[CellGroupData[{
Cell[472265, 8764, 1255, 40, 49, "Input",ExpressionUUID->"6bc41eea-29ee-a04e-bdff-672d5a761978"],
Cell[473523, 8806, 571, 8, 128, "Output",ExpressionUUID->"7937fd57-5677-5f4b-a706-db5dd649a4d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474131, 8819, 1298, 40, 49, "Input",ExpressionUUID->"42e178a0-ab7e-9e46-b157-a8f30d0ff0fa"],
Cell[475432, 8861, 623, 8, 128, "Output",ExpressionUUID->"a320570d-14ac-d74d-9d7e-68783a60d947"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476092, 8874, 100, 0, 45, "Subsubsection",ExpressionUUID->"01c4b7bd-c30f-0240-9f4d-5998877d146f"],
Cell[CellGroupData[{
Cell[476217, 8878, 333, 9, 28, "Input",ExpressionUUID->"289e558f-ab0d-bb41-b351-8a7212e157b6"],
Cell[476553, 8889, 396, 5, 128, "Output",ExpressionUUID->"f6e94eea-f8bc-1342-8583-72a101f38ad0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476986, 8899, 356, 9, 31, "Input",ExpressionUUID->"1226f393-5965-6741-a75e-6ca8e413ba49"],
Cell[477345, 8910, 427, 11, 34, "Output",ExpressionUUID->"806a5721-f7b7-2044-aae3-b4b36780f07a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477809, 8926, 845, 27, 43, "Input",ExpressionUUID->"4103eb40-1c6c-4e40-b190-0d41c622edca"],
Cell[478657, 8955, 792, 25, 32, "Output",ExpressionUUID->"1233bae1-236e-b740-b73f-9302f0b61769"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[479510, 8987, 87, 0, 38, "Subsection",ExpressionUUID->"507af60e-e4bb-4784-9df2-44f8796bd939"],
Cell[CellGroupData[{
Cell[479622, 8991, 108, 0, 45, "Subsubsection",ExpressionUUID->"1910b6a8-ab11-1641-a6a4-f6bfb31993aa"],
Cell[479733, 8993, 88, 0, 35, "Text",ExpressionUUID->"1cfc0119-6224-1146-bcc6-4c2eae368de7"],
Cell[CellGroupData[{
Cell[479846, 8997, 983, 33, 31, "Input",ExpressionUUID->"8ba7c122-253b-4b57-af44-fa440e46d957"],
Cell[480832, 9032, 2889, 38, 813, "Output",ExpressionUUID->"7e182dcd-464b-f54c-b05b-be98ebb47303"]
}, Closed]],
Cell[CellGroupData[{
Cell[483758, 9075, 2218, 73, 119, "Input",ExpressionUUID->"8ce63b4f-0f88-4886-825d-73cb401d13f2"],
Cell[485979, 9150, 6960, 93, 1688, "Output",ExpressionUUID->"f6248117-45a4-bd44-8125-a700d278c700"]
}, Closed]],
Cell[CellGroupData[{
Cell[492976, 9248, 3062, 99, 156, "Input",ExpressionUUID->"9283bcaf-c85e-46ef-b754-a6052eb563c8"],
Cell[496041, 9349, 9654, 136, 3305, "Output",ExpressionUUID->"dac7d82c-b773-9e41-9801-3240d1a8be16"]
}, Closed]],
Cell[CellGroupData[{
Cell[505732, 9490, 3122, 100, 156, "Input",ExpressionUUID->"5e1b5531-11d2-405e-8519-0693fd21e630"],
Cell[508857, 9592, 11527, 160, 3876, "Output",ExpressionUUID->"d5954d86-3d82-6346-8754-f127dcb177d1"]
}, Closed]],
Cell[520399, 9755, 91, 0, 31, "Text",ExpressionUUID->"dee011a6-1da2-3447-97e6-1ddaa299b9e1"],
Cell[CellGroupData[{
Cell[520515, 9759, 983, 33, 31, "Input",ExpressionUUID->"aaa08ca9-425e-5447-b120-b2b382c17574"],
Cell[521501, 9794, 5977, 84, 1802, "Output",ExpressionUUID->"3fd7a9a1-43c8-af47-8b55-409170025410"]
}, Closed]],
Cell[CellGroupData[{
Cell[527515, 9883, 2218, 73, 119, "Input",ExpressionUUID->"55d26e74-e959-6141-b67a-4a0575684668"],
Cell[529736, 9958, 14850, 211, 4713, "Output",ExpressionUUID->"77ea988c-385e-b14c-b9fd-b260babc5df3"]
}, Closed]],
Cell[CellGroupData[{
Cell[544623, 10174, 3062, 99, 156, "Input",ExpressionUUID->"d99de351-d3ff-4844-8a3a-5766c0088ffa"],
Cell[547688, 10275, 17921, 253, 5532, "Output",ExpressionUUID->"0d320533-77df-544f-88d4-fae77246d66c"]
}, Closed]],
Cell[CellGroupData[{
Cell[565646, 10533, 1045, 34, 49, "Input",ExpressionUUID->"a8cb2f8b-17dc-264b-a6fb-b90652bc3138"],
Cell[566694, 10569, 6411, 88, 1802, "Output",ExpressionUUID->"1066f6b6-c2eb-9541-8927-8780fe514fb9"]
}, Closed]],
Cell[CellGroupData[{
Cell[573142, 10662, 2278, 74, 119, "Input",ExpressionUUID->"ea53f7fe-3961-6a4e-aaea-a8676f68512e"],
Cell[575423, 10738, 15844, 223, 5151, "Output",ExpressionUUID->"3d756d3c-9a46-dc46-84a5-cc54ac3c7068"]
}, Closed]],
Cell[CellGroupData[{
Cell[591304, 10966, 3122, 100, 156, "Input",ExpressionUUID->"25a8bca2-373e-8148-831d-cd0e5f4c6d46"],
Cell[594429, 11068, 20211, 284, 6502, "Output",ExpressionUUID->"ec147eff-1b18-084c-914a-a107e6e25ffd"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[614689, 11358, 94, 0, 45, "Subsubsection",ExpressionUUID->"3cf34e75-6466-1743-85f3-31731d3bda64"],
Cell[CellGroupData[{
Cell[614808, 11362, 406, 12, 28, "Input",ExpressionUUID->"73b68598-b470-44ef-8db1-7689bf73713e"],
Cell[615217, 11376, 4458, 77, 431, "Output",ExpressionUUID->"014b69ca-c025-4655-b9ee-3e239ce49bd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[619712, 11458, 817, 26, 48, "Input",ExpressionUUID->"70c1c8e2-fd99-4a1d-831e-31c606955de1"],
Cell[620532, 11486, 6995, 148, 431, "Output",ExpressionUUID->"4abe0f89-944b-4a4f-9627-48e59781df06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[627564, 11639, 460, 14, 38, "Input",ExpressionUUID->"410c3838-8fdb-479a-9f75-62beeb9395aa"],
Cell[628027, 11655, 297, 9, 47, "Output",ExpressionUUID->"6373520c-c5ed-4076-953a-3fb68a8d2b69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[628361, 11669, 367, 9, 28, "Input",ExpressionUUID->"89812359-a56c-4932-8487-c674fa8fa127"],
Cell[628731, 11680, 411, 12, 47, "Output",ExpressionUUID->"236ef5fa-984c-47c1-8ac6-18b6c37e534a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[629179, 11697, 893, 24, 105, "Input",ExpressionUUID->"e9af9045-0ad9-430d-8ffa-e2948dae5de3"],
Cell[630075, 11723, 1647, 37, 229, "Output",ExpressionUUID->"5b8b850a-8ee6-480a-8d2f-e19446229ede"]
}, Open  ]],
Cell[CellGroupData[{
Cell[631759, 11765, 254, 7, 28, "Input",ExpressionUUID->"c951dac2-11a2-42d8-b170-c8eae30dff6c"],
Cell[632016, 11774, 113, 2, 32, "Output",ExpressionUUID->"1584afee-5bc7-49f4-93d7-5e87bb4760ce"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[632202, 11784, 111, 0, 67, "Section",ExpressionUUID->"61c6bc7b-6b8c-164a-b4c6-341e881f5157"],
Cell[CellGroupData[{
Cell[632338, 11788, 87, 0, 54, "Subsection",ExpressionUUID->"d0a21168-ba17-3840-a3ab-a703408de620"],
Cell[632428, 11790, 301, 4, 58, "Text",ExpressionUUID->"47a74c9a-c081-8f47-b0d2-25376e11873b"],
Cell[CellGroupData[{
Cell[632754, 11798, 112, 0, 45, "Subsubsection",ExpressionUUID->"7fcde382-0a4d-494b-a16a-43b328cf04f7"],
Cell[CellGroupData[{
Cell[632891, 11802, 5778, 149, 202, "Input",ExpressionUUID->"6c1cbd34-893d-3343-91ea-0f07008df817"],
Cell[638672, 11953, 1110, 36, 35, "Output",ExpressionUUID->"53ff8740-d985-c246-aaf1-9ee627fd1459"]
}, Open  ]],
Cell[639797, 11992, 105, 0, 35, "Text",ExpressionUUID->"4a733540-ea41-a848-ad83-2ed053a199c0"],
Cell[CellGroupData[{
Cell[639927, 11996, 381, 10, 31, "Input",ExpressionUUID->"a3d2def2-4790-0f49-86db-17dd83421a51"],
Cell[640311, 12008, 4369, 145, 55, "Output",ExpressionUUID->"95fc0cff-8930-d24d-8486-a63b79fffd71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644717, 12158, 576, 17, 28, "Input",ExpressionUUID->"6408a21d-76a7-eb4a-9ac4-1e831489787d"],
Cell[645296, 12177, 13210, 428, 52, "Output",ExpressionUUID->"a45fc74d-1d17-5548-9ec9-120ebcff31b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[658543, 12610, 432, 13, 28, "Input",ExpressionUUID->"a6ec5e1b-0367-f44e-aa80-0937aa6424e4"],
Cell[658978, 12625, 7440, 241, 52, "Output",ExpressionUUID->"59f3631c-4e0f-8d42-bff2-7385d0ca2c25"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[666467, 12872, 124, 0, 37, "Subsubsection",ExpressionUUID->"ccc0a6bc-2818-7043-bfbf-91a7401a39a0"],
Cell[666594, 12874, 205, 3, 35, "Text",ExpressionUUID->"8fb3c9c6-f80a-0d46-ab6e-510a762cd90e"],
Cell[CellGroupData[{
Cell[666824, 12881, 7497, 194, 209, "Input",ExpressionUUID->"dda6ffa4-0415-6b4d-b6f6-8d70f36c1d89"],
Cell[674324, 13077, 2272, 74, 35, "Output",ExpressionUUID->"b23988a0-6f1e-0e46-8c9e-433a450a3e17"]
}, Open  ]],
Cell[676611, 13154, 105, 0, 35, "Text",ExpressionUUID->"17943fa7-53c7-3944-88de-2aff67e6e75f"],
Cell[CellGroupData[{
Cell[676741, 13158, 381, 10, 31, "Input",ExpressionUUID->"5ce124d2-fb5c-2843-be67-d4a5782576a8"],
Cell[677125, 13170, 7394, 247, 74, "Output",ExpressionUUID->"73969aa0-265d-a343-b96d-2dc75413abd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[684556, 13422, 576, 17, 28, "Input",ExpressionUUID->"3ced873f-389d-8848-9d72-7286488d000c"],
Cell[685135, 13441, 17442, 576, 90, "Output",ExpressionUUID->"f7ed3f53-6150-dd46-8fa4-e12c63e7b044"]
}, Open  ]],
Cell[CellGroupData[{
Cell[702614, 14022, 432, 13, 28, "Input",ExpressionUUID->"f857df35-ded6-dc48-8356-a140bca3835a"],
Cell[703049, 14037, 10474, 347, 52, "Output",ExpressionUUID->"7149342f-40e2-ff4a-a745-c72c4346293a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[713572, 14390, 121, 0, 37, "Subsubsection",ExpressionUUID->"3d4f9063-e6af-de45-9737-c5039f72b8df"],
Cell[713696, 14392, 190, 3, 35, "Text",ExpressionUUID->"a6cfe6a7-1fb4-8f4d-bad9-1a7740d4320f"],
Cell[CellGroupData[{
Cell[713911, 14399, 7142, 183, 209, "Input",ExpressionUUID->"8b411604-88dc-fa49-9a6d-e5dfce21694f"],
Cell[721056, 14584, 901, 30, 32, "Output",ExpressionUUID->"9d6632e8-a62e-9d41-b983-1bd1825a353a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[721994, 14619, 381, 10, 31, "Input",ExpressionUUID->"b0c11f17-c8e0-9448-9fd2-9ac595606ebd"],
Cell[722378, 14631, 1315, 42, 34, "Output",ExpressionUUID->"6d39660b-d46f-8d45-b359-2740922fb246"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[723754, 14680, 87, 0, 38, "Subsection",ExpressionUUID->"b87d660d-7450-7d47-9abc-77f38bd62d3c"],
Cell[723844, 14682, 262, 4, 35, "Text",ExpressionUUID->"f8a50d30-2dd3-994b-8bdf-730a0d7ea1a8"],
Cell[724109, 14688, 10202, 240, 575, "Input",ExpressionUUID->"54c544d3-f141-5a44-8eab-5f0f82f8016f"],
Cell[734314, 14930, 4421, 107, 355, "Input",ExpressionUUID->"21ab8329-c944-1343-8181-fc83941f839e"]
}, Closed]],
Cell[CellGroupData[{
Cell[738772, 15042, 87, 0, 38, "Subsection",ExpressionUUID->"e4ebe377-fc57-cd4c-a50e-72f8bdeacc7b"],
Cell[CellGroupData[{
Cell[738884, 15046, 101, 0, 45, "Subsubsection",ExpressionUUID->"9bf25f91-62dc-cb49-9084-b4ecc9308558"],
Cell[738988, 15048, 73, 0, 35, "Text",ExpressionUUID->"e857f1ff-0fc9-7943-9dd4-6d3ddd184439"],
Cell[CellGroupData[{
Cell[739086, 15052, 292, 8, 28, "Input",ExpressionUUID->"39ead2e6-7175-5a4e-a2c1-d50515d7efb2"],
Cell[739381, 15062, 305, 3, 71, "Output",ExpressionUUID->"c661c96a-1ef6-524a-b743-2326c5b5dc3d"]
}, Open  ]],
Cell[739701, 15068, 73, 0, 35, "Text",ExpressionUUID->"dd9584bc-865d-4a46-b7cc-e674bdc1f227"],
Cell[CellGroupData[{
Cell[739799, 15072, 292, 8, 28, "Input",ExpressionUUID->"4ad63bf6-fe8e-164c-8e37-77bd1c563fc1"],
Cell[740094, 15082, 371, 4, 90, "Output",ExpressionUUID->"7c99343a-06b8-1849-8d61-72bfbfae3ca5"]
}, Open  ]],
Cell[740480, 15089, 73, 0, 35, "Text",ExpressionUUID->"be8306e9-ebbd-de4e-8ae6-e1ecf8c12430"],
Cell[CellGroupData[{
Cell[740578, 15093, 542, 18, 28, "Input",ExpressionUUID->"765f4a42-3194-164f-acf8-4c7efaad13a2"],
Cell[741123, 15113, 323, 4, 71, "Output",ExpressionUUID->"0c64ea7c-9c48-bd46-80e1-26f43aba7b40"]
}, Open  ]],
Cell[741461, 15120, 73, 0, 35, "Text",ExpressionUUID->"84dbd519-8103-e740-aebf-30505808c55c"],
Cell[CellGroupData[{
Cell[741559, 15124, 542, 18, 28, "Input",ExpressionUUID->"9b666341-4497-044c-8820-336908141da4"],
Cell[742104, 15144, 407, 5, 90, "Output",ExpressionUUID->"df0641bf-7bac-0142-a321-00addf6ed741"]
}, Open  ]],
Cell[742526, 15152, 73, 0, 35, "Text",ExpressionUUID->"f30a2e01-76dd-a34f-93df-0e4f43f5b8ba"],
Cell[CellGroupData[{
Cell[742624, 15156, 542, 18, 28, "Input",ExpressionUUID->"e72594bb-a185-b943-b3a2-34e23ffcdf47"],
Cell[743169, 15176, 415, 5, 90, "Output",ExpressionUUID->"70514792-9ca1-a141-845a-3da450375cee"]
}, Open  ]],
Cell[743599, 15184, 73, 0, 35, "Text",ExpressionUUID->"8a1b5b8d-d14f-f945-a993-9a5794deef1d"],
Cell[CellGroupData[{
Cell[743697, 15188, 395, 13, 28, "Input",ExpressionUUID->"6df35e46-6b5e-e747-98aa-e8b5c522d15c"],
Cell[744095, 15203, 545, 8, 128, "Output",ExpressionUUID->"4920cf0a-86d8-fd42-8eff-1e910557ebfe"]
}, Open  ]],
Cell[744655, 15214, 73, 0, 35, "Text",ExpressionUUID->"7d67bcb1-0e79-9a49-b02b-2fc44a548a49"],
Cell[CellGroupData[{
Cell[744753, 15218, 395, 13, 28, "Input",ExpressionUUID->"0e023bbc-3c00-3542-8fb8-afaefc6f2eb2"],
Cell[745151, 15233, 709, 10, 166, "Output",ExpressionUUID->"9d31c8b7-b779-8842-ae15-0349f6cf15ad"]
}, Open  ]],
Cell[745875, 15246, 73, 0, 35, "Text",ExpressionUUID->"e068525e-0055-534e-be37-551599d2447b"],
Cell[CellGroupData[{
Cell[745973, 15250, 395, 13, 28, "Input",ExpressionUUID->"19c442d2-cc37-bb45-96db-08e76cb785f9"],
Cell[746371, 15265, 730, 10, 166, "Output",ExpressionUUID->"9d500c9b-dadb-9d43-87ba-e4b8018cb149"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[747150, 15281, 90, 0, 37, "Subsubsection",ExpressionUUID->"d960f4e8-7c2b-af4d-a8e4-d614f87a28a0"],
Cell[747243, 15283, 78, 0, 35, "Text",ExpressionUUID->"efc30cfd-7b00-2946-a829-048c0b80c7fb"],
Cell[CellGroupData[{
Cell[747346, 15287, 272, 8, 28, "Input",ExpressionUUID->"983274f2-e0e8-464c-bd96-092a9577ee26"],
Cell[747621, 15297, 178, 3, 32, "Output",ExpressionUUID->"cffc51ba-9e3e-8b46-a996-66c317290a39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[747836, 15305, 496, 17, 28, "Input",ExpressionUUID->"f65e7dfe-247b-cd45-8228-ed7181d6cabd"],
Cell[748335, 15324, 184, 3, 32, "Output",ExpressionUUID->"9853c262-e3fa-1c4f-8772-b44b60d3d5f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[748556, 15332, 319, 10, 28, "Input",ExpressionUUID->"79640444-4624-ed47-8669-08165bfd5292"],
Cell[748878, 15344, 255, 4, 52, "Output",ExpressionUUID->"6c2473cb-4348-114f-9bf5-41ec5bd2d39a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[749170, 15353, 485, 16, 28, "Input",ExpressionUUID->"3a22314e-cccb-ca49-99e5-becfbf0abaac"],
Cell[749658, 15371, 261, 4, 52, "Output",ExpressionUUID->"d4d8fca4-960f-aa4b-9142-db6f7a987ab9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[749956, 15380, 507, 16, 31, "Input",ExpressionUUID->"f1e79281-2c45-e643-9d53-d3c9b6e05b37"],
Cell[750466, 15398, 191, 3, 32, "Output",ExpressionUUID->"c27c77df-7cd4-6f4f-af78-8e5e93ca753b"]
}, Open  ]],
Cell[750672, 15404, 80, 0, 35, "Text",ExpressionUUID->"a3bce02a-cfbe-2549-b13f-0930398e1981"],
Cell[CellGroupData[{
Cell[750777, 15408, 367, 11, 31, "Input",ExpressionUUID->"a0eca070-8d11-724a-aea6-3bc9cefb4f6d"],
Cell[751147, 15421, 511, 7, 128, "Output",ExpressionUUID->"dbe04754-9084-e749-b874-417f6fdd015f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[751695, 15433, 591, 20, 31, "Input",ExpressionUUID->"45f7f64f-4b40-5d4b-8545-0f71c1c5091e"],
Cell[752289, 15455, 554, 8, 128, "Output",ExpressionUUID->"10e2235b-03f1-914b-8e5f-eeeae8589aa7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[752880, 15468, 414, 13, 31, "Input",ExpressionUUID->"9919d434-43a4-8d4c-b3b5-0011a35d0b69"],
Cell[753297, 15483, 992, 14, 242, "Output",ExpressionUUID->"1d4eb21e-921d-aa45-9ea9-348b9b67f856"]
}, Open  ]],
Cell[CellGroupData[{
Cell[754326, 15502, 580, 19, 31, "Input",ExpressionUUID->"cefd2be2-104a-1c4a-a8aa-c5528d710372"],
Cell[754909, 15523, 1033, 14, 242, "Output",ExpressionUUID->"7a142b50-06c5-4543-a054-d3d71bffbce3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[755979, 15542, 602, 19, 31, "Input",ExpressionUUID->"838a255c-0839-b448-a03c-47662d24fb35"],
Cell[756584, 15563, 602, 8, 128, "Output",ExpressionUUID->"a0eea388-d7be-4a40-96bb-ab016a7d19c0"]
}, Open  ]],
Cell[757201, 15574, 80, 0, 35, "Text",ExpressionUUID->"492fb47b-d70a-db49-95ed-a4ff03f2c8cc"],
Cell[CellGroupData[{
Cell[757306, 15578, 367, 11, 31, "Input",ExpressionUUID->"e75f3048-7b4e-184d-8bad-81ef4fe984c1"],
Cell[757676, 15591, 645, 9, 166, "Output",ExpressionUUID->"726089c0-621d-bd4c-b3d8-76e44e5f8290"]
}, Open  ]],
Cell[CellGroupData[{
Cell[758358, 15605, 591, 20, 31, "Input",ExpressionUUID->"ef3174c7-21bb-534f-8cc5-c2ab38223cb0"],
Cell[758952, 15627, 750, 10, 242, "Output",ExpressionUUID->"ea7ea2cc-bb8c-9b4b-8d78-12dfad61c574"]
}, Open  ]],
Cell[CellGroupData[{
Cell[759739, 15642, 414, 13, 31, "Input",ExpressionUUID->"30e63239-adb5-ab43-ab19-66b756e2bfd2"],
Cell[760156, 15657, 1388, 19, 451, "Output",ExpressionUUID->"ddd99682-1852-5849-9a9a-c87390a31fe2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[761581, 15681, 580, 19, 31, "Input",ExpressionUUID->"1e65a371-41bc-434a-8eca-388f0f3c58d3"],
Cell[762164, 15702, 1444, 20, 470, "Output",ExpressionUUID->"0f1945b9-145e-f641-83f1-5e7870df1669"]
}, Open  ]],
Cell[CellGroupData[{
Cell[763645, 15727, 602, 19, 31, "Input",ExpressionUUID->"db400a0c-4028-754d-9e5a-440a82a551bf"],
Cell[764250, 15748, 784, 11, 204, "Output",ExpressionUUID->"2212401f-e815-0f4e-b526-de5056428f9f"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

